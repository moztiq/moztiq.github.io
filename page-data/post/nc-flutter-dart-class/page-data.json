{"componentChunkName":"component---src-pages-post-contentful-moztiq-blog-slug-tsx","path":"/post/nc-flutter-dart-class/","result":{"data":{"contentfulMoztiqBlog":{"id":"f58804ae-1011-537b-ab59-f91d20c0d9cc","title":"[노마드코더 플러터] Dart Classes","slug":"nc-flutter-dart-class","category":"tech","releaseDate":"2023-11-16T00:00+09:00","headerImage":{"url":"https://images.ctfassets.net/vpyfljks33op/6Fp0DvO0YB7DvuyEAV1RC3/7232b988673f1b5632d7ae1a84be3034/Screen_Shot_2021-02-10_at_9.40.36_AM.png"},"contents":{"childMarkdownRemark":{"html":"<h3 id=\"dart-class-기본-사용법\" style=\"position:relative;\"><a href=\"#dart-class-%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"dart class 기본 사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dart Class 기본 사용법</h3>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Player</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">'moz'</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// class 에서 property 를 선언할 때는 타입을 사용한다. (↔ function 에서 variable 을 사용할 때는 var )</span>\n  <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> nickname <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">'moz'</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 변경할 수 없게 final 로 선언</span>\n  int xp <span class=\"token operator\">=</span> <span class=\"token number\">1500</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">void</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Hi my name is </span><span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token expression\">name</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// this 를 사용하지 않아도 됨</span>\n\n    <span class=\"token keyword\">var</span> name <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">'moz'</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Hi my name is </span><span class=\"token interpolation\"><span class=\"token punctuation\">${</span><span class=\"token expression\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 동일한 이름의 variable 이 method 내에 있을 경우는 this 로 참조 </span>\n\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> player <span class=\"token operator\">=</span> <span class=\"token class-name\">Player</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// new 를 붙여도 되지만 없어도 됨</span>\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>player<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// moz</span>\n  player<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">'tiq'</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>player<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// tiq</span>\n\n  player<span class=\"token punctuation\">.</span>nickname <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">'tiq'</span></span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error</span>\n\n  player<span class=\"token punctuation\">.</span><span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"constructor-생성자\" style=\"position:relative;\"><a href=\"#constructor-%EC%83%9D%EC%84%B1%EC%9E%90\" aria-label=\"constructor 생성자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Constructor (생성자)</h3>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Player</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// All final variables must be initialized, but 'name' isn't.</span>\n  int xp<span class=\"token punctuation\">;</span> <span class=\"token comment\">// Non-nullable instance field 'xp' must be initialized.</span>\n\n  <span class=\"token class-name\">Player</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> int xp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// constructor</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'name' can't be used as a setter because it's final.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xp <span class=\"token operator\">=</span> xp<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>Error 유형 (아래 3가지 모두 해당) : <a href=\"https://dart.dev/tools/diagnostic-messages?utm_source=dartdev&#x26;utm_medium=redir&#x26;utm_id=diagcode&#x26;utm_content=not_initialized_non_nullable_instance_field#not_initialized_non_nullable_instance_field\">Non-nullable instance field {0} must be initialized.</a>\n<ul>\n<li>null 이 될 수 없는 유형의 타입인 경우</li>\n<li>초기화되지 않은 경우</li>\n<li>late 로 처리되지 않은 경우</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token comment\">// late 로 처리를 하면 위에서 발생한 에러가 해결된다.</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Player</span> <span class=\"token punctuation\">{</span>\n  late <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n  late int xp<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// constructor</span>\n  <span class=\"token class-name\">Player</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> int xp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xp <span class=\"token operator\">=</span> xp<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 훨씬 간결해진 표현</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Player</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\">// late 도 제거할 수 있다.</span>\n  <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n  int xp<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// constructor</span>\n  <span class=\"token class-name\">Player</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 중복선언된 타입을 제거할 수 있다.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"named-constructor-parameters\" style=\"position:relative;\"><a href=\"#named-constructor-parameters\" aria-label=\"named constructor parameters permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Named Constructor Parameters</h3>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Player</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n  int xp<span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">String</span> team<span class=\"token punctuation\">;</span>\n  int age<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// The parameter {0} can't have a value of 'null' because of its type, but the implicit default value is 'null'.</span>\n  <span class=\"token comment\">// Positional Constructor 에서 Named Constructor 로 변경하면 에러가 발생하게 되는데 required 키워드를 붙임으로써 해결</span>\n  <span class=\"token class-name\">Player</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    required <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n    required <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xp<span class=\"token punctuation\">,</span>\n    required <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>team<span class=\"token punctuation\">,</span>\n    required <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// 파라미터 순서와 상관없이 값을 입력할 수 있음</span>\n  <span class=\"token keyword\">var</span> player <span class=\"token operator\">=</span> <span class=\"token class-name\">Player</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'moz'</span></span><span class=\"token punctuation\">,</span> xp<span class=\"token punctuation\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> team<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'art'</span></span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span> <span class=\"token number\">13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> player2 <span class=\"token operator\">=</span> <span class=\"token class-name\">Player</span><span class=\"token punctuation\">(</span>team<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'tho'</span></span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'ben'</span></span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> xp<span class=\"token punctuation\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"named-constructor\" style=\"position:relative;\"><a href=\"#named-constructor\" aria-label=\"named constructor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Named Constructor</h3>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Player</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n  int xp<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">String</span> team<span class=\"token punctuation\">;</span>\n\n  <span class=\"token class-name\">Player</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    required <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n    required <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xp<span class=\"token punctuation\">,</span>\n    required <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>team<span class=\"token punctuation\">,</span>\n    required <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// team, xp 에 기본값을 설정한 Named Constructor with named parameters</span>\n  <span class=\"token class-name\">Player</span><span class=\"token punctuation\">.</span><span class=\"token function\">createBluePlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>required <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> required int age<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>team <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">'blue'</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// team, xp 에 기본값을 설정한 Named Constructor with positional parameters</span>\n  <span class=\"token class-name\">Player</span><span class=\"token punctuation\">.</span><span class=\"token function\">createRedPlayer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> int age<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>team <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">'red'</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> player <span class=\"token operator\">=</span> <span class=\"token class-name\">Player</span><span class=\"token punctuation\">.</span><span class=\"token function\">createBluePlayer</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'moz'</span></span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">:</span> <span class=\"token number\">13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> player2 <span class=\"token operator\">=</span> <span class=\"token class-name\">Player</span><span class=\"token punctuation\">.</span><span class=\"token function\">createRedPlayer</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'ben'</span></span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"named-constructor-를-이용한-api-연동-예시\" style=\"position:relative;\"><a href=\"#named-constructor-%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-api-%EC%97%B0%EB%8F%99-%EC%98%88%EC%8B%9C\" aria-label=\"named constructor 를 이용한 api 연동 예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Named Constructor 를 이용한 API 연동 예시</h3>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Player</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n  int xp<span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">String</span> team<span class=\"token punctuation\">;</span>\n\n  <span class=\"token class-name\">Player</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromJson</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">dynamic</span><span class=\"token punctuation\">></span></span> playerJson<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">:</span> name <span class=\"token operator\">=</span> playerJson<span class=\"token punctuation\">[</span><span class=\"token string-literal\"><span class=\"token string\">'name'</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        xp <span class=\"token operator\">=</span> playerJson<span class=\"token punctuation\">[</span><span class=\"token string-literal\"><span class=\"token string\">'xp'</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        team <span class=\"token operator\">=</span> playerJson<span class=\"token punctuation\">[</span><span class=\"token string-literal\"><span class=\"token string\">'team'</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">void</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Hi my name is </span><span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token expression\">name</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> apiData <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span><span class=\"token string-literal\"><span class=\"token string\">\"name\"</span></span><span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"moz\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">\"xp\"</span></span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">\"team\"</span></span><span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"tiq\"</span></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token string-literal\"><span class=\"token string\">\"name\"</span></span><span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"tho\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">\"xp\"</span></span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">\"team\"</span></span><span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"ven\"</span></span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token string-literal\"><span class=\"token string\">\"name\"</span></span><span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"shu\"</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">\"xp\"</span></span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">\"team\"</span></span><span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">\"ber\"</span></span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  apiData<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>playerJson<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> player <span class=\"token operator\">=</span> <span class=\"token class-name\">Player</span><span class=\"token punctuation\">.</span><span class=\"token function\">fromJson</span><span class=\"token punctuation\">(</span>playerJson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    player<span class=\"token punctuation\">.</span><span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"cascade-notation\" style=\"position:relative;\"><a href=\"#cascade-notation\" aria-label=\"cascade notation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Cascade Notation</h3>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Player</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n  int xp<span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">String</span> team<span class=\"token punctuation\">;</span>\n\n  <span class=\"token class-name\">Player</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    required <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n    required <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xp<span class=\"token punctuation\">,</span>\n    required <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>team<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">void</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Hi my name is </span><span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token expression\">name</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> moz <span class=\"token operator\">=</span> <span class=\"token class-name\">Player</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'moz'</span></span><span class=\"token punctuation\">,</span> xp<span class=\"token punctuation\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> team<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'red'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  moz<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">'tiq'</span></span><span class=\"token punctuation\">;</span>\n  moz<span class=\"token punctuation\">.</span>xp <span class=\"token operator\">=</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">;</span>\n  moz<span class=\"token punctuation\">.</span>team <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">'blue'</span></span><span class=\"token punctuation\">;</span>\n  moz<span class=\"token punctuation\">.</span><span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Cascade Notation</span>\n  <span class=\"token class-name\">Player</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'bee'</span></span><span class=\"token punctuation\">,</span> xp<span class=\"token punctuation\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span> team<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'red'</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">'tho'</span></span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>xp <span class=\"token operator\">=</span> <span class=\"token number\">3000</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>team <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">'green'</span></span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"enums\" style=\"position:relative;\"><a href=\"#enums\" aria-label=\"enums permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Enums</h3>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token comment\">// \"red\" 와 같이 문자열 형태로 쓰지 않아도 된다.</span>\n<span class=\"token keyword\">enum</span> <span class=\"token class-name\">Team</span> <span class=\"token punctuation\">{</span> red<span class=\"token punctuation\">,</span> blue <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">enum</span> <span class=\"token class-name\">XPLevel</span> <span class=\"token punctuation\">{</span>beginner<span class=\"token punctuation\">,</span> medium<span class=\"token punctuation\">,</span> pro<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Player</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">XPLevel</span> xp<span class=\"token punctuation\">;</span> <span class=\"token comment\">// enum XPLevel 타입으로 변경되었다.</span>\n  <span class=\"token class-name\">Team</span> team<span class=\"token punctuation\">;</span> <span class=\"token comment\">// enum Team 타입으로 변경되었다.</span>\n\n  <span class=\"token class-name\">Player</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    required <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n    required <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xp<span class=\"token punctuation\">,</span>\n    required <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>team<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">void</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Hi my name is </span><span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token expression\">name</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> moz <span class=\"token operator\">=</span> <span class=\"token class-name\">Player</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'moz'</span></span><span class=\"token punctuation\">,</span> xp<span class=\"token punctuation\">:</span> <span class=\"token class-name\">XPLevel</span><span class=\"token punctuation\">.</span>beginner<span class=\"token punctuation\">,</span> team<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Team</span><span class=\"token punctuation\">.</span>blue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  moz<span class=\"token punctuation\">.</span><span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  moz\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">'tho'</span></span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>xp <span class=\"token operator\">=</span> <span class=\"token class-name\">XPLevel</span><span class=\"token punctuation\">.</span>pro\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>team <span class=\"token operator\">=</span> <span class=\"token class-name\">Team</span><span class=\"token punctuation\">.</span>red\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"abstract-classes\" style=\"position:relative;\"><a href=\"#abstract-classes\" aria-label=\"abstract classes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Abstract Classes</h3>\n<ul>\n<li>추상화 클래스로는 객체를 생성할 수 없다.</li>\n<li>다른 클래스들이 직접 구현해야하는 메소드들을 모아놓은 일종의 청사진 (Blueprint)</li>\n<li>특정 메소드를 구현하도록 강제한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Human</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">walk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Player</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Human</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\">// 구현하지 않으면 에러 발생</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">walk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'I am walking'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"inheritance\" style=\"position:relative;\"><a href=\"#inheritance\" aria-label=\"inheritance permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Inheritance</h3>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Human</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Human(this.name); // positional parameter</span>\n  <span class=\"token class-name\">Human</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>required <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// named parameter</span>\n  <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">\"Hi my name is </span><span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token expression\">name</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">enum</span> <span class=\"token class-name\">Team</span> <span class=\"token punctuation\">{</span> red<span class=\"token punctuation\">,</span> blue <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Player</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Human</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">final</span> <span class=\"token class-name\">Team</span> team<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/// 부모객체에서 필요한 값을 초기화</span>\n\n  <span class=\"token comment\">// 부모객체의 생성자가 named parameter 인 경우</span>\n  <span class=\"token class-name\">Player</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>required <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>team<span class=\"token punctuation\">,</span> required <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// 부모객체의 생성자가 positional parameter 인 경우</span>\n  <span class=\"token comment\">// Player({required this.team, required String name}) : super(name);</span>\n\n  <span class=\"token comment\">// super parameter 를 쓰는 것을 권장하고 있다.</span>\n  <span class=\"token comment\">// Player({required this.team, required super.name});</span>\n\n  <span class=\"token metadata function\">@override</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'and I play for </span><span class=\"token interpolation\"><span class=\"token punctuation\">${</span><span class=\"token expression\">team</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> player <span class=\"token operator\">=</span> <span class=\"token class-name\">Player</span><span class=\"token punctuation\">(</span>team<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Team</span><span class=\"token punctuation\">.</span>red<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'moz'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  player<span class=\"token punctuation\">.</span><span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"mixins\" style=\"position:relative;\"><a href=\"#mixins\" aria-label=\"mixins permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mixins</h3>\n<ul>\n<li>Mixin : 생성자가 없는 클래스</li>\n<li>하나의 클래스에만 사용한다면 의미가 없다.</li>\n<li>핵심은 여러 클래스에 재사용이 가능하다는 점이다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre class=\"language-dart\"><code class=\"language-dart\"><span class=\"token comment\">// mixin class</span>\n<span class=\"token keyword\">mixin</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Strong</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">final</span> double stengthLevel <span class=\"token operator\">=</span> <span class=\"token number\">1500.99</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">mixin</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">QuickRunner</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">void</span> <span class=\"token function\">runQuick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'ruuuuuuun!'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">mixin</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Tall</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">final</span> double height <span class=\"token operator\">=</span> <span class=\"token number\">1.99</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">enum</span> <span class=\"token class-name\">Team</span> <span class=\"token punctuation\">{</span> red<span class=\"token punctuation\">,</span> blue <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Player</span> <span class=\"token keyword\">with</span> <span class=\"token class-name\">Strong</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">QuickRunner</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Tall</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">final</span> <span class=\"token class-name\">Team</span> team<span class=\"token punctuation\">;</span>\n\n  <span class=\"token class-name\">Player</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>required <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>team<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Horse</span> <span class=\"token keyword\">with</span> <span class=\"token class-name\">Strong</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">QuickRunner</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Kid</span> <span class=\"token keyword\">with</span> <span class=\"token class-name\">QuickRunner</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>","tableOfContents":"<ul>\n<li><a href=\"#dart-class-%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9%EB%B2%95\">Dart Class 기본 사용법</a></li>\n<li><a href=\"#constructor-%EC%83%9D%EC%84%B1%EC%9E%90\">Constructor (생성자)</a></li>\n<li><a href=\"#named-constructor-parameters\">Named Constructor Parameters</a></li>\n<li><a href=\"#named-constructor\">Named Constructor</a></li>\n<li><a href=\"#named-constructor-%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-api-%EC%97%B0%EB%8F%99-%EC%98%88%EC%8B%9C\">Named Constructor 를 이용한 API 연동 예시</a></li>\n<li><a href=\"#cascade-notation\">Cascade Notation</a></li>\n<li><a href=\"#enums\">Enums</a></li>\n<li><a href=\"#abstract-classes\">Abstract Classes</a></li>\n<li><a href=\"#inheritance\">Inheritance</a></li>\n<li><a href=\"#mixins\">Mixins</a></li>\n</ul>"}},"tag":["노마드코더","플러터","Dart"]}},"pageContext":{"id":"f58804ae-1011-537b-ab59-f91d20c0d9cc","slug":"nc-flutter-dart-class","__params":{"slug":"nc-flutter-dart-class"}}},"staticQueryHashes":["3184728746"],"slicesMap":{}}