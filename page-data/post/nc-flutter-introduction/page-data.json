{"componentChunkName":"component---src-pages-post-contentful-moztiq-blog-slug-tsx","path":"/post/nc-flutter-introduction/","result":{"data":{"contentfulMoztiqBlog":{"id":"7f1109d8-5ce5-5c37-8b7f-5a67ae5f05b3","title":"[노마드코더 플러터] Flutter Introduction","slug":"nc-flutter-introduction","category":"tech","releaseDate":"2023-11-19T00:00+09:00","headerImage":{"url":"https://images.ctfassets.net/vpyfljks33op/1ebi2iQUofpoe5QtON90yp/521518e44b659ab67b911fd5aa7f3706/Screen_Shot_2021-02-10_at_9.40.29_AM.png"},"contents":{"childMarkdownRemark":{"html":"<h3 id=\"why-flutter\" style=\"position:relative;\"><a href=\"#why-flutter\" aria-label=\"why flutter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Why Flutter?</h3>\n<ul>\n<li>진정한 의미의 크로스플랫폼 프레임워크</li>\n<li>iOS, Android, Web, MacOS, Windows, Linux 에서 동작하는 어플리케이션 &#x26; Embedded</li>\n<li>하나의 언어와 프레임워크로 원하는 모든 것을 만들 수 있다.</li>\n</ul>\n<h3 id=\"how-flutter-works\" style=\"position:relative;\"><a href=\"#how-flutter-works\" aria-label=\"how flutter works permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>How Flutter Works</h3>\n<ul>\n<li>Architectural Layer</li>\n</ul>\n<p><img src=\"https://images.ctfassets.net/vpyfljks33op/4tm3rWF68tE7g0LNDzTc7r/69585a4a607526fab5a71742966159bc/flutter-architectural-layer.png\" alt=\"flutter-architectural-layer.png\"></p>\n<ul>\n<li>타 프레임워크들은 운영체제와 직접 소통하는 반면 플러터에서 작성한 코드는 운영체제와 직접적인 소통을 하지 않는다.</li>\n<li>크로스플랫폼이 되기 위해서 다른 방식의 소통이 필요하여 Engine 을 도입</li>\n<li><strong>Engine 이 화면 상에 UI 를 그리는 역할</strong>을 하게 됨 (비디오 게임 엔진처럼)</li>\n<li>Flutter 어플리케이션은 운영체제의 Native Widget 을 사용하지 않음</li>\n<li>어플리케이션의 호스트에 의존할 필요없이 (크로스플랫폼) 화면상의 모든 픽셀을 조절함으로써 모든 걸 통제할 수 있음</li>\n<li>Embedder\n<ul>\n<li>엔진을 가동시키는 runner 프로젝트를 지칭</li>\n</ul>\n</li>\n<li>실행 순서 : Start Application → Runner → Engine → UI Rendering</li>\n<li>정리) <strong>플러터</strong>의 역할\n<ul>\n<li>단순히 Engine 을 어플리케이션 내부에 집어넣고 우리가 작성한 Dart 코드를 컴파일</li>\n<li>사용자가 어플리케이션을 실행시킬 때 Engine 을 가동시키는 runner 프로젝트 (Embedder) 를 실행</li>\n<li>이후 Engine 이 UI 를 렌더링</li>\n</ul>\n</li>\n<li>FAQ\n<ul>\n<li><a href=\"https://docs.flutter.dev/resources/faq#run-ios\">How does Flutter run my code on iOS?</a></li>\n<li><a href=\"https://docs.flutter.dev/resources/faq#does-flutter-use-my-operating-systems-built-in-platform-widgets\">Does Flutter use my operating system’s built-in platform widgets?</a></li>\n</ul>\n</li>\n<li>단점\n<ul>\n<li>네이티브에서 가능한 위젯을 사용할 수 없어 부자연스럽다. (사람들이 Flutter 를 싫어하는 이유) → 자연스럽게 만드는 법이 존재함</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"flutter-vs-react-native\" style=\"position:relative;\"><a href=\"#flutter-vs-react-native\" aria-label=\"flutter vs react native permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Flutter vs React Native</h3>\n<ul>\n<li>React Native\n<ul>\n<li>네이티브 앱 운영체제 상에서 가능한 위젯을 사용하고 싶은 경우</li>\n<li>예를 들어 버튼을 하나 만들면 iOS 와 안드로이드에서 서로 다른 UI 로 렌더링</li>\n<li>자바스크립트를 통해 운영체제와 소통</li>\n</ul>\n</li>\n<li>Flutter\n<ul>\n<li>아주 세밀한 디자인 요구사항이 들어가 있고 요소들이나 애니메이션들을 전부 커스터마이징해야 하는 경우</li>\n<li>운영체제에서 제공해주는 위젯을 사용할 필요가 없는 경우</li>\n</ul>\n</li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"#why-flutter\">Why Flutter?</a></li>\n<li><a href=\"#how-flutter-works\">How Flutter Works</a></li>\n<li><a href=\"#flutter-vs-react-native\">Flutter vs React Native</a></li>\n</ul>","excerpt":"Why Flutter? 진정한 의미의 크로스플랫폼 프레임워크 iOS, Android, Web, MacOS, Windows, Linux 에서 동작하는 어플리케이션 & Embedded 하나의 언어와 프레임워크로 원하는 모든 것을 만들 수 있다. How…"}},"tag":["노마드코더","플러터"]}},"pageContext":{"id":"7f1109d8-5ce5-5c37-8b7f-5a67ae5f05b3","slug":"nc-flutter-introduction","__params":{"slug":"nc-flutter-introduction"}}},"staticQueryHashes":["3507440187"],"slicesMap":{}}