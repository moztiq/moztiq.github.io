{"version":3,"file":"component---src-pages-quote-index-tsx-fd1d218f13b9a07c8c60.js","mappings":"yQAMA,MAAMA,EAAQC,EAAAA,QAAOC,GAAEC,WAAA,CAAAC,YAAA,mBAAAC,YAAA,cAATJ,CAAS,+QAEAK,GAAUA,EAAMC,MAAMC,OAAOC,QAe9CC,EAAiBT,EAAAA,QAAOU,IAAGR,WAAA,CAAAC,YAAA,4BAAAC,YAAA,cAAVJ,CAAU,sCAK3BW,EAAqBX,EAAAA,QAAOU,IAAGR,WAAA,CAAAC,YAAA,gCAAAC,YAAA,cAAVJ,CAAU,yCAK/BY,EAAWZ,EAAAA,QAAOU,IAAGR,WAAA,CAAAC,YAAA,sBAAAC,YAAA,cAAVJ,CAAU,2KAWJK,IACnB,OAAQA,EAAMQ,UACZ,IAAK,OACH,MAAO,SACT,IAAK,QACH,MAAO,UACT,IAAK,QACH,MAAO,UACT,QACE,MAAO,OACX,IAEQR,GAAUA,EAAMC,MAAMC,OAAOC,QAGnCM,EAAcd,EAAAA,QAAOe,EAACb,WAAA,CAAAC,YAAA,yBAAAC,YAAA,cAARJ,CAAQ,wOAEhBK,GAAUA,EAAMC,MAAMC,OAAOS,UAanCC,EAAQjB,EAAAA,QAAOkB,KAAIhB,WAAA,CAAAC,YAAA,mBAAAC,YAAA,cAAXJ,CAAW,mEAIbK,GAAUA,EAAMC,MAAMC,OAAOY,UAG1B,SAASC,EAASC,GAAqC,IAApC,MAAEC,GAA+BD,EACjE,OACEE,EAAAA,cAACC,EAAAA,KAAI,CAACC,GAAK,UAASH,EAAMI,QACxBH,EAAAA,cAACxB,EAAK,KACJwB,EAAAA,cAACX,EAAQ,CAACC,SAAUS,EAAMT,UACvBS,EAAMT,SAASc,eAElBJ,EAAAA,cAACd,EAAc,KACbc,EAAAA,cAACZ,EAAkB,KACjBY,EAAAA,cAACT,EAAW,MAETc,EAAAA,EAAAA,GAAYN,EAAMO,QAAQC,oBAAoBC,OAEjDR,EAAAA,cAACN,EAAK,KAAC,KACFK,EAAMU,OACRV,EAAMW,OAAU,MAAKX,EAAMW,YAO1C,CClGA,MAAMC,EAAmBlC,EAAAA,QAAOmC,GAAEjC,WAAA,CAAAC,YAAA,8BAAAC,YAAA,gBAATJ,CAAS,gUAuBnB,SAASoC,EAASf,GAAyC,IAAxC,OAAEgB,GAAmChB,EACrE,OACEE,EAAAA,cAACW,EAAgB,KACdG,GACCA,EAAOC,KAAKhB,GACVC,EAAAA,cAACH,EAAS,CAACmB,IAAKjB,EAAMI,KAAMJ,MAAOA,MAI7C,C,iCCrBA,MAAMkB,EAAqBxC,EAAAA,QAAOU,IAAGR,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAVJ,CAAU,0CAKtB,SAASyC,EAASpB,GAA8C,IAA7C,KAAEqB,GAAyCrB,EAC3E,MAAMgB,EAASK,EAAKC,mBAAmBC,MACvC,OACErB,EAAAA,cAACsB,EAAAA,EAAM,KACLtB,EAAAA,cAACuB,EAAAA,EAAgB,CAACb,OAAOc,EAAAA,EAAAA,IAAanC,EAAAA,GAASoC,QAC7CzB,EAAAA,cAAC0B,EAAAA,EAAc,CACbC,KAAM3B,EAAAA,cAAC4B,EAAAA,EAAe,CAACD,MAAME,EAAAA,EAAAA,IAAYxC,EAAAA,GAASoC,SAClDf,MAAQ,uBAAqBc,EAAAA,EAAAA,IAAanC,EAAAA,GAASoC,SACnDK,aAAaC,EAAAA,EAAAA,IAAmB1C,EAAAA,GAASoC,SAE3CzB,EAAAA,cAACiB,EAAkB,KACjBjB,EAAAA,cAACa,EAAS,CAACC,OAAQA,MAK7B,CAEO,MAoBMkB,EAAOA,IAEhBhC,EAAAA,cAACiC,EAAAA,EAAG,CACFvB,OAAOc,EAAAA,EAAAA,IAAanC,EAAAA,GAASoC,OAC7BK,aAAaC,EAAAA,EAAAA,IAAmB1C,EAAAA,GAASoC,OACzCS,IAAM,U","sources":["webpack://moztiq.github.io/./src/components/quote/QuoteCard.tsx","webpack://moztiq.github.io/./src/components/quote/QuoteList.tsx","webpack://moztiq.github.io/./src/pages/quote/index.tsx"],"sourcesContent":["import { extractText } from '../../utils/string.utils';\nimport { Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { IQuoteDetailProps, IQuoteProps } from '../../interface/interfaces';\n\nconst Quote = styled.li`\n  padding: 3rem 2rem 2rem 2rem;\n  background-color: ${(props) => props.theme.colors.white};\n  box-shadow: 0 0 0 1px rgba(23, 23, 23, 0.05);\n  border-radius: 0.5rem;\n  position: relative;\n  transition: all 0.2s;\n\n  @media screen and (max-width: 430px) {\n    padding: 2.5rem 1rem 1rem 1rem;\n  }\n\n  &:hover {\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.15);\n  }\n`;\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ContentTextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Category = styled.div<IQuoteDetailProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  width: 90px;\n  height: 40px;\n  border-radius: 5px;\n  top: -10px;\n  left: 10px;\n\n  background-color: ${(props) => {\n    switch (props.category) {\n      case 'poem':\n        return 'tomato';\n      case 'quote':\n        return '#1c98e7';\n      case 'essay':\n        return '#54b71c';\n      default:\n        return 'gray';\n    }\n  }};\n  color: ${(props) => props.theme.colors.white};\n`;\n\nconst ContentText = styled.p`\n  font-size: 0.95rem;\n  color: ${(props) => props.theme.colors.gray800};\n  line-height: 1.7;\n  text-decoration: none;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 100%;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  text-align: justify;\n  overflow-wrap: anywhere;\n`;\n\nconst Title = styled.span`\n  margin-top: 20px;\n  font-size: 0.85rem;\n  text-align: right;\n  color: ${(props) => props.theme.colors.gray500};\n`;\n\nexport default function QuoteCard({ quote }: { quote: IQuoteProps }) {\n  return (\n    <Link to={`/quote/${quote.slug}`}>\n      <Quote>\n        <Category category={quote.category}>\n          {quote.category.toUpperCase()}\n        </Category>\n        <ContentWrapper>\n          <ContentTextWrapper>\n            <ContentText>\n              {/*{quote.content.childMarkdownRemark.excerpt}*/}\n              {extractText(quote.content.childMarkdownRemark.html)}\n            </ContentText>\n            <Title>\n              - {quote.author}\n              {quote.title && ` / ${quote.title}`}\n            </Title>\n          </ContentTextWrapper>\n        </ContentWrapper>\n      </Quote>\n    </Link>\n  );\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport QuoteCard from './QuoteCard';\nimport { IQuoteProps } from '../../interface/interfaces';\n\nconst QuoteListWrapper = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-column-gap: 30px;\n  grid-row-gap: 50px;\n  width: 85%;\n  a {\n    text-decoration: none;\n  }\n  margin: 50px 0;\n\n  @media screen and (max-width: 1024px) {\n    width: 95%;\n    grid-template-columns: repeat(2, 1fr);\n    grid-column-gap: 20px;\n  }\n\n  @media screen and (max-width: 430px) {\n    width: 95%;\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport default function QuoteList({ quotes }: { quotes: IQuoteProps[] }) {\n  return (\n    <QuoteListWrapper>\n      {quotes &&\n        quotes.map((quote: IQuoteProps) => (\n          <QuoteCard key={quote.slug} quote={quote} />\n        ))}\n    </QuoteListWrapper>\n  );\n}\n","import * as React from 'react';\nimport { graphql, PageProps } from 'gatsby';\nimport Layout from '../../components/Layout';\nimport ContentContainer from '../../components/ContentContainer';\nimport Seo from '../../components/Seo';\nimport styled from 'styled-components';\nimport QuoteList from '../../components/quote/QuoteList';\nimport {\n  Category,\n  SectionDescription,\n  SectionIcon,\n  SectionTitle,\n} from '../../constants/common.constant';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ContentExplain from '../../components/ContentExplain';\n\nconst QuoteListContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport default function QuotePage({ data }: PageProps<Queries.QuoteListQuery>) {\n  const quotes = data.allContentfulQuote.nodes;\n  return (\n    <Layout>\n      <ContentContainer title={SectionTitle(Category.QUOTE)}>\n        <ContentExplain\n          icon={<FontAwesomeIcon icon={SectionIcon(Category.QUOTE)} />}\n          title={`<span>QUOTE</span> ${SectionTitle(Category.QUOTE)}`}\n          description={SectionDescription(Category.QUOTE)}\n        />\n        <QuoteListContainer>\n          <QuoteList quotes={quotes as any} />\n        </QuoteListContainer>\n      </ContentContainer>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query QuoteList {\n    allContentfulQuote(sort: { createdAt: DESC }) {\n      nodes {\n        id\n        title\n        slug\n        author\n        category\n        content {\n          childMarkdownRemark {\n            excerpt\n            html\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = () => {\n  return (\n    <Seo\n      title={SectionTitle(Category.QUOTE)}\n      description={SectionDescription(Category.QUOTE)}\n      url={`/quote`}\n    />\n  );\n};\n"],"names":["Quote","styled","li","withConfig","displayName","componentId","props","theme","colors","white","ContentWrapper","div","ContentTextWrapper","Category","category","ContentText","p","gray800","Title","span","gray500","QuoteCard","_ref","quote","React","Link","to","slug","toUpperCase","extractText","content","childMarkdownRemark","html","author","title","QuoteListWrapper","ul","QuoteList","quotes","map","key","QuoteListContainer","QuotePage","data","allContentfulQuote","nodes","Layout","ContentContainer","SectionTitle","QUOTE","ContentExplain","icon","FontAwesomeIcon","SectionIcon","description","SectionDescription","Head","Seo","url"],"sourceRoot":""}