{"version":3,"file":"component---src-pages-tech-index-tsx-c10f7901ec070a2ce70f.js","mappings":"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","sources":["webpack://moztiq.github.io/./src/components/post/PostCard.tsx","webpack://moztiq.github.io/./src/components/post/PostList.tsx","webpack://moztiq.github.io/./src/components/ContentExplain.tsx","webpack://moztiq.github.io/./src/pages/tech/index.tsx"],"sourcesContent":["import Moment from 'react-moment';\nimport { extractText } from '../../utils/string.utils';\nimport { Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { IPostProps } from '../../interface/interfaces';\nimport {\n  fadeInSlideToLeft,\n  hoverSlideToTop,\n} from '../../constants/animation.constant';\nimport { motion } from 'framer-motion';\n\nconst Post = styled(motion.li)`\n  padding: 3rem;\n  margin-top: 40px;\n  background-color: ${(props) => props.theme.colors.white};\n  box-shadow: 0 0 0 1px rgba(23, 23, 23, 0.05);\n  border-radius: 0.3rem;\n  transition: all 0.2s;\n\n  @media screen and (max-width: 430px) {\n    padding: 1.5rem;\n  }\n\n  &:hover {\n    box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.15);\n  }\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 20px;\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: #484848;\n  text-align: center;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  padding: 5px 0;\n\n  @media screen and (max-width: 768px) {\n    font-size: 1.3rem;\n  }\n\n  @media screen and (max-width: 430px) {\n    font-size: 1.1rem;\n  }\n`;\n\nconst PublishDateLine = styled.div`\n  height: 15px;\n  border-bottom: 1px solid gainsboro;\n  position: relative;\n  display: flex;\n  justify-content: center;\n`;\n\nconst PublishDate = styled.div`\n  font-size: 0.8rem;\n  font-weight: bold;\n  letter-spacing: 1.5px;\n  width: 150px;\n  height: 30px;\n  color: ${(props) => props.theme.colors.accentColor};\n  background-color: ${(props) => props.theme.colors.white};\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 50px;\n`;\n\nconst HeaderImage = styled.div<{ url: string }>`\n  width: 225px;\n  min-width: 225px;\n  margin-right: 20px;\n  height: 180px;\n  background-image: url(${(props) => props.url});\n  background-size: cover;\n  border-radius: 8px;\n  border: 1px solid ${(props) => props.theme.colors.gray200};\n\n  @media screen and (max-width: 1024px) {\n    width: 125px;\n    min-width: 125px;\n    margin-right: 10px;\n  }\n`;\n\nconst ContentTextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ContentText = styled.p`\n  font-size: 0.95rem;\n  color: #484848;\n  line-height: 1.7;\n  text-decoration: none;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 100%;\n  display: -webkit-box;\n  -webkit-line-clamp: 5;\n  -webkit-box-orient: vertical;\n  text-align: justify;\n  overflow-wrap: anywhere;\n`;\n\nconst TagList = styled.ul`\n  margin-top: 10px;\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 3px;\n`;\n\nconst Tag = styled.li`\n  padding: 5px 10px;\n  margin-right: 10px;\n  font-size: 0.9rem;\n  border-radius: 5px;\n  color: ${(props) => props.theme.colors.gray600};\n  background-color: ${(props) => props.theme.colors.gray100};\n\n  @media screen and (max-width: 768px) {\n    font-size: 0.7rem;\n    margin-right: 5px;\n  }\n`;\n\nconst variants = {\n  //   initial={{ scale: 0 }}\n  // animate={{ rotate: 180, scale: 1 }}\n  // transition={{\n  //   type: 'spring',\n  //     stiffness: 260,\n  //     damping: 20,\n  // }}\n\n  initial: { scale: 0 },\n  animate: { rotate: 180, scale: 1 },\n  transition: {\n    type: 'spring',\n    stiffness: 260,\n    damping: 20,\n  },\n};\nexport default function PostCard({ post }: { post: IPostProps }) {\n  return (\n    <Link to={`/post/${post.slug}`}>\n      <Post {...fadeInSlideToLeft} {...hoverSlideToTop}>\n        <Title>{post.title}</Title>\n        <PublishDateLine>\n          <PublishDate>\n            <Moment format=\"MMM D, YYYY\">{post.releaseDate}</Moment>\n          </PublishDate>\n        </PublishDateLine>\n        <ContentWrapper>\n          {post.headerImage?.url && (\n            <HeaderImage url={post.headerImage?.url || ''} />\n          )}\n          <ContentTextWrapper>\n            <ContentText>\n              {/*{post.contents.childMarkdownRemark.excerpt}*/}\n              {extractText(post.contents.childMarkdownRemark.html)}\n            </ContentText>\n            <TagList>\n              {post.tag.map((item, idx) => (\n                <Tag key={idx}>#{item}</Tag>\n              ))}\n            </TagList>\n          </ContentTextWrapper>\n        </ContentWrapper>\n      </Post>\n    </Link>\n  );\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport PostCard from './PostCard';\nimport { IPostProps } from '../../interface/interfaces';\n\nconst PostListContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst PostListWrapper = styled.ul`\n  width: 75%;\n  a {\n    text-decoration: none;\n  }\n  padding-bottom: 50px;\n\n  @media screen and (max-width: 768px) {\n    width: 95%;\n  }\n`;\n\nexport default function PostList({ posts }: { posts: IPostProps[] }) {\n  return (\n    <PostListContainer>\n      <PostListWrapper>\n        {posts &&\n          posts.map((post: IPostProps) => (\n            <PostCard key={post.slug} post={post} />\n          ))}\n      </PostListWrapper>\n    </PostListContainer>\n  );\n}\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nconst TopBackground = styled.div`\n  display: flex;\n  justify-content: center;\n  height: 200px;\n  background-color: ${(props) => props.theme.colors.gray200};\n  background-size: cover;\n\n  @media screen and (max-width: 1024px) {\n    margin-top: 60px;\n  }\n`;\n\nconst ContentExplainWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 80%;\n  position: relative;\n`;\n\nconst ContentExplainTitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n`;\n\nconst IconWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: -40px;\n  font-size: 1.3rem;\n  color: ${(props) => props.theme.colors.accentColor};\n`;\n\nconst ContentExplainTitle = styled.span`\n  font-size: 1.3rem;\n  color: ${(props) => props.theme.colors.gray500};\n  letter-spacing: 1px;\n  span {\n    color: ${(props) => props.theme.colors.gray800};\n    font-weight: bold;\n    font-size: 2.5rem;\n  }\n  span.accent {\n    margin: 0 20px;\n    color: ${(props) => props.theme.colors.accentColor};\n    font-size: 28px;\n  }\n\n  @media screen and (max-width: 430px) {\n    font-size: 1.1rem;\n    span {\n      font-size: 1.8rem;\n    }\n  }\n`;\n\nconst ContentExplainDescription = styled.div`\n  margin-top: 20px;\n  font-size: 1rem;\n  color: ${(props) => props.theme.colors.gray500};\n  line-height: 1.5;\n`;\n\ninterface IContentExplainProps {\n  icon: ReactNode;\n  title: string;\n  description: string;\n}\n\nexport default function ContentExplain(props: IContentExplainProps) {\n  return (\n    <TopBackground>\n      <ContentExplainWrapper>\n        <ContentExplainTitleWrapper>\n          <IconWrapper>{props.icon}</IconWrapper>\n          <ContentExplainTitle\n            dangerouslySetInnerHTML={{ __html: props.title }}\n          />\n        </ContentExplainTitleWrapper>\n        <ContentExplainDescription>\n          {props.description}\n        </ContentExplainDescription>\n      </ContentExplainWrapper>\n    </TopBackground>\n  );\n}\n","import * as React from 'react';\nimport { graphql, PageProps } from 'gatsby';\nimport Layout from '../../components/layout/Layout';\nimport PostList from '../../components/post/PostList';\nimport ContentContainer from '../../components/ContentContainer';\nimport Seo from '../../components/Seo';\nimport {\n  Category,\n  SectionDescription,\n  SectionIcon,\n  SectionTitle,\n} from '../../constants/common.constant';\nimport ContentExplain from '../../components/ContentExplain';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default function TechPage({ data }: PageProps<Queries.TechListQuery>) {\n  const posts = data.allContentfulMoztiqBlog.nodes;\n  return (\n    <Layout>\n      <ContentContainer title={SectionTitle(Category.TECH)}>\n        <ContentExplain\n          icon={<FontAwesomeIcon icon={SectionIcon(Category.TECH)} />}\n          title={`<span>TECH</span> ${SectionTitle(Category.TECH)}`}\n          description={SectionDescription(Category.TECH)}\n        />\n        <PostList posts={posts as any} />\n      </ContentContainer>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query TechList {\n    allContentfulMoztiqBlog(\n      filter: { category: { eq: \"tech\" } }\n      sort: { releaseDate: DESC }\n    ) {\n      nodes {\n        id\n        title\n        slug\n        category\n        releaseDate\n        headerImage {\n          url\n        }\n        contents {\n          childMarkdownRemark {\n            html\n            excerpt\n          }\n        }\n        tag\n      }\n    }\n  }\n`;\n\nexport const Head = () => {\n  return (\n    <Seo\n      title={SectionTitle(Category.TECH)}\n      description={SectionDescription(Category.TECH)}\n      url={`/tech`}\n    />\n  );\n};\n"],"names":["Post","styled","motion","li","withConfig","displayName","componentId","props","theme","colors","white","Title","h1","PublishDateLine","div","PublishDate","accentColor","ContentWrapper","HeaderImage","url","gray200","ContentTextWrapper","ContentText","p","TagList","ul","Tag","gray600","gray100","PostCard","_ref","_post$headerImage","_post$headerImage2","post","React","Link","to","slug","Object","assign","fadeInSlideToLeft","hoverSlideToTop","title","Moment","format","releaseDate","headerImage","extractText","contents","childMarkdownRemark","html","tag","map","item","idx","key","PostListContainer","PostListWrapper","PostList","posts","TopBackground","ContentExplainWrapper","ContentExplainTitleWrapper","IconWrapper","ContentExplainTitle","span","gray500","gray800","ContentExplainDescription","ContentExplain","icon","dangerouslySetInnerHTML","__html","description","TechPage","data","allContentfulMoztiqBlog","nodes","Layout","ContentContainer","SectionTitle","Category","TECH","FontAwesomeIcon","SectionIcon","SectionDescription","Head","Seo"],"sourceRoot":""}