{"version":3,"file":"component---src-pages-quote-index-tsx-8d55ae3e52f1e502f2d7.js","mappings":"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","sources":["webpack://moztiq.github.io/./src/components/ContentExplain.tsx","webpack://moztiq.github.io/./src/components/quote/QuoteCard.tsx","webpack://moztiq.github.io/./src/components/quote/QuoteList.tsx","webpack://moztiq.github.io/./src/pages/quote/index.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nconst TopBackground = styled.div`\n  display: flex;\n  justify-content: center;\n  height: 200px;\n  background-color: ${(props) => props.theme.colors.gray200};\n  background-size: cover;\n`;\n\nconst ContentExplainWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 80%;\n  position: relative;\n`;\n\nconst ContentExplainTitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst IconWrapper = styled.div`\n  margin-right: 30px;\n  font-size: 1.5rem;\n  color: ${(props) => props.theme.colors.accentColor};\n`;\n\nconst ContentExplainTitle = styled.span`\n  font-size: 1.5rem;\n  color: ${(props) => props.theme.colors.gray500};\n  letter-spacing: 1px;\n  span {\n    color: ${(props) => props.theme.colors.gray800};\n    font-weight: bold;\n    font-size: 40px;\n  }\n  span.accent {\n    margin: 0 20px;\n    color: ${(props) => props.theme.colors.accentColor};\n    font-size: 28px;\n  }\n\n  @media screen and (max-width: 768px) {\n    font-size: 18px;\n    span {\n      font-size: 28px;\n    }\n  }\n`;\n\nconst ContentExplainDescription = styled.div`\n  margin-top: 20px;\n  font-size: 1rem;\n  color: ${(props) => props.theme.colors.gray500};\n  line-height: 1.5;\n`;\n\ninterface IContentExplainProps {\n  icon: ReactNode;\n  title: string;\n  description: string;\n}\n\nexport default function ContentExplain(props: IContentExplainProps) {\n  return (\n    <TopBackground>\n      <ContentExplainWrapper>\n        <ContentExplainTitleWrapper>\n          <IconWrapper>{props.icon}</IconWrapper>\n          <ContentExplainTitle\n            dangerouslySetInnerHTML={{ __html: props.title }}\n          />\n        </ContentExplainTitleWrapper>\n        <ContentExplainDescription>\n          {props.description}\n        </ContentExplainDescription>\n      </ContentExplainWrapper>\n    </TopBackground>\n  );\n}\n","import { extractText } from '../../utils/string.utils';\nimport { Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { IQuoteDetailProps, IQuoteProps } from '../../interface/interfaces';\n\nconst Quote = styled.li`\n  padding: 3rem 2rem 2rem 2rem;\n  background-color: ${(props) => props.theme.colors.white};\n  box-shadow: 0 0 0 1px rgba(23, 23, 23, 0.05);\n  border-radius: 0.5rem;\n  position: relative;\n  transition: all 0.2s;\n\n  @media screen and (max-width: 430px) {\n    padding: 2.5rem 1rem 1rem 1rem;\n  }\n\n  &:hover {\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.15);\n  }\n`;\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ContentTextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Category = styled.div<IQuoteDetailProps>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  width: 90px;\n  height: 40px;\n  border-radius: 5px;\n  top: -10px;\n  left: 10px;\n\n  background-color: ${(props) => {\n    switch (props.category) {\n      case 'poem':\n        return 'tomato';\n      case 'quote':\n        return '#1c98e7';\n      case 'essay':\n        return '#54b71c';\n      default:\n        return 'gray';\n    }\n  }};\n  color: ${(props) => props.theme.colors.white};\n`;\n\nconst ContentText = styled.p`\n  font-size: 0.95rem;\n  color: ${(props) => props.theme.colors.gray800};\n  line-height: 1.7;\n  text-decoration: none;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 100%;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  text-align: justify;\n  overflow-wrap: anywhere;\n`;\n\nconst Title = styled.span`\n  margin-top: 20px;\n  font-size: 0.85rem;\n  text-align: right;\n  color: ${(props) => props.theme.colors.gray500};\n`;\n\nexport default function QuoteCard({ quote }: { quote: IQuoteProps }) {\n  return (\n    <Link to={`/quote/${quote.slug}`}>\n      <Quote>\n        <Category category={quote.category}>\n          {quote.category.toUpperCase()}\n        </Category>\n        <ContentWrapper>\n          <ContentTextWrapper>\n            <ContentText>\n              {/*{quote.content.childMarkdownRemark.excerpt}*/}\n              {extractText(quote.content.childMarkdownRemark.html)}\n            </ContentText>\n            <Title>\n              - {quote.author}\n              {quote.title && ` / ${quote.title}`}\n            </Title>\n          </ContentTextWrapper>\n        </ContentWrapper>\n      </Quote>\n    </Link>\n  );\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport QuoteCard from './QuoteCard';\nimport { IQuoteProps } from '../../interface/interfaces';\n\nconst QuoteListWrapper = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-column-gap: 30px;\n  grid-row-gap: 50px;\n  width: 85%;\n  a {\n    text-decoration: none;\n  }\n  margin: 50px 0;\n\n  @media screen and (max-width: 1024px) {\n    width: 95%;\n    grid-template-columns: repeat(2, 1fr);\n    grid-column-gap: 20px;\n  }\n\n  @media screen and (max-width: 430px) {\n    width: 95%;\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport default function QuoteList({ quotes }: { quotes: IQuoteProps[] }) {\n  return (\n    <QuoteListWrapper>\n      {quotes &&\n        quotes.map((quote: IQuoteProps) => (\n          <QuoteCard key={quote.slug} quote={quote} />\n        ))}\n    </QuoteListWrapper>\n  );\n}\n","import * as React from 'react';\nimport { graphql, PageProps } from 'gatsby';\nimport Layout from '../../components/Layout';\nimport ContentContainer from '../../components/ContentContainer';\nimport Seo from '../../components/Seo';\nimport styled from 'styled-components';\nimport QuoteList from '../../components/quote/QuoteList';\nimport {\n  Category,\n  SectionIcon,\n  SectionTitle,\n} from '../../constants/common.constant';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ContentExplain from '../../components/ContentExplain';\n\nconst QuoteListContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport default function QuotePage({ data }: PageProps<Queries.QuoteListQuery>) {\n  const quotes = data.allContentfulQuote.nodes;\n  return (\n    <Layout>\n      <ContentContainer title={SectionTitle(Category.QUOTE)}>\n        <ContentExplain\n          icon={<FontAwesomeIcon icon={SectionIcon(Category.QUOTE)} />}\n          title={`<span>QUOTE</span> ${SectionTitle(Category.QUOTE)}`}\n          description={`때론 짧은 시 한편, 누군가의 한마디, 책 속의 짧은 글귀만으로 가슴이 벅찰 때가 있습니다. 그런 글을 찾아 모아두고 싶었어요.`}\n        />\n        <QuoteListContainer>\n          <QuoteList quotes={quotes as any} />\n        </QuoteListContainer>\n      </ContentContainer>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query QuoteList {\n    allContentfulQuote(sort: { createdAt: DESC }) {\n      nodes {\n        id\n        title\n        slug\n        author\n        category\n        content {\n          childMarkdownRemark {\n            excerpt\n            html\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = () => {\n  return (\n    <Seo title={'QUOTE SECTION'} description={'QUOTE SECTION'} url={`/quote`} />\n  );\n};\n"],"names":["TopBackground","styled","div","withConfig","displayName","componentId","props","theme","colors","gray200","ContentExplainWrapper","ContentExplainTitleWrapper","IconWrapper","accentColor","ContentExplainTitle","span","gray500","gray800","ContentExplainDescription","ContentExplain","React","icon","dangerouslySetInnerHTML","__html","title","description","Quote","li","white","ContentWrapper","ContentTextWrapper","Category","category","ContentText","p","Title","QuoteCard","_ref","quote","Link","to","slug","toUpperCase","extractText","content","childMarkdownRemark","html","author","QuoteListWrapper","ul","QuoteList","quotes","map","key","QuoteListContainer","QuotePage","data","allContentfulQuote","nodes","Layout","ContentContainer","SectionTitle","QUOTE","FontAwesomeIcon","SectionIcon","Head","Seo","url"],"sourceRoot":""}