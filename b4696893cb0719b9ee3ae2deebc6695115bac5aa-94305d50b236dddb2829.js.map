{"version":3,"file":"b4696893cb0719b9ee3ae2deebc6695115bac5aa-94305d50b236dddb2829.js","mappings":"oMAKA,MAAMA,EAAcC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAAVJ,CAAU,qGAQxBK,EAAQL,EAAAA,QAAOM,IAAGJ,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAVJ,CAAU,0FAUlBO,EAAQP,EAAAA,QAAOM,IAAGJ,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAVJ,CAAU,mHASlBQ,EAAWR,EAAAA,QAAOS,GAAEP,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAATJ,CAAS,8BAMpBU,GAAWV,EAAAA,EAAAA,SAAOW,EAAAA,EAAOC,IAAGV,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAjBJ,CAAiB,6LACtBa,GACRA,EAAMC,OAAS,yBAA2B,yBASvBD,GACnBA,EAAMC,OAAS,uBAAyB,2BAGtCC,GAAWf,EAAAA,EAAAA,SAAOW,EAAAA,EAAOK,KAAId,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAlBJ,CAAkB,qBAI7BiB,GAAajB,EAAAA,EAAAA,SAAOW,EAAAA,EAAOK,KAAId,WAAA,CAAAC,YAAA,yBAAAC,YAAA,eAAlBJ,CAAkB,qBAI/BkB,EAAe,CACnBC,OAAQ,CACNC,WAAY,EACZC,KAAM,0BAERC,QAAS,CACPF,WAAY,EACZC,KAAM,mBACNE,WAAY,CACVC,SAAU,KAKVC,EAAmB,CACvBC,QAAS,CACPC,MAAO,yBACPC,gBAAiB,wBAEnBC,WAAY,CACVF,MAAO,uBACPC,gBAAiB,2BAIN,SAASE,IACtB,MACMC,EAA6B,oBAAXC,OAAyBA,OAAOD,SAASE,KAAO,GAExE,OACEC,EAAAA,cAACnC,EAAW,KACVmC,EAAAA,cAAC7B,EAAK,KACJ6B,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAK,KACTF,EAAAA,cAACnB,EAAQ,CACPsB,MAAM,6BACNC,OAAO,MACPC,QAAQ,eAERL,EAAAA,cAACvB,EAAAA,EAAO6B,KAAI,CACVC,SAAUvB,EACVQ,QAAQ,SACRgB,QAAQ,UACRC,EAAE,kgBAIRT,EAAAA,cAAA,KAAGD,KAAK,4BAA4BW,OAAO,UAEzCV,EAAAA,cAACjB,EAAU,CACToB,MAAM,6BACNC,OAAO,MACPC,QAAQ,eAERL,EAAAA,cAACvB,EAAAA,EAAO6B,KAAI,CACVC,SAAUvB,EACVQ,QAAQ,SACRgB,QAAQ,UACRC,EAAE,gyCAKVT,EAAAA,cAAC3B,EAAK,KAAC,oBACP2B,EAAAA,cAAC1B,EAAQ,KArCI,CAAC,OAAQ,QAsCVqC,KAAI,CAACC,EAAMC,IACnBb,EAAAA,cAACc,EAAAA,SAAQ,CAACC,IAAKF,GACZhB,EAASmB,SAASJ,GACjBZ,EAAAA,cAACxB,EAAQ,KAAEoC,EAAKK,eAEhBjB,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAK,IAAGU,KACZZ,EAAAA,cAACxB,EAAQ,CACPI,QAAM,EACN2B,SAAUhB,EACVC,QAAQ,UACRG,WAAW,aACXN,WAAY,CAAEC,SAAU,KAEvBsB,EAAKK,oBASxB,CC/IA,MAAMC,EAAOpD,EAAAA,QAAOqD,KAAInD,WAAA,CAAAC,YAAA,eAAAC,YAAA,gBAAXJ,CAAW,iGAWT,SAASsD,EAAMC,GAA8B,IAA7B,SAAEC,GAAwBD,EACvD,OACErB,EAAAA,cAACkB,EAAI,KACHlB,EAAAA,cAACJ,EAAU,MACV0B,EAGP,C,+ECfe,SAASC,EAAGF,GAAwB,IAADG,EAAAC,EAAA,IAAtB,MAAEC,GAAkBL,EAC9C,MAAMM,GAAOC,EAAAA,EAAAA,IAAc,cAU3B,OACE5B,EAAAA,cAAA,aACG0B,EAAM,MAAa,QAAVF,EAACG,EAAKE,YAAI,IAAAL,GAAc,QAAdC,EAATD,EAAWM,oBAAY,IAAAL,OAAd,EAATA,EAAyBC,MAG1C,C,sEClBA,MAAMK,GAAsB,IAAAC,eAAc,CACtCC,mBAAqBC,GAAMA,EAC3BC,UAAU,EACVC,cAAe,UCNbC,GAAgB,IAAAL,eAAc,CAAC,GCG/B,GAAkB,IAAAA,eAAc,MCLhCM,EAAgC,oBAAbC,SCGnBC,EAA4BF,EAAY,EAAAG,gBAAkB,EAAAC,UCD1DC,GAAc,IAAAX,eAAc,CAAEY,QAAQ,ICF5C,SAASC,EAAYC,GACjB,MAAuB,iBAARA,GACXC,OAAOC,UAAUC,eAAeC,KAAKJ,EAAK,UAClD,CCAA,SAASK,EAAeC,GACpB,MAAoB,iBAANA,GAAkBC,MAAMC,QAAQF,EAClD,CCLA,SAASG,EAAoBH,GACzB,MAAoB,iBAANA,GAAqC,mBAAZA,EAAEI,KAC7C,CCFA,MAAMC,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,aAAcD,GCLpC,SAASE,EAAsBhF,GAC3B,OAAQ4E,EAAoB5E,EAAM6B,UAC9BkD,EAAaE,MAAMC,GAASV,EAAexE,EAAMkF,KACzD,CACA,SAASC,EAAcnF,GACnB,OAAOoF,QAAQJ,EAAsBhF,IAAUA,EAAM4B,SACzD,CCNA,SAASyD,EAAuBrF,GAC5B,MAAM,QAAEa,EAAO,QAAEgB,GCFrB,SAAgC7B,EAAOsF,GACnC,GAAIN,EAAsBhF,GAAQ,CAC9B,MAAM,QAAEa,EAAO,QAAEgB,GAAY7B,EAC7B,MAAO,CACHa,SAAqB,IAAZA,GAAqB2D,EAAe3D,GACvCA,OACA0E,EACN1D,QAAS2C,EAAe3C,GAAWA,OAAU0D,EAErD,CACA,OAAyB,IAAlBvF,EAAMwF,QAAoBF,EAAU,CAAC,CAChD,CDTiCG,CAAuBzF,GAAO,IAAA0F,YAAWhC,IACtE,OAAO,IAAAiC,UAAQ,KAAM,CAAG9E,UAASgB,aAAY,CAAC+D,EAA0B/E,GAAU+E,EAA0B/D,IAChH,CACA,SAAS+D,EAA0BC,GAC/B,OAAOnB,MAAMC,QAAQkB,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,MAAME,EAAe,CACjBC,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJC,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,CAAC,EAC5B,IAAK,MAAMrE,MAAO2D,EACdU,EAAmBrE,IAAO,CACtBsE,UAAY1G,GAAU+F,EAAa3D,IAAK6C,MAAMC,KAAWlF,EAAMkF,MCrBvE,MAAMyB,GAAqB,IAAAtD,eAAc,CAAC,GCGpCuD,GAA2B,IAAAvD,eAAc,CAAC,GCL1CwD,EAAwBC,OAAOC,IAAI,yBCuBzC,SAAS,GAAsB,kBAAEC,EAAiB,oBAAEC,EAAmB,UAAEC,EAAS,eAAEC,EAAc,UAAEC,IAChGJ,GCtBJ,SAAsBK,GAClB,IAAK,MAAMjF,KAAOiF,EACdZ,EAAmBrE,GAAO,IACnBqE,EAAmBrE,MACnBiF,EAASjF,GAGxB,CDeyBkF,CAAaN,GA2ClC,MAAMO,GAAsB,IAAAC,aA1C5B,SAAyBxH,EAAOyH,GAK5B,IAAIC,EACJ,MAAMC,EAAiB,KAChB,IAAAjC,YAAWtC,MACXpD,EACH4H,SAAUC,EAAY7H,KAEpB,SAAEwD,GAAamE,EACfrC,EAAUD,EAAuBrF,GACjC8H,EAAcX,EAAenH,EAAOwD,GAC1C,IAAKA,GAAYG,EAAW,CAOxB2B,EAAQyC,cEvCpB,SAA0BX,EAAWU,EAAa9H,EAAOiH,GACrD,MAAQc,cAAeC,IAAW,IAAAtC,YAAWhC,GACvCuE,GAAc,IAAAvC,YAAW1B,GACzBkE,GAAkB,IAAAxC,YAAW,GAC7ByC,GAAsB,IAAAzC,YAAWtC,GAAqBK,cACtD2E,GAAmB,IAAAC,UAIzBpB,EAAsBA,GAAuBgB,EAAYK,UACpDF,EAAiBG,SAAWtB,IAC7BmB,EAAiBG,QAAUtB,EAAoBG,EAAW,CACtDU,cACAE,SACAhI,QACAkI,kBACAM,wBAAuBN,IACW,IAA5BA,EAAgBrH,QAEtBsH,yBAGR,MAAMJ,EAAgBK,EAAiBG,SACvC,IAAAE,qBAAmB,KACfV,GAAiBA,EAAcW,OAAO1I,EAAOkI,EAAgB,IAMjE,MAAMS,GAAa,IAAAN,QAAOjD,QAAQjE,OAAOyH,0BAkCzC,OAjCA/E,GAA0B,KACjBkE,IAELA,EAAcc,SAWVF,EAAWJ,SAAWR,EAAce,gBACpCf,EAAce,eAAeC,iBACjC,KAEJ,IAAAhF,YAAU,KACDgE,IAELA,EAAciB,kBACTL,EAAWJ,SAAWR,EAAce,gBACrCf,EAAce,eAAeC,iBAOjC5H,OAAOyH,6BAA0BrD,EACjCoD,EAAWJ,SAAU,EAAK,IAEvBR,CACX,CF1BoCkB,CAAiB7B,EAAWU,EAAaH,EAAgBV,GAKjF,MAAMiC,GAA2B,IAAAxD,YAAWkB,GACtCuC,GAAW,IAAAzD,YAAW1B,GAAaC,OACrCqB,EAAQyC,gBACRL,EAAgBpC,EAAQyC,cAAcT,aAEtCK,EAAgBwB,EAAUnC,EAAmBkC,GAErD,CAKA,OAAQ,gBAAoBxF,EAAc0F,SAAU,CAAEC,MAAO/D,GACzDoC,GAAiBpC,EAAQyC,cAAiB,gBAAoBL,EAAe,CAAEK,cAAezC,EAAQyC,iBAAkBJ,IAAqB,KAC7IT,EAAUE,EAAWpH,EG1DjC,SAAsB8H,EAAaC,EAAeN,GAC9C,OAAO,IAAA6B,cAAaC,IAChBA,GAAYzB,EAAY0B,OAAS1B,EAAY0B,MAAMD,GAC/CxB,IACAwB,EACMxB,EAAcyB,MAAMD,GACpBxB,EAAc0B,WAEpBhC,IAC2B,mBAAhBA,EACPA,EAAY8B,GAEPrF,EAAYuD,KACjBA,EAAYc,QAAUgB,GAE9B,GAOJ,CAACxB,GACL,CHmCwC2B,CAAa5B,EAAaxC,EAAQyC,cAAeN,GAAcK,EAAatE,EAAU8B,EAAQyC,eAClI,IAGA,OADAR,EAAoBV,GAAyBO,EACtCG,CACX,CACA,SAASM,GAAY,SAAED,IACnB,MAAM+B,GAAgB,IAAAjE,YAAWiB,GAAoBiD,GACrD,OAAOD,QAA8BpE,IAAbqC,EAClB+B,EAAgB,IAAM/B,EACtBA,CACV,CI5DA,SAASiC,EAAkBC,GACvB,SAASC,EAAO3C,EAAW4C,EAA8B,CAAC,GACtD,OAAO,EAAsBF,EAAa1C,EAAW4C,GACzD,CACA,GAAqB,oBAAVC,MACP,OAAOF,EAMX,MAAMG,EAAiB,IAAIC,IAC3B,OAAO,IAAIF,MAAMF,EAAQ,CAMrBK,IAAK,CAACC,EAASjI,KAIN8H,EAAeI,IAAIlI,IACpB8H,EAAeK,IAAInI,EAAK2H,EAAO3H,IAE5B8H,EAAeE,IAAIhI,KAGtC,CCxCA,MAAMoI,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAerD,GACpB,MAKqB,iBAAdA,IAIHA,EAAU/E,SAAS,SAOvBmI,EAAqBE,QAAQtD,IAAc,GAIvC,QAAQuD,KAAKvD,GAIrB,CC3BA,MAAMwD,EAAkB,CAAC,ECGzB,MAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIC,IAAIF,GCtB/B,SAASG,EAAoB5I,GAAK,OAAEoE,EAAM,SAAEoB,IACxC,OAAQkD,EAAeR,IAAIlI,IACvBA,EAAI6I,WAAW,YACbzE,QAAuBjB,IAAbqC,OACLgD,EAAgBxI,IAAgB,YAARA,EACvC,CCRA,MAAM8I,EAAiB7B,GAAUjE,QAAQiE,GAASA,EAAM8B,aCElDC,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAEpBC,EAAgBZ,EAAmBa,OCRzC,MAAMC,EAAyBC,GAAWxJ,GAAuB,iBAARA,GAAoBA,EAAI6I,WAAWW,GACtFC,EAAoBF,EAAsB,MAC1CG,EAAqBH,EAAsB,UCC3CI,EAAiB,CAAC1C,EAAO2C,IACpBA,GAAyB,iBAAV3C,EAChB2C,EAAKC,UAAU5C,GACfA,ECNJ6C,EAAQ,CAACC,EAAKC,EAAK3H,IAAM4H,KAAKF,IAAIE,KAAKD,IAAI3H,EAAG0H,GAAMC,GCEpDE,EAAS,CACX3B,KAAOlG,GAAmB,iBAANA,EACpB8H,MAAOC,WACPP,UAAYxH,GAAMA,GAEhBgI,EAAQ,IACPH,EACHL,UAAYxH,GAAMyH,EAAM,EAAG,EAAGzH,IAE5BiI,EAAQ,IACPJ,EACHK,QAAS,GCPPC,EAAYnI,GAAM4H,KAAKQ,MAAU,IAAJpI,GAAc,IAC3CqI,EAAa,uBACbC,EAAa,8FACbC,EAAmB,+FACzB,SAASC,EAASxI,GACd,MAAoB,iBAANA,CAClB,CCVA,MAAMyI,EAAkBC,IAAS,CAC7BxC,KAAOlG,GAAMwI,EAASxI,IAAMA,EAAE2I,SAASD,IAAiC,IAAxB1I,EAAE4I,MAAM,KAAK3B,OAC7Da,MAAOC,WACPP,UAAYxH,GAAM,GAAGA,IAAI0I,MAEvBG,EAAUJ,EAAe,OACzBK,EAAUL,EAAe,KACzBM,EAAKN,EAAe,MACpBO,EAAKP,EAAe,MACpBQ,GAAKR,EAAe,MACpBS,GAAqB,IACpBJ,EACHhB,MAAQ9H,GAAM8I,EAAQhB,MAAM9H,GAAK,IACjCwH,UAAYxH,GAAM8I,EAAQtB,UAAc,IAAJxH,ICblC,GAAM,IACL6H,EACHL,UAAWI,KAAKQ,OCAde,GAAmB,CAErBC,YAAaL,EACbM,eAAgBN,EAChBO,iBAAkBP,EAClBQ,kBAAmBR,EACnBS,gBAAiBT,EACjBU,aAAcV,EACdW,OAAQX,EACRY,oBAAqBZ,EACrBa,qBAAsBb,EACtBc,wBAAyBd,EACzBe,uBAAwBf,EAExBgB,MAAOhB,EACPiB,SAAUjB,EACV/L,OAAQ+L,EACRkB,UAAWlB,EACXmB,KAAMnB,EACNoB,IAAKpB,EACLqB,MAAOrB,EACPsB,OAAQtB,EACRuB,KAAMvB,EAENwB,QAASxB,EACTyB,WAAYzB,EACZ0B,aAAc1B,EACd2B,cAAe3B,EACf4B,YAAa5B,EACb6B,OAAQ7B,EACR8B,UAAW9B,EACX+B,YAAa/B,EACbgC,aAAchC,EACdiC,WAAYjC,EAEZkC,OAAQpC,EACRqC,QAASrC,EACTsC,QAAStC,EACTuC,QAASvC,EACTZ,MAAK,EACLoD,OAAQpD,EACRqD,OAAQrD,EACRsD,OAAQtD,EACRuD,KAAM3C,EACN4C,MAAO5C,EACP6C,MAAO7C,EACP8C,SAAU5C,EACV6C,WAAY7C,EACZ8C,WAAY9C,EACZ+C,WAAY/C,EACZnC,EAAGmC,EACHlC,EAAGkC,EACHjC,EAAGiC,EACHgD,YAAahD,EACbhC,qBAAsBgC,EACtBiD,QAAShE,EACTiE,QAAS/C,GACTgD,QAAShD,GACTiD,QAASpD,EAETqD,OAAQ,GAERC,YAAarE,EACbsE,cAAetE,EACfuE,WAAY,IC9DhB,SAASC,GAAgBC,EAAOC,EAAcC,EAASC,GACnD,MAAM,MAAEC,EAAK,KAAEC,EAAI,UAAEtF,EAAS,gBAAEuF,GAAoBN,EAEpD,IAAIO,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,MAAMvP,KAAO+O,EAAc,CAC5B,MAAM9H,EAAQ8H,EAAa/O,GAI3B,GAAIyJ,EAAkBzJ,GAAM,CACxBmP,EAAKnP,GAAOiH,EACZ,QACJ,CAEA,MAAMuI,EAAYhE,GAAiBxL,GAC7ByP,EAAc9F,EAAe1C,EAAOuI,GAC1C,GAAI9G,EAAeR,IAAIlI,GAAM,CAKzB,GAHAqP,GAAe,EACfxF,EAAU7J,GAAOyP,GAEZF,EACD,SAEAtI,KAAWuI,EAAUjF,SAAW,KAChCgF,GAAkB,EAC1B,MACSvP,EAAI6I,WAAW,WAEpByG,GAAqB,EACrBF,EAAgBpP,GAAOyP,GAGvBP,EAAMlP,GAAOyP,CAErB,CAiBA,GAhBKV,EAAalF,YACVwF,GAAgBJ,EAChBC,EAAMrF,UTtClB,SAAwBA,GAAW,2BAAE6F,GAA6B,EAAI,mBAAEC,GAAqB,GAASC,EAAoBX,GAEtH,IAAIY,EAAkB,GAKtB,IAAK,IAAIC,EAAI,EAAGA,EAAIzG,EAAeyG,IAAK,CACpC,MAAM9P,EAAMyI,EAAmBqH,QACR3M,IAAnB0G,EAAU7J,KAEV6P,GAAmB,GADG7G,EAAehJ,IAAQA,KACN6J,EAAU7J,OAEzD,CAaA,OAZI0P,IAA+B7F,EAAUV,IACzC0G,GAAmB,iBAEvBA,EAAkBA,EAAgBE,OAG9Bd,EACAY,EAAkBZ,EAAkBpF,EAAW+F,EAAqB,GAAKC,GAEpEF,GAAsBC,IAC3BC,EAAkB,QAEfA,CACX,CSW8BG,CAAelB,EAAMjF,UAAWmF,EAASO,EAAiBN,GAEvEC,EAAMrF,YAKXqF,EAAMrF,UAAY,SAOtByF,EAAoB,CACpB,MAAM,QAAEhB,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEC,EAAU,GAAOY,EAC3DF,EAAME,gBAAkB,GAAGd,KAAWC,KAAWC,GACrD,CACJ,CCvEA,MAAMyB,GAAwB,KAAM,CAChCf,MAAO,CAAC,EACRrF,UAAW,CAAC,EACZuF,gBAAiB,CAAC,EAClBD,KAAM,CAAC,ICEX,SAASe,GAAkBvQ,EAAQwQ,EAAQvS,GACvC,IAAK,MAAMoC,KAAOmQ,EACTrH,EAAcqH,EAAOnQ,KAAU4I,EAAoB5I,EAAKpC,KACzD+B,EAAOK,GAAOmQ,EAAOnQ,GAGjC,CAQA,SAASoQ,GAASxS,EAAO8H,EAAatE,GAClC,MACM8N,EAAQ,CAAC,EAMf,OAFAgB,GAAkBhB,EALAtR,EAAMsR,OAAS,CAAC,EAKEtR,GACpCoE,OAAOqO,OAAOnB,EAdlB,UAAgC,kBAAED,GAAqBvJ,EAAatE,GAChE,OAAO,IAAAmC,UAAQ,KACX,MAAMuL,EAAQmB,KAEd,OADApB,GAAgBC,EAAOpJ,EAAa,CAAEgK,4BAA6BtO,GAAY6N,GACxEjN,OAAOqO,OAAO,CAAC,EAAGvB,EAAMK,KAAML,EAAMI,MAAM,GAClD,CAACxJ,GACR,CAQyB4K,CAAuB1S,EAAO8H,EAAatE,IACzDxD,EAAM2S,gBAAkB3S,EAAM2S,gBAAgBrB,GAASA,CAClE,CACA,SAASsB,GAAa5S,EAAO8H,EAAatE,GAEtC,MAAMqP,EAAY,CAAC,EACbvB,EAAQkB,GAASxS,EAAO8H,EAAatE,GAoB3C,OAnBIxD,EAAMkG,OAA+B,IAAvBlG,EAAM8S,eAEpBD,EAAUE,WAAY,EAEtBzB,EAAM0B,WACF1B,EAAM2B,iBACF3B,EAAM4B,mBACF,OAEZ5B,EAAM6B,aACa,IAAfnT,EAAMkG,KACA,OACA,QAAsB,MAAflG,EAAMkG,KAAe,IAAM,WAEzBX,IAAnBvF,EAAMoT,WACLpT,EAAMqT,OAASrT,EAAMsT,YAActT,EAAMuT,YAC1CV,EAAUO,SAAW,GAEzBP,EAAUvB,MAAQA,EACXuB,CACX,CChDA,MAAMW,GAAmB,IAAIzI,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,yBACA,4BACA,kBACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,eACA,aAUJ,SAAS0I,GAAkBrR,GACvB,OAAQA,EAAI6I,WAAW,UAClB7I,EAAI6I,WAAW,SAAmB,cAAR7I,GAC3BA,EAAI6I,WAAW,WACf7I,EAAI6I,WAAW,UACf7I,EAAI6I,WAAW,UACfuI,GAAiBlJ,IAAIlI,EAC7B,CCtDA,IAAIsR,GAAiBtR,IAASqR,GAAkBrR,GAoBhD,KAnBiCuR,GAyBLC,QAAQ,0BAA0BjH,WArB1D+G,GAAiBtR,GAAQA,EAAI6I,WAAW,OAASwI,GAAkBrR,GAAOuR,GAAYvR,GAsB1F,CACA,MAAOyR,IAEP,CA7BA,IAAiCF,GCDjC,SAASG,GAAWC,EAAQC,EAAQrF,GAChC,MAAyB,iBAAXoF,EACRA,EACAvG,EAAGvB,UAAU+H,EAASrF,EAAOoF,EACvC,CCJA,MAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mBCDX,SAASE,GAAclD,GAAO,MAAEmD,EAAK,MAAEC,EAAK,UAAEC,EAAS,QAAE7D,EAAO,QAAEC,EAAO,WAAEpQ,EAAU,YAAEiU,EAAc,EAAC,WAAEC,EAAa,KAElHC,GAAUtD,EAASuD,EAAUtD,GAM5B,GALAJ,GAAgBC,EAAOwD,EAAQtD,EAASC,GAKpCsD,EAIA,YAHIzD,EAAMI,MAAM5P,UACZwP,EAAM0D,MAAMlT,QAAUwP,EAAMI,MAAM5P,UAI1CwP,EAAM0D,MAAQ1D,EAAMI,MACpBJ,EAAMI,MAAQ,CAAC,EACf,MAAM,MAAEsD,EAAK,MAAEtD,EAAK,WAAEuD,GAAe3D,EAKjC0D,EAAM3I,YACF4I,IACAvD,EAAMrF,UAAY2I,EAAM3I,kBACrB2I,EAAM3I,WAGb4I,SACatP,IAAZmL,QAAqCnL,IAAZoL,GAAyBW,EAAMrF,aACzDqF,EAAME,gBFzBd,SAAgCqD,EAAYnE,EAASC,GAGjD,MAAO,GAFWmD,GAAWpD,EAASmE,EAAWxJ,EAAGwJ,EAAWrG,UAC7CsF,GAAWnD,EAASkE,EAAWvJ,EAAGuJ,EAAWpT,SAEnE,CEqBgCqT,CAAuBD,OAAwBtP,IAAZmL,EAAwBA,EAAU,QAAiBnL,IAAZoL,EAAwBA,EAAU,UAG1HpL,IAAV8O,IACAO,EAAMvJ,EAAIgJ,QACA9O,IAAV+O,IACAM,EAAMtJ,EAAIgJ,QACI/O,IAAdgP,IACAK,EAAMlI,MAAQ6H,QAEChP,IAAfhF,GD7BR,SAAsBqU,EAAOlJ,EAAQqJ,EAAU,EAAGf,EAAS,EAAGgB,GAAc,GAExEJ,EAAMrU,WAAa,EAGnB,MAAM0U,EAAOD,EAAcf,GAAWE,GAEtCS,EAAMK,EAAKjB,QAAUxG,EAAGvB,WAAW+H,GAEnC,MAAMzT,EAAaiN,EAAGvB,UAAUP,GAC1B8I,EAAchH,EAAGvB,UAAU8I,GACjCH,EAAMK,EAAKf,OAAS,GAAG3T,KAAciU,GACzC,CCkBQU,CAAaN,EAAOrU,EAAYiU,EAAaC,GAAY,EAEjE,CC/CA,MAAMU,GAAuB,KAAM,IAC5B9C,KACHuC,MAAO,CAAC,ICJND,GAAYS,GAAuB,iBAARA,GAA0C,QAAtBA,EAAIC,cCMzD,SAASC,GAAYtV,EAAO8H,EAAayN,EAAWnO,GAChD,MAAMoO,GAAc,IAAA7P,UAAQ,KACxB,MAAMuL,EAAQiE,KAEd,OADAf,GAAclD,EAAOpJ,EAAa,CAAEgK,4BAA4B,GAAS6C,GAASvN,GAAYpH,EAAMqR,mBAC7F,IACAH,EAAM0D,MACTtD,MAAO,IAAKJ,EAAMI,OACrB,GACF,CAACxJ,IACJ,GAAI9H,EAAMsR,MAAO,CACb,MAAMmE,EAAY,CAAC,EACnBnD,GAAkBmD,EAAWzV,EAAMsR,MAAOtR,GAC1CwV,EAAYlE,MAAQ,IAAKmE,KAAcD,EAAYlE,MACvD,CACA,OAAOkE,CACX,CCdA,SAASE,GAAgBC,GAAqB,GAwB1C,MAvBkB,CAACvO,EAAWpH,EAAOmE,GAAOgN,gBAAgB3N,KACxD,MAGMgS,GAHiB/K,EAAerD,GAChCkO,GACA1C,IAC6B5S,EAAOmR,EAAc3N,EAAU4D,GAC5DwO,EPoBd,SAAqB5V,EAAO6V,EAAOF,GAC/B,MAAMC,EAAgB,CAAC,EACvB,IAAK,MAAMxT,KAAOpC,EAQF,WAARoC,GAA4C,iBAAjBpC,EAAM8V,SAEjCpC,GAActR,KACU,IAAvBuT,GAA+BlC,GAAkBrR,KAChDyT,IAAUpC,GAAkBrR,IAE7BpC,EAAiB,WAAKoC,EAAI6I,WAAW,aACtC2K,EAAcxT,GAAOpC,EAAMoC,IAGnC,OAAOwT,CACX,COzC8BG,CAAY/V,EAA4B,iBAAdoH,EAAwBuO,GAClEK,EAAe,IACdJ,KACAJ,EACHrR,QAOE,SAAExB,GAAa3C,EACfiW,GAAmB,IAAAtQ,UAAQ,IAAOuF,EAAcvI,GAAYA,EAASyH,MAAQzH,GAAW,CAACA,IAC/F,OAAO,IAAAuT,eAAc9O,EAAW,IACzB4O,EACHrT,SAAUsT,GACZ,CAGV,CC7BA,MAAME,GAAeC,GAAQA,EAAIC,QAAQ,kBAAmB,SAAShB,cCHrE,SAASiB,GAAWC,GAAS,MAAEjF,EAAK,KAAEC,GAAQiF,EAAWC,GACrDrS,OAAOqO,OAAO8D,EAAQjF,MAAOA,EAAOmF,GAAcA,EAAWC,oBAAoBF,IAEjF,IAAK,MAAMpU,KAAOmP,EACdgF,EAAQjF,MAAMqF,YAAYvU,EAAKmP,EAAKnP,GAE5C,CCHA,MAAMwU,GAAsB,IAAI7L,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAAS8L,GAAUN,EAASO,EAAaC,EAAYN,GACjDH,GAAWC,EAASO,OAAavR,EAAWkR,GAC5C,IAAK,MAAMrU,KAAO0U,EAAYlC,MAC1B2B,EAAQS,aAAcJ,GAAoBtM,IAAIlI,GAA0BA,EAAnB+T,GAAY/T,GAAY0U,EAAYlC,MAAMxS,GAEvG,CCNA,SAAS6U,GAA4BjX,EAAOkX,GACxC,MAAM,MAAE5F,GAAUtR,EACZmX,EAAY,CAAC,EACnB,IAAK,MAAM/U,KAAOkP,GACVpG,EAAcoG,EAAMlP,KACnB8U,EAAU5F,OAASpG,EAAcgM,EAAU5F,MAAMlP,KAClD4I,EAAoB5I,EAAKpC,MACzBmX,EAAU/U,GAAOkP,EAAMlP,IAG/B,OAAO+U,CACX,CCVA,SAAS,GAA4BnX,EAAOkX,GACxC,MAAMC,EAAYF,GAA8BjX,EAAOkX,GACvD,IAAK,MAAM9U,KAAOpC,EACd,GAAIkL,EAAclL,EAAMoC,KAAS8I,EAAcgM,EAAU9U,IAAO,CAI5D+U,GAHuD,IAArCtM,EAAmBH,QAAQtI,GACvC,OAASA,EAAIgV,OAAO,GAAG9U,cAAgBF,EAAIiV,UAAU,GACrDjV,GACiBpC,EAAMoC,EACjC,CAEJ,OAAO+U,CACX,CCfA,SAASG,GAAwBtX,EAAOuX,EAAYxN,EAAQyN,EAAgB,CAAC,EAAGC,EAAkB,CAAC,GAsB/F,MAlB0B,mBAAfF,IACPA,EAAaA,OAAsBhS,IAAXwE,EAAuBA,EAAS/J,EAAM+J,OAAQyN,EAAeC,IAM/D,iBAAfF,IACPA,EAAavX,EAAM4B,UAAY5B,EAAM4B,SAAS2V,IAOxB,mBAAfA,IACPA,EAAaA,OAAsBhS,IAAXwE,EAAuBA,EAAS/J,EAAM+J,OAAQyN,EAAeC,IAElFF,CACX,CCvBA,MAAMG,GAAqBjT,GAChBC,MAAMC,QAAQF,GCCnBkT,GAAiBlT,GACZW,QAAQX,GAAkB,iBAANA,GAAkBA,EAAEmT,KAAOnT,EAAEoT,SAEtDC,GAAgCrT,GAE3BiT,GAAkBjT,GAAKA,EAAEA,EAAEiH,OAAS,IAAM,EAAIjH,ECCzD,SAASsT,GAAmB1O,GACxB,MAAM2O,EAAiB9M,EAAc7B,GAASA,EAAMe,MAAQf,EAC5D,OAAOsO,GAAcK,GACfA,EAAeH,UACfG,CACV,CCMA,MAAMC,GAAsBC,GAAW,CAAClY,EAAOwD,KAC3C,MAAM8B,GAAU,IAAAI,YAAWhC,GACrBwE,GAAkB,IAAAxC,YAAW,GAC7ByS,EAAO,IAbjB,UAAmB,4BAAElB,EAA2B,kBAAEmB,EAAiB,QAAEC,GAAYrY,EAAOsF,EAAS4C,GAC7F,MAAMgJ,EAAQ,CACVC,aAAcmH,GAAiBtY,EAAOsF,EAAS4C,EAAiB+O,GAChEH,YAAasB,KAKjB,OAHIC,IACAnH,EAAM1H,MAASD,GAAa8O,EAAQrY,EAAOuJ,EAAU2H,IAElDA,CACX,CAIuBqH,CAAUL,EAAQlY,EAAOsF,EAAS4C,GACrD,OAAO1E,EAAW2U,ICdtB,SAAqBK,GACjB,MAAMrU,GAAM,IAAAkE,QAAO,MAInB,OAHoB,OAAhBlE,EAAIoE,UACJpE,EAAIoE,QAAUiQ,KAEXrU,EAAIoE,OACf,CDQ+BkQ,CAAYN,EAAK,EAEhD,SAASG,GAAiBtY,EAAOsF,EAAS4C,EAAiBwQ,GACvD,MAAM5C,EAAS,CAAC,EACV6C,EAAeD,EAAmB1Y,EAAO,CAAC,GAChD,IAAK,MAAMoC,KAAOuW,EACd7C,EAAO1T,GAAO2V,GAAmBY,EAAavW,IAElD,IAAI,QAAEvB,EAAO,QAAEgB,GAAY7B,EAC3B,MAAM4Y,EAA0B5T,EAAsBhF,GAChD6Y,EAAkB1T,EAAcnF,GAClCsF,GACAuT,IACCD,IACiB,IAAlB5Y,EAAMwF,eACUD,IAAZ1E,IACAA,EAAUyE,EAAQzE,cACN0E,IAAZ1D,IACAA,EAAUyD,EAAQzD,UAE1B,IAAIiX,IAA4B5Q,IACE,IAA5BA,EAAgBrH,QAEtBiY,EAA4BA,IAAyC,IAAZjY,EACzD,MAAMkY,EAAeD,EAA4BjX,EAAUhB,EAC3D,GAAIkY,GACwB,kBAAjBA,IACNnU,EAAoBmU,GAAe,EACvBrU,MAAMC,QAAQoU,GAAgBA,EAAe,CAACA,IACtDC,SAASzB,IACV,MAAM0B,EAAW3B,GAAwBtX,EAAOuX,GAChD,IAAK0B,EACD,OACJ,MAAM,cAAEC,EAAa,WAAExY,KAAeqB,GAAWkX,EACjD,IAAK,MAAM7W,KAAOL,EAAQ,CACtB,IAAIoX,EAAcpX,EAAOK,GACzB,GAAIsC,MAAMC,QAAQwU,GAAc,CAQ5BA,EAAcA,EAHAL,EACRK,EAAYzN,OAAS,EACrB,EAEV,CACoB,OAAhByN,IACArD,EAAO1T,GAAO+W,EAEtB,CACA,IAAK,MAAM/W,KAAO8W,EACdpD,EAAO1T,GAAO8W,EAAc9W,EAAI,GAE5C,CACA,OAAO0T,CACX,CE9EA,MAAMsD,GAAQC,GAAQA,ECAtB,MAAMC,GACF,WAAAC,GACIC,KAAKC,MAAQ,GACbD,KAAKE,UAAY,IAAI3O,GACzB,CACA,GAAA4O,CAAIC,GACA,IAAKJ,KAAKE,UAAUpP,IAAIsP,GAGpB,OAFAJ,KAAKE,UAAUC,IAAIC,GACnBJ,KAAKC,MAAMI,KAAKD,IACT,CAEf,CACA,MAAAE,CAAOF,GACH,MAAMG,EAAQP,KAAKC,MAAM/O,QAAQkP,IAClB,IAAXG,IACAP,KAAKC,MAAMO,OAAOD,EAAO,GACzBP,KAAKE,UAAUO,OAAOL,GAE9B,CACA,KAAAM,GACIV,KAAKC,MAAM/N,OAAS,EACpB8N,KAAKE,UAAUQ,OACnB,ECpBJ,MAAMC,GAAa,CACf,UACA,OACA,SACA,YACA,SACA,cCLJ,MAAQC,SAAU,GAAOC,OAAQC,GAAapJ,MAAOqJ,GAAS,MAAEC,IDQhE,SAA6BC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EACxB,MAAM1J,EAAQ,CACV2J,MAAO,EACPC,UAAW,EACXC,cAAc,GAEZP,EAAQL,GAAWa,QAAO,CAACC,EAAK7Y,KAClC6Y,EAAI7Y,GDIZ,SAA0BuY,GAKtB,IAAIO,EAAY,IAAI5B,GAChB6B,EAAY,IAAI7B,GAChB8B,EAAW,EAKXL,GAAe,EACfM,GAAiB,EAIrB,MAAMC,EAAc,IAAIC,QAClBC,EAAO,CAITpB,SAAU,CAACqB,EAAUC,GAAY,EAAOC,GAAY,KAChD,MAAMC,EAAoBD,GAAaZ,EACjCc,EAAQD,EAAoBV,EAAYC,EAO9C,OANIO,GACAJ,EAAY3B,IAAI8B,GAChBI,EAAMlC,IAAI8B,IAAaG,GAAqBb,IAE5CK,EAAWF,EAAUzB,MAAM/N,QAExB+P,CAAQ,EAKnBpB,OAASoB,IACLN,EAAUrB,OAAO2B,GACjBH,EAAYrB,OAAOwB,EAAS,EAKhC7B,QAAUW,IAMN,GAAIQ,EACAM,GAAiB,MADrB,CAUA,GANAN,GAAe,GACdG,EAAWC,GAAa,CAACA,EAAWD,GAErCC,EAAUjB,QAEVkB,EAAWF,EAAUzB,MAAM/N,OACvB0P,EACA,IAAK,IAAIlJ,EAAI,EAAGA,EAAIkJ,EAAUlJ,IAAK,CAC/B,MAAMuJ,EAAWP,EAAUzB,MAAMvH,GACjCuJ,EAASlB,GACLe,EAAYhR,IAAImR,KAChBD,EAAKpB,SAASqB,GACdd,IAER,CAEJI,GAAe,EACXM,IACAA,GAAiB,EACjBG,EAAK5B,QAAQW,GApBjB,CAqBA,GAGR,OAAOiB,CACX,CCjFmBM,EAAiB,IAAOnB,GAAe,IAC3CM,IACR,CAAC,GACEc,EAAeC,GAAWxB,EAAMwB,GAAQpC,QAAQ1I,GAChD+K,EAAe,KACjB,MAAMnB,EAAYoB,YAAYC,MAC9BxB,GAAe,EACfzJ,EAAM2J,MAAQD,EACR,IAAO,GACPvO,KAAKD,IAAIC,KAAKF,IAAI2O,EAAY5J,EAAM4J,UAnB/B,IAmBuD,GAClE5J,EAAM4J,UAAYA,EAClB5J,EAAM6J,cAAe,EACrBZ,GAAWnB,QAAQ+C,GACnB7K,EAAM6J,cAAe,EACjBJ,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkBwB,GACtB,EAmBJ,MAAO,CAAE7B,SAVQD,GAAWa,QAAO,CAACC,EAAK7Y,KACrC,MAAMoZ,EAAOhB,EAAMpY,GAMnB,OALA6Y,EAAI7Y,GAAO,CAACwX,EAAS8B,GAAY,EAAOC,GAAY,KAC3ChB,IATTA,GAAe,EACfC,GAAoB,EACf1J,EAAM6J,cACPN,EAAkBwB,IAQXT,EAAKpB,SAASR,EAAS8B,EAAWC,IAEtCV,CAAG,GACX,CAAC,GAEeZ,OADHT,GAAYO,GAAWnB,SAAS5W,GAAQoY,EAAMpY,GAAKiY,OAAOT,KAC/C1I,QAAOsJ,QACtC,CCtD2E4B,CAAqD,oBAA1BC,sBAAwCA,sBAAwBjD,IAAM,GCKtKkD,GAAkB,CACpBnV,eAAgB8Q,GAAmB,CAC/BhB,4BAA6B,GAC7BmB,kBAAmBjD,GACnBkD,QAAS,CAACrY,EAAOuJ,GAAYuN,cAAa3F,mBACtC,GAAMoL,MAAK,KACP,IACIzF,EAAYjC,WAEJ,mBADGtL,EAASiT,QAEVjT,EAASiT,UACTjT,EAASkT,uBACvB,CACA,MAAOC,GAEH5F,EAAYjC,WAAa,CACrBxJ,EAAG,EACHC,EAAG,EACHkD,MAAO,EACP/M,OAAQ,EAEhB,KAEJ,GAAMoH,QAAO,KACTuL,GAAc0C,EAAa3F,EAAc,CAAEW,4BAA4B,GAAS6C,GAASpL,EAASoT,SAAU3c,EAAMqR,mBAClHwF,GAAUtN,EAAUuN,EAAY,GAClC,KC9BR8F,GAAmB,CACrBzV,eAAgB8Q,GAAmB,CAC/BhB,4BAA2B,GAC3BmB,kBAAmB/F,MCP3B,SAASwK,GAAY9a,EAAQ+a,EAAWC,EAAS3L,EAAU,CAAE4L,SAAS,IAElE,OADAjb,EAAOkb,iBAAiBH,EAAWC,EAAS3L,GACrC,IAAMrP,EAAOmb,oBAAoBJ,EAAWC,EACvD,CCHA,MAAMI,GAAoBC,GACI,UAAtBA,EAAMC,YACyB,iBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,UCXrB,SAASC,GAAiBJ,EAAOK,EAAY,QACzC,MAAO,CACHC,MAAO,CACHrS,EAAG+R,EAAMK,EAAY,KACrBnS,EAAG8R,EAAMK,EAAY,MAGjC,CACA,MAAME,GAAkBZ,GACZK,GAAUD,GAAiBC,IAAUL,EAAQK,EAAOI,GAAiBJ,ICRjF,SAASQ,GAAgB7b,EAAQ+a,EAAWC,EAAS3L,GACjD,OAAOyL,GAAY9a,EAAQ+a,EAAWa,GAAeZ,GAAU3L,EACnE,CCEA,MAAMyM,GAAmB,CAACC,EAAGC,IAAOtZ,GAAMsZ,EAAED,EAAErZ,IACxCuZ,GAAO,IAAIC,IAAiBA,EAAajD,OAAO6C,ICRtD,SAASK,GAAWhZ,GAChB,IAAIiZ,EAAO,KACX,MAAO,KACH,MAAMC,EAAW,KACbD,EAAO,IAAI,EAEf,OAAa,OAATA,IACAA,EAAOjZ,EACAkZ,EAEC,CAEpB,CACA,MAAMC,GAAuBH,GAAW,kBAClCI,GAAqBJ,GAAW,gBACtC,SAASK,GAAcrY,GACnB,IAAIiY,GAAO,EACX,GAAa,MAATjY,EACAiY,EAAOG,UAEN,GAAa,MAATpY,EACLiY,EAAOE,SAEN,CACD,MAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBN,EAAO,KACHK,IACAC,GAAc,GAKdD,GACAA,IACAC,GACAA,IAEZ,CACA,OAAON,CACX,CACA,SAASO,KAGL,MAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,CClDA,MAAMC,GACF,WAAArF,CAAYsF,GACRrF,KAAKsF,WAAY,EACjBtF,KAAKqF,KAAOA,CAChB,CACA,MAAAnW,GAAW,ECCf,SAASqW,GAAcF,EAAMG,GACzB,MAAMlC,EAAY,WAAakC,EAAW,QAAU,SAC9CC,EAAe,WAAaD,EAAW,QAAU,OAYvD,OAAOpB,GAAgBiB,EAAKtW,QAASuU,GAXjB,CAACM,EAAO8B,KACxB,GAAmB,UAAf9B,EAAMpR,MAAoB0S,KAC1B,OACJ,MAAM1e,EAAQ6e,EAAKM,WACfN,EAAK/V,gBAAkB9I,EAAMgB,YAC7B6d,EAAK/V,eAAesW,UAAU,aAAcJ,GAE5Chf,EAAMif,IACN,GAAMvW,QAAO,IAAM1I,EAAMif,GAAc7B,EAAO8B,IAClD,GAEyD,CACzDlC,SAAU6B,EAAKM,WAAWF,IAElC,CChBA,MAAMI,GAAgB,CAACrX,EAAQsX,MACtBA,IAGItX,IAAWsX,GAITD,GAAcrX,EAAQsX,EAAMC,gBCL3C,SAASC,GAA0Bta,EAAM6X,GACrC,IAAKA,EACD,OACJ,MAAM0C,EAAwB,IAAIC,aAAa,UAAYxa,GAC3D6X,EAAQ0C,EAAuBjC,GAAiBiC,GACpD,CCVA,MAAME,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAwBC,IAC1B,MAAMtE,EAAWkE,GAAkBvV,IAAI2V,EAAMhe,QAC7C0Z,GAAYA,EAASsE,EAAM,EAEzBC,GAA4BC,IAC9BA,EAAQjH,QAAQ8G,GAAqB,EAqBzC,SAASI,GAAoB3J,EAASnF,EAASqK,GAC3C,MAAM0E,EApBV,UAAkC,KAAEC,KAAShP,IACzC,MAAMiP,EAAaD,GAAQxc,SAItBic,GAAUvV,IAAI+V,IACfR,GAAUtV,IAAI8V,EAAY,CAAC,GAE/B,MAAMC,EAAgBT,GAAUzV,IAAIiW,GAC9Bje,EAAMme,KAAKC,UAAUpP,GAQ3B,OAHKkP,EAAcle,KACfke,EAAcle,GAAO,IAAIqe,qBAAqBT,GAA0B,CAAEI,UAAShP,KAEhFkP,EAAcle,EACzB,CAEsCse,CAAyBtP,GAG3D,OAFAuO,GAAkBpV,IAAIgM,EAASkF,GAC/B0E,EAA0BQ,QAAQpK,GAC3B,KACHoJ,GAAkB1F,OAAO1D,GACzB4J,EAA0BS,UAAUrK,EAAQ,CAEpD,CC3CA,MAAMsK,GAAiB,CACnB5b,KAAM,EACN6b,IAAK,GCAT,MAAMC,GAAoB,CACtBxa,OAAQ,CACJqY,QDAR,cAA4BA,GACxB,WAAArF,GACIyH,SAASC,WACTzH,KAAK0H,gBAAiB,EACtB1H,KAAK2H,UAAW,CACpB,CACA,aAAAC,GACI5H,KAAK/P,UACL,MAAM,SAAE4X,EAAW,CAAC,GAAM7H,KAAKqF,KAAKM,YAC9B,KAAEiB,EAAM/Q,OAAQiS,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASH,EACtDjQ,EAAU,CACZgP,KAAMA,EAAOA,EAAK7X,aAAUhD,EAC5B+b,aACAG,UAA6B,iBAAXF,EAAsBA,EAASV,GAAeU,IA+BpE,OAAOrB,GAAoB1G,KAAKqF,KAAKtW,QAAS6I,GA7BhB2O,IAC1B,MAAM,eAAE2B,GAAmB3B,EAI3B,GAAIvG,KAAK2H,WAAaO,EAClB,OAMJ,GALAlI,KAAK2H,SAAWO,EAKZF,IAASE,GAAkBlI,KAAK0H,eAChC,OAEKQ,IACLlI,KAAK0H,gBAAiB,GAEtB1H,KAAKqF,KAAK/V,gBACV0Q,KAAKqF,KAAK/V,eAAesW,UAAU,cAAesC,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoBpI,KAAKqF,KAAKM,WACjD1D,EAAWiG,EAAiBC,EAAkBC,EACpDnG,GAAYA,EAASsE,EAAM,GAGnC,CACA,KAAAvW,GACIgQ,KAAK4H,eACT,CACA,MAAA1Y,GACI,GAAoC,oBAAzB+X,qBACP,OACJ,MAAM,MAAEzgB,EAAK,UAAEkX,GAAcsC,KAAKqF,KACR,CAAC,SAAU,SAAU,QAAQ5Z,KAO/D,UAAkC,SAAEoc,EAAW,CAAC,IAAOA,SAAUQ,EAAe,CAAC,GAAM,CAAC,GACpF,OAAQ3c,GAASmc,EAASnc,KAAU2c,EAAa3c,EACrD,CAToE4c,CAAyB9hB,EAAOkX,KAExFsC,KAAK4H,eAEb,CACA,OAAA3X,GAAY,ICxDZpD,IAAK,CACDuY,QHMR,cAA2BA,GACvB,WAAArF,GACIyH,SAASC,WACTzH,KAAKuI,qBAAuB3I,GAC5BI,KAAKwI,mBAAqB5I,GAC1BI,KAAKyI,0BAA4B7I,GACjCI,KAAK0I,kBAAoB,CAACC,EAAYC,KAElC,GADA5I,KAAKwI,qBACDxI,KAAK6I,WACL,OACJ,MAAMriB,EAAQwZ,KAAKqF,KAAKM,WAelBmD,EAA0B1E,GAAgBzc,OAAQ,aAdhC,CAACohB,EAAUC,KAC/B,IAAKhJ,KAAKiJ,gBACN,OACJ,MAAM,MAAEpP,EAAK,YAAEqP,GAAgBlJ,KAAKqF,KAAKM,WACzC,GAAMzW,QAAO,KAKR2W,GAAc7F,KAAKqF,KAAKtW,QAASga,EAASxgB,QAErCsR,GAASA,EAAMkP,EAAUC,GADzBE,GAAeA,EAAYH,EAAUC,EACJ,GACzC,GAEgF,CAAExF,UAAWhd,EAAMqT,OAASrT,EAAmB,eAC/H2iB,EAA8B/E,GAAgBzc,OAAQ,iBAAiB,CAACyhB,EAAaC,IAAerJ,KAAKsJ,YAAYF,EAAaC,IAAa,CAAE7F,UAAWhd,EAAM0iB,aAAe1iB,EAAuB,mBAC9MwZ,KAAKwI,mBAAqBhE,GAAKsE,EAAyBK,GACxDnJ,KAAKuJ,WAAWZ,EAAYC,EAAU,EAE1C5I,KAAKwJ,qBAAuB,KACxB,MAmBMC,EAAwBpG,GAAYrD,KAAKqF,KAAKtW,QAAS,WAnBtC2a,IACnB,GAAyB,UAArBA,EAAa9gB,KAAmBoX,KAAK6I,WACrC,OAWJ7I,KAAKwI,qBACLxI,KAAKwI,mBAAqBnF,GAAYrD,KAAKqF,KAAKtW,QAAS,SAXpC4a,IACM,UAAnBA,EAAW/gB,KAAoBoX,KAAKiJ,iBAExCjD,GAA0B,MAAM,CAACpC,EAAO8B,KACpC,MAAM,MAAE7L,GAAUmG,KAAKqF,KAAKM,WACxB9L,GACA,GAAM3K,QAAO,IAAM2K,EAAM+J,EAAO8B,IACpC,GACF,IAINM,GAA0B,QAAQ,CAACpC,EAAO8B,KACtC1F,KAAKuJ,WAAW3F,EAAO8B,EAAK,GAC9B,IAQAkE,EAAqBvG,GAAYrD,KAAKqF,KAAKtW,QAAS,QALvC,KACViR,KAAK6I,YAEV7C,GAA0B,UAAU,CAACoD,EAAaC,IAAerJ,KAAKsJ,YAAYF,EAAaC,IAAY,IAG/GrJ,KAAKyI,0BAA4BjE,GAAKiF,EAAuBG,EAAmB,CAExF,CACA,UAAAL,CAAW3F,EAAO8B,GACd1F,KAAK6I,YAAa,EAClB,MAAM,WAAE/O,EAAU,SAAEC,GAAaiG,KAAKqF,KAAKM,WAIvC5L,GAAYiG,KAAKqF,KAAK/V,gBACtB0Q,KAAKqF,KAAK/V,eAAesW,UAAU,YAAY,GAE/C9L,GACA,GAAM5K,QAAO,IAAM4K,EAAW8J,EAAO8B,IAE7C,CACA,aAAAuD,GACIjJ,KAAKwI,qBACLxI,KAAK6I,YAAa,EAKlB,OAJc7I,KAAKqF,KAAKM,WACd5L,UAAYiG,KAAKqF,KAAK/V,gBAC5B0Q,KAAKqF,KAAK/V,eAAesW,UAAU,YAAY,IAE3CV,IACZ,CACA,WAAAoE,CAAY1F,EAAO8B,GACf,IAAK1F,KAAKiJ,gBACN,OACJ,MAAM,YAAEC,GAAgBlJ,KAAKqF,KAAKM,WAC9BuD,GACA,GAAMha,QAAO,IAAMga,EAAYtF,EAAO8B,IAE9C,CACA,KAAA1V,GACI,MAAMxJ,EAAQwZ,KAAKqF,KAAKM,WAClBkE,EAAwBzF,GAAgBpE,KAAKqF,KAAKtW,QAAS,cAAeiR,KAAK0I,kBAAmB,CAAElF,UAAWhd,EAAMsT,YAActT,EAAsB,kBACzJsjB,EAAsBzG,GAAYrD,KAAKqF,KAAKtW,QAAS,QAASiR,KAAKwJ,sBACzExJ,KAAKuI,qBAAuB/D,GAAKqF,EAAuBC,EAC5D,CACA,OAAA7Z,GACI+P,KAAKuI,uBACLvI,KAAKwI,qBACLxI,KAAKyI,2BACT,IGxGA9b,MAAO,CACHyY,QCTR,cAA2BA,GACvB,WAAArF,GACIyH,SAASC,WACTzH,KAAKwF,UAAW,CACpB,CACA,OAAAuE,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiBhK,KAAKqF,KAAKtW,QAAQkb,QAAQ,iBAC/C,CACA,MAAO/G,GACH8G,GAAiB,CACrB,CACKA,GAAmBhK,KAAKqF,KAAK/V,iBAElC0Q,KAAKqF,KAAK/V,eAAesW,UAAU,cAAc,GACjD5F,KAAKwF,UAAW,EACpB,CACA,MAAA0E,GACSlK,KAAKwF,UAAaxF,KAAKqF,KAAK/V,iBAEjC0Q,KAAKqF,KAAK/V,eAAesW,UAAU,cAAc,GACjD5F,KAAKwF,UAAW,EACpB,CACA,KAAAxV,GACIgQ,KAAK/P,QAAUuU,GAAKnB,GAAYrD,KAAKqF,KAAKtW,QAAS,SAAS,IAAMiR,KAAK+J,YAAY1G,GAAYrD,KAAKqF,KAAKtW,QAAS,QAAQ,IAAMiR,KAAKkK,WACzI,CACA,OAAAja,GAAY,IDtBZrD,MAAO,CACHwY,QLQR,cAA2BA,GACvB,KAAApV,GACIgQ,KAAK/P,QAAUuU,GAAKe,GAAcvF,KAAKqF,MAAM,GAAOE,GAAcvF,KAAKqF,MAAM,GACjF,CACA,OAAApV,GAAY,KO5BhB,SAASka,GAAeC,EAAMC,GAC1B,IAAKnf,MAAMC,QAAQkf,GACf,OAAO,EACX,MAAMC,EAAaD,EAAKnY,OACxB,GAAIoY,IAAeF,EAAKlY,OACpB,OAAO,EACX,IAAK,IAAIwG,EAAI,EAAGA,EAAI4R,EAAY5R,IAC5B,GAAI2R,EAAK3R,KAAO0R,EAAK1R,GACjB,OAAO,EAEf,OAAO,CACX,CCOA,SAAS6R,GAAehc,EAAewP,EAAYxN,GAC/C,MAAM/J,EAAQ+H,EAAcoX,WAC5B,OAAO7H,GAAwBtX,EAAOuX,OAAuBhS,IAAXwE,EAAuBA,EAAS/J,EAAM+J,OAf5F,SAAoBhC,GAChB,MAAMQ,EAAU,CAAC,EAEjB,OADAR,EAAc+N,OAAOkD,SAAQ,CAAC3P,EAAOjH,IAASmG,EAAQnG,GAAOiH,EAAMe,QAC5D7B,CACX,CAWoGyb,CAAWjc,GAP/G,SAAqBA,GACjB,MAAMkc,EAAW,CAAC,EAElB,OADAlc,EAAc+N,OAAOkD,SAAQ,CAAC3P,EAAOjH,IAAS6hB,EAAS7hB,GAAOiH,EAAM8B,gBAC7D8Y,CACX,CAG+H9Y,CAAYpD,GAC3I,CCnBA,MACMmc,GAA+B,QAAU/N,GADjB,kBCA9B,IAAIgO,GAAU/K,GACVgL,GAAYhL,GCGhB,MAAMiL,GAAyBC,GAAsB,IAAVA,EACrCC,GAAyBC,GAAiBA,EAAe,ICPzDC,IACO,ECDPC,GAAsBC,GAAWjgB,MAAMC,QAAQggB,IAAgC,iBAAdA,EAAO,GCE9E,SAASC,GAAuBD,GAC5B,OAAOvf,SAASuf,GACO,iBAAXA,GAAuBE,GAAqBF,IACpDD,GAAmBC,IAClBjgB,MAAMC,QAAQggB,IAAWA,EAAOG,MAAMF,IAC/C,CACA,MAAMG,GAAsB,EAAEjH,EAAGC,EAAGiH,EAAGljB,KAAO,gBAAgBgc,MAAMC,MAAMiH,MAAMljB,KAC1E+iB,GAAuB,CACzBI,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAQP,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CQ,QAASR,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1CS,OAAQT,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChDU,QAASV,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASW,GAAwBf,GAC7B,GAAKA,EAEL,OAAOD,GAAmBC,GACpBI,GAAoBJ,GACpBjgB,MAAMC,QAAQggB,GACVA,EAAO3iB,IAAI0jB,IACXb,GAAqBF,EACnC,CCRA,MAAMgB,GAAa,CAACC,EAAGC,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,EACEG,GAAuB,KACvBC,GAA2B,GAkBjC,SAASC,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOjN,GACX,MAAMkN,EAAYC,GArBtB,SAAyBlb,EAAGmb,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACAzU,EAAI,EACR,GACIyU,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWf,GAAWgB,EAAUT,EAAKE,GAAO/a,EACxCqb,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZta,KAAKua,IAAIF,GAAYX,MACxB7T,EAAI8T,IACV,OAAOW,CACX,CAK6BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQR,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAID,GAAWW,EAASV,GAAIO,EAAKE,EACxE,CC9CA,MAAMlB,GAASc,GAAY,IAAM,EAAG,EAAG,GACjCb,GAAUa,GAAY,EAAG,EAAG,IAAM,GAClCZ,GAAYY,GAAY,IAAM,EAAG,IAAM,GCJvCa,GAAiB5B,GACZxgB,MAAMC,QAAQugB,IAA4B,iBAAZA,EAAK,GCCxC6B,GAAgBpC,GAAYphB,GAAMA,GAAK,GAAMohB,EAAO,EAAIphB,GAAK,GAAK,EAAIohB,EAAO,GAAK,EAAIphB,KAAO,ECA7FyjB,GAAiBrC,GAAYphB,GAAM,EAAIohB,EAAO,EAAIphB,GCClD+hB,GAAU/hB,GAAM,EAAI8I,KAAK4a,IAAI5a,KAAK6a,KAAK3jB,IACvCgiB,GAAUyB,GAAc1B,IACxB6B,GAAYJ,GAAaxB,ICDzBE,GAAUQ,GAAY,IAAM,KAAM,IAAM,KACxCT,GAASwB,GAAcvB,IACvB2B,GAAYL,GAAavB,ICEzB6B,GAAe,CACjBpC,OAAQ7L,GACR+L,OAAM,GACNE,UAAS,GACTD,QAAO,GACPE,OAAM,GACN6B,UAAS,GACT5B,QAAO,GACPC,OAAM,GACN4B,UAAS,GACT3B,QAAO,GACP6B,WCjBgB/jB,IAAOA,GAAK,GAAK,EAAI,GAAMiiB,GAAOjiB,GAAK,IAAO,EAAI8I,KAAKkb,IAAI,GAAI,IAAMhkB,EAAI,MDmBvFikB,GAA8BjQ,IAChC,GAAI7S,MAAMC,QAAQ4S,GAAa,CAE3B6M,GAAgC,IAAtB7M,EAAW7L,OAAc,2DACnC,MAAO+b,EAAIC,EAAIC,EAAIC,GAAMrQ,EACzB,OAAO0O,GAAYwB,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAA0B,iBAAfrQ,GAEZ6M,QAAuC7e,IAA7B8hB,GAAa9P,GAA2B,wBAAwBA,MACnE8P,GAAa9P,IAEjBA,CAAU,EE3BfsQ,GAAgB,CAAC7b,EAAM8b,IAAcrjB,GAChCW,QAAS6H,EAASxI,IAAMuI,EAAiBrC,KAAKlG,IAAMA,EAAEwG,WAAWe,IACnE8b,GAAY1jB,OAAOC,UAAUC,eAAeC,KAAKE,EAAGqjB,IAEvDC,GAAa,CAACC,EAAOC,EAAOC,IAAWzjB,IACzC,IAAKwI,EAASxI,GACV,OAAOA,EACX,MAAOqZ,EAAGC,EAAGiH,EAAGvY,GAAShI,EAAE0jB,MAAMrb,GACjC,MAAO,CACH,CAACkb,GAAQxb,WAAWsR,GACpB,CAACmK,GAAQzb,WAAWuR,GACpB,CAACmK,GAAQ1b,WAAWwY,GACpBvY,WAAiBlH,IAAVkH,EAAsBD,WAAWC,GAAS,EACpD,ECbC2b,GAAU,IACT9b,EACHL,UAAYxH,GAAM4H,KAAKQ,MAHN,CAACpI,GAAMyH,EAAM,EAAG,IAAKzH,GAGT4jB,CAAa5jB,KAExC6jB,GAAO,CACT3d,KAAMkd,GAAc,MAAO,OAC3Btb,MAAOwb,GAAW,MAAO,QAAS,QAClC9b,UAAW,EAAGsc,MAAKC,QAAOC,OAAMhc,MAAOic,EAAU,KAAQ,QACrDN,GAAQnc,UAAUsc,GAClB,KACAH,GAAQnc,UAAUuc,GAClB,KACAJ,GAAQnc,UAAUwc,GAClB,KACA7b,EAASH,EAAMR,UAAUyc,IACzB,KCYR,MAAMC,GAAM,CACRhe,KAAMkd,GAAc,KACpBtb,MAhCJ,SAAkB9H,GACd,IAAImkB,EAAI,GACJC,EAAI,GACJ9K,EAAI,GACJD,EAAI,GAmBR,OAjBIrZ,EAAEiH,OAAS,GACXkd,EAAInkB,EAAE4S,UAAU,EAAG,GACnBwR,EAAIpkB,EAAE4S,UAAU,EAAG,GACnB0G,EAAItZ,EAAE4S,UAAU,EAAG,GACnByG,EAAIrZ,EAAE4S,UAAU,EAAG,KAInBuR,EAAInkB,EAAE4S,UAAU,EAAG,GACnBwR,EAAIpkB,EAAE4S,UAAU,EAAG,GACnB0G,EAAItZ,EAAE4S,UAAU,EAAG,GACnByG,EAAIrZ,EAAE4S,UAAU,EAAG,GACnBuR,GAAKA,EACLC,GAAKA,EACL9K,GAAKA,EACLD,GAAKA,GAEF,CACHyK,IAAKO,SAASF,EAAG,IACjBJ,MAAOM,SAASD,EAAG,IACnBJ,KAAMK,SAAS/K,EAAG,IAClBtR,MAAOqR,EAAIgL,SAAShL,EAAG,IAAM,IAAM,EAE3C,EAII7R,UAAWqc,GAAKrc,WC/Bd8c,GAAO,CACTpe,KAAMkd,GAAc,MAAO,OAC3Btb,MAAOwb,GAAW,MAAO,aAAc,aACvC9b,UAAW,EAAG+c,MAAKC,aAAYC,YAAWzc,MAAOic,EAAU,KAC/C,QACJrc,KAAKQ,MAAMmc,GACX,KACAzb,EAAQtB,UAAUW,EAASqc,IAC3B,KACA1b,EAAQtB,UAAUW,EAASsc,IAC3B,KACAtc,EAASH,EAAMR,UAAUyc,IACzB,KCZN5nB,GAAQ,CACV6J,KAAOlG,GAAM6jB,GAAK3d,KAAKlG,IAAMkkB,GAAIhe,KAAKlG,IAAMskB,GAAKpe,KAAKlG,GACtD8H,MAAQ9H,GACA6jB,GAAK3d,KAAKlG,GACH6jB,GAAK/b,MAAM9H,GAEbskB,GAAKpe,KAAKlG,GACRskB,GAAKxc,MAAM9H,GAGXkkB,GAAIpc,MAAM9H,GAGzBwH,UAAYxH,GACDwI,EAASxI,GACVA,EACAA,EAAEH,eAAe,OACbgkB,GAAKrc,UAAUxH,GACfskB,GAAK9c,UAAUxH,ICF3BmT,GAAM,CAACuR,EAAM5nB,EAAI6nB,KAAcA,EAAWD,EAAOC,EAAW7nB,EAAK4nB,ECpBvE,SAASE,GAAS9lB,EAAG+lB,EAAG1D,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDriB,EAAc,GAAT+lB,EAAI/lB,GAASqiB,EACzBA,EAAI,GACG0D,EACP1D,EAAI,EAAI,EACDriB,GAAK+lB,EAAI/lB,IAAM,EAAI,EAAIqiB,GAAK,EAChCriB,CACX,CCHA,MAAMgmB,GAAiB,CAACJ,EAAM5nB,EAAIkD,KAC9B,MAAM+kB,EAAWL,EAAOA,EACxB,OAAO9c,KAAKod,KAAKpd,KAAKD,IAAI,EAAG3H,GAAKlD,EAAKA,EAAKioB,GAAYA,GAAU,EAEhEE,GAAa,CAACf,GAAKL,GAAMS,IAE/B,SAASY,GAAO7oB,GACZ,MAAMkL,GAFYvH,EAEQ3D,EAFF4oB,GAAWE,MAAM5d,GAASA,EAAKrB,KAAKlG,MAA3C,IAACA,EAGlB2f,GAAUhf,QAAQ4G,GAAO,IAAIlL,yEAC7B,IAAI+oB,EAAQ7d,EAAKO,MAAMzL,GAKvB,OAJIkL,IAAS+c,KAETc,EDRR,UAAoB,IAAEb,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAEzc,IAC9Cuc,GAAO,IAEPE,GAAa,IACb,IAAIX,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAQ,GAAc,IAQT,CACD,MAAMK,EAAIJ,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrC1lB,EAAI,EAAI2lB,EAAYI,EAC1Bf,EAAMc,GAAS9lB,EAAG+lB,EAAGN,EAAM,EAAI,GAC/BR,EAAQa,GAAS9lB,EAAG+lB,EAAGN,GACvBP,EAAOY,GAAS9lB,EAAG+lB,EAAGN,EAAM,EAAI,EACpC,MAVIT,EAAMC,EAAQC,EAAOS,EAWzB,MAAO,CACHX,IAAKlc,KAAKQ,MAAY,IAAN0b,GAChBC,MAAOnc,KAAKQ,MAAc,IAAR2b,GAClBC,KAAMpc,KAAKQ,MAAa,IAAP4b,GACjBhc,QAER,CCjBgBqd,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAW,CAACZ,EAAM5nB,KACpB,MAAMyoB,EAAWL,GAAOR,GAClBc,EAASN,GAAOpoB,GAChB2oB,EAAU,IAAKF,GACrB,OAAQvlB,IACJylB,EAAQ3B,IAAMgB,GAAeS,EAASzB,IAAK0B,EAAO1B,IAAK9jB,GACvDylB,EAAQ1B,MAAQe,GAAeS,EAASxB,MAAOyB,EAAOzB,MAAO/jB,GAC7DylB,EAAQzB,KAAOc,GAAeS,EAASvB,KAAMwB,EAAOxB,KAAMhkB,GAC1DylB,EAAQzd,MAAQmL,GAAIoS,EAASvd,MAAOwd,EAAOxd,MAAOhI,GAC3C6jB,GAAKrc,UAAUie,GACzB,ECtBL,MAAMC,GAAkB,CACpBC,M7EZqB,gF6EarBC,SAAU,OACVze,MAAO,OACPW,MAAO6M,IAELkR,GAAiB,CACnBF,MAAOrd,EACPsd,SAAU,SACVze,MAAO,OACPW,MAAOzL,GAAMyL,OAEXge,GAAkB,CACpBH,MAAOtd,EACPud,SAAU,UACVze,MAAO,OACPW,MAAOD,EAAOC,OAElB,SAASie,GAAStL,GAAM,MAAEkL,EAAK,SAAEC,EAAQ,MAAEze,EAAK,MAAEW,IAC9C,MAAMkX,EAAUvE,EAAKuL,UAAUtC,MAAMiC,GAChC3G,IAELvE,EAAK,MAAQmL,GAAY5G,EAAQ/X,OACjCwT,EAAKuL,UAAYvL,EAAKuL,UAAUpU,QAAQ+T,EAAOxe,GAC/CsT,EAAKpJ,OAAO+D,QAAQ4J,EAAQzhB,IAAIuK,IACpC,CACA,SAASme,GAAoBrhB,GACzB,MAAMshB,EAAgBthB,EAAMuhB,WACtB1L,EAAO,CACT7V,MAAOshB,EACPF,UAAWE,EACX7U,OAAQ,GACR+U,QAAS,EACTC,UAAW,EACXC,WAAY,GAMhB,OAJI7L,EAAK7V,MAAMhH,SAAS,WACpBmoB,GAAStL,EAAMiL,IACnBK,GAAStL,EAAMoL,IACfE,GAAStL,EAAMqL,IACRrL,CACX,CACA,SAAS8L,GAAkBvmB,GACvB,OAAOimB,GAAoBjmB,GAAGqR,MAClC,CACA,SAASmV,GAAkB1Y,GACvB,MAAM,OAAEuD,EAAM,UAAEgV,EAAS,QAAED,EAAO,UAAEJ,GAAcC,GAAoBnY,GAChE2Y,EAAYpV,EAAOpK,OACzB,OAAQjH,IACJ,IAAI0mB,EAASV,EACb,IAAK,IAAIvY,EAAI,EAAGA,EAAIgZ,EAAWhZ,IAEvBiZ,EADAjZ,EAAI2Y,EACKM,EAAO9U,QAAQ8T,GAAgBve,MAAOnH,EAAEyN,IAE5CA,EAAI2Y,EAAUC,EACVK,EAAO9U,QAAQiU,GAAe1e,MAAO9K,GAAMmL,UAAUxH,EAAEyN,KAGvDiZ,EAAO9U,QAAQkU,GAAgB3e,MAAOgB,EAASnI,EAAEyN,KAGlE,OAAOiZ,CAAM,CAErB,CACA,MAAMC,GAAwB3mB,GAAmB,iBAANA,EAAiB,EAAIA,EAMhE,MAAM4mB,GAAU,CACZ1gB,KA/EJ,SAAclG,GACV,IAAIoP,EAAIyX,EACR,OAAQC,MAAM9mB,IACVwI,EAASxI,MACwB,QAA9BoP,EAAKpP,EAAE0jB,MAAMrb,UAAgC,IAAP+G,OAAgB,EAASA,EAAGnI,SAAW,KAC3C,QAA9B4f,EAAK7mB,EAAE0jB,MAAMpb,UAAgC,IAAPue,OAAgB,EAASA,EAAG5f,SAAW,GAChF,CACZ,EAyEIa,MAAOye,GACPC,qBACAO,kBATJ,SAA2B/mB,GACvB,MAAMgnB,EAAST,GAAkBvmB,GAEjC,OADoBwmB,GAAkBxmB,EAC/BinB,CAAYD,EAAOzpB,IAAIopB,IAClC,GC5EMO,GAAe,CAAC5X,EAAQhS,IAAYwB,GAAM,GAAGA,EAAI,EAAIxB,EAASgS,IACpE,SAAS6X,GAAS7X,EAAQhS,GACtB,MAAsB,iBAAXgS,EACCtP,GAAMmT,GAAI7D,EAAQhS,EAAQ0C,GAE7B3D,GAAM6J,KAAKoJ,GACTgW,GAAShW,EAAQhS,GAGjBgS,EAAO9I,WAAW,QACnB0gB,GAAa5X,EAAQhS,GACrB8pB,GAAW9X,EAAQhS,EAEjC,CACA,MAAM+pB,GAAW,CAAC3C,EAAM5nB,KACpB,MAAM4pB,EAAS,IAAIhC,GACb+B,EAAYC,EAAOzf,OACnBqgB,EAAa5C,EAAKnnB,KAAI,CAACgqB,EAAU9Z,IAAM0Z,GAASI,EAAUzqB,EAAG2Q,MACnE,OAAQzN,IACJ,IAAK,IAAIyN,EAAI,EAAGA,EAAIgZ,EAAWhZ,IAC3BiZ,EAAOjZ,GAAK6Z,EAAW7Z,GAAGzN,GAE9B,OAAO0mB,CAAM,CAChB,EAECc,GAAY,CAAClY,EAAQhS,KACvB,MAAMopB,EAAS,IAAKpX,KAAWhS,GACzBgqB,EAAa,CAAC,EACpB,IAAK,MAAM3pB,KAAO+oB,OACM5lB,IAAhBwO,EAAO3R,SAAsCmD,IAAhBxD,EAAOK,KACpC2pB,EAAW3pB,GAAOwpB,GAAS7X,EAAO3R,GAAML,EAAOK,KAGvD,OAAQqC,IACJ,IAAK,MAAMrC,KAAO2pB,EACdZ,EAAO/oB,GAAO2pB,EAAW3pB,GAAKqC,GAElC,OAAO0mB,CAAM,CAChB,EAECU,GAAa,CAAC9X,EAAQhS,KACxB,MAAMmqB,EAAWb,GAAQJ,kBAAkBlpB,GACrCoqB,EAAczB,GAAoB3W,GAClCqY,EAAc1B,GAAoB3oB,GAIxC,OAHuBoqB,EAAYtB,UAAYuB,EAAYvB,SACvDsB,EAAYrB,YAAcsB,EAAYtB,WACtCqB,EAAYpB,YAAcqB,EAAYrB,WAE/B/M,GAAK8N,GAASK,EAAYrW,OAAQsW,EAAYtW,QAASoW,IAG9D/H,IAAQ,EAAM,mBAAmBpQ,WAAgBhS,6KAC1C4pB,GAAa5X,EAAQhS,GAChC,EChDEqnB,GAAW,CAACD,EAAM5nB,EAAI8H,KACxB,MAAMgjB,EAAmB9qB,EAAK4nB,EAC9B,OAA4B,IAArBkD,EAAyB,GAAKhjB,EAAQ8f,GAAQkD,CAAgB,ECJnEC,GAAY,CAACnD,EAAM5nB,IAAQgC,GAAMqU,GAAIuR,EAAM5nB,EAAIgC,GAgBrD,SAASgpB,GAAapB,EAAQjG,EAAMsH,GAChC,MAAMC,EAAS,GACTC,EAAeF,IAhBJ,iBADO/nB,EAiB+B0mB,EAAO,IAfnDmB,GAEW,iBAAN7nB,EACL3D,GAAM6J,KAAKlG,GAAKslB,GAAW8B,GAE7BnnB,MAAMC,QAAQF,GACZqnB,GAEW,iBAANrnB,EACLwnB,GAEJK,IAbX,IAA4B7nB,EAkBxB,MAAMkoB,EAAYxB,EAAOzf,OAAS,EAClC,IAAK,IAAIwG,EAAI,EAAGA,EAAIya,EAAWza,IAAK,CAChC,IAAI0a,EAAQF,EAAavB,EAAOjZ,GAAIiZ,EAAOjZ,EAAI,IAC/C,GAAIgT,EAAM,CACN,MAAM2H,EAAiBnoB,MAAMC,QAAQugB,GAAQA,EAAKhT,IAAMkH,GAAO8L,EAC/D0H,EAAQ5O,GAAK6O,EAAgBD,EACjC,CACAH,EAAO5S,KAAK+S,EAChB,CACA,OAAOH,CACX,CAoBA,SAASK,GAAYC,EAAO5B,GAAUjf,MAAO8gB,GAAU,EAAI,KAAE9H,EAAI,MAAE0H,GAAU,CAAC,GAC1E,MAAMK,EAAcF,EAAMrhB,OAM1B,GALA0Y,GAAU6I,IAAgB9B,EAAOzf,OAAQ,wDAKrB,IAAhBuhB,EACA,MAAO,IAAM9B,EAAO,GAEpB4B,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOG,UACnB/B,EAAS,IAAIA,GAAQ+B,WAEzB,MAAMT,EAASF,GAAapB,EAAQjG,EAAM0H,GACpCD,EAAYF,EAAO/gB,OACnByhB,EAAgB1oB,IAClB,IAAIyN,EAAI,EACR,GAAIya,EAAY,EACZ,KAAOza,EAAI6a,EAAMrhB,OAAS,KAClBjH,EAAIsoB,EAAM7a,EAAI,IADOA,KAKjC,MAAMkb,EAAkBhE,GAAS2D,EAAM7a,GAAI6a,EAAM7a,EAAI,GAAIzN,GACzD,OAAOgoB,EAAOva,GAAGkb,EAAgB,EAErC,OAAOJ,EACAvoB,GAAM0oB,EAAajhB,EAAM6gB,EAAM,GAAIA,EAAME,EAAc,GAAIxoB,IAC5D0oB,CACV,CCvFA,SAASE,GAAcC,GACnB,MAAMtZ,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQuZ,GACxB,MAAMphB,EAAM6H,EAAOA,EAAOtI,OAAS,GACnC,IAAK,IAAIwG,EAAI,EAAGA,GAAKqb,EAAWrb,IAAK,CACjC,MAAMsb,EAAiBpE,GAAS,EAAGmE,EAAWrb,GAC9C8B,EAAO6F,KAAKjC,GAAIzL,EAAK,EAAGqhB,GAC5B,CACJ,CDLIC,CAAWzZ,EAAQsZ,EAAI5hB,OAAS,GACzBsI,CACX,CEIA,SAAS0Z,IAAU,SAAE/sB,EAAW,IAAK+sB,UAAWC,EAAc,MAAEC,EAAK,KAAE1I,EAAO,cAK1E,MAAM2I,EAAkB/G,GAAc5B,GAChCA,EAAKljB,IAAIwlB,IACTA,GAA2BtC,GAK3BhU,EAAQ,CACV4c,MAAM,EACNzkB,MAAOskB,EAAe,IAKpBI,EC7BV,SAA8B/Z,EAAQrT,GAClC,OAAOqT,EAAOhS,KAAKgsB,GAAMA,EAAIrtB,GACjC,CD2B0BstB,CAGtBL,GAASA,EAAMliB,SAAWiiB,EAAejiB,OACnCkiB,EACAP,GAAcM,GAAiBhtB,GAC/ButB,EAAoBpB,GAAYiB,EAAeJ,EAAgB,CACjEzI,KAAMxgB,MAAMC,QAAQkpB,GACdA,GA9BS/X,EA+BK6X,EA/BGhJ,EA+BakJ,EA9BjC/X,EAAO9T,KAAI,IAAM2iB,GAAUU,KAAWrL,OAAO,EAAGlE,EAAOpK,OAAS,MAD3E,IAAuBoK,EAAQ6O,EAiC3B,MAAO,CACHwJ,mBAAoBxtB,EACpBijB,KAAOgC,IACH1U,EAAM7H,MAAQ6kB,EAAkBtI,GAChC1U,EAAM4c,KAAOlI,GAAKjlB,EACXuQ,GAGnB,CE1CA,SAASkd,GAAkBnK,EAAUoK,GACjC,OAAOA,EAAgBpK,GAAY,IAAOoK,GAAiB,CAC/D,CCNA,MAAMC,GAAyB,EAC/B,SAASC,GAAsBC,EAAc5I,EAAGrd,GAC5C,MAAMkmB,EAAQpiB,KAAKD,IAAIwZ,EAAI0I,GAAwB,GACnD,OAAOF,GAAkB7lB,EAAUimB,EAAaC,GAAQ7I,EAAI6I,EAChE,CCFA,MAAMC,GAAU,KACVC,GAAc,IACdC,GAAc,GACdC,GAAa,IACbC,GAAa,EACnB,SAASC,IAAW,SAAEpuB,EAAW,IAAG,OAAEquB,EAAS,IAAI,SAAE/K,EAAW,EAAC,KAAEgL,EAAO,IACtE,IAAIC,EACAC,EACJhL,GAAQxjB,GAAY0jB,GAAsBuK,IAAc,8CACxD,IAAIQ,EAAe,EAAIJ,EAIvBI,EAAeljB,EAAM2iB,GAAYC,GAAYM,GAC7CzuB,EAAWuL,EAAMyiB,GAAaC,GAAarK,GAAsB5jB,IAC7DyuB,EAAe,GAIfF,EAAYG,IACR,MAAMC,EAAmBD,EAAeD,EAClCvU,EAAQyU,EAAmB3uB,EAC3Bmd,EAAIwR,EAAmBrL,EACvBlG,EAAIwR,GAAgBF,EAAcD,GAClCpK,EAAI3Y,KAAKmjB,KAAK3U,GACpB,OAAO6T,GAAW5Q,EAAIC,EAAKiH,CAAC,EAEhCmK,EAAcE,IACV,MACMxU,EADmBwU,EAAeD,EACPzuB,EAC3BmB,EAAI+Y,EAAQoJ,EAAWA,EACvBvH,EAAIrQ,KAAKkb,IAAI6H,EAAc,GAAK/iB,KAAKkb,IAAI8H,EAAc,GAAK1uB,EAC5D8uB,EAAIpjB,KAAKmjB,KAAK3U,GACdgO,EAAI0G,GAAgBljB,KAAKkb,IAAI8H,EAAc,GAAID,GAErD,QADgBF,EAASG,GAAgBX,GAAU,GAAK,EAAI,KACzC5sB,EAAI4a,GAAK+S,GAAM5G,CAAC,IAOvCqG,EAAYG,GACEhjB,KAAKmjB,KAAKH,EAAe1uB,KACxB0uB,EAAepL,GAAYtjB,EAAW,GACzC+tB,GAEZS,EAAcE,GACAhjB,KAAKmjB,KAAKH,EAAe1uB,IACIA,EAAWA,GAAvCsjB,EAAWoL,KAI9B,MACMA,EAmBV,SAAyBH,EAAUC,EAAYO,GAC3C,IAAIC,EAASD,EACb,IAAK,IAAIxd,EAAI,EAAGA,EAAI0d,GAAgB1d,IAChCyd,GAAkBT,EAASS,GAAUR,EAAWQ,GAEpD,OAAOA,CACX,CAzByBE,CAAgBX,EAAUC,EAD1B,EAAIxuB,GAGzB,GADAA,EAAW0jB,GAAsB1jB,GAC7B4qB,MAAM8D,GACN,MAAO,CACHS,UAAW,IACXC,QAAS,GACTpvB,YAGH,CACD,MAAMmvB,EAAYzjB,KAAKkb,IAAI8H,EAAc,GAAKJ,EAC9C,MAAO,CACHa,YACAC,QAAwB,EAAfX,EAAmB/iB,KAAKod,KAAKwF,EAAOa,GAC7CnvB,WAER,CACJ,CACA,MAAMivB,GAAiB,GAQvB,SAASL,GAAgBF,EAAcD,GACnC,OAAOC,EAAehjB,KAAKod,KAAK,EAAI2F,EAAeA,EACvD,CClFA,MAAMY,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAa9e,EAAS6D,GAC3B,OAAOA,EAAKhQ,MAAM7C,QAAyBmD,IAAjB6L,EAAQhP,IACtC,CAwBA,SAAS+tB,IAAO,UAAEzC,EAAS,UAAE0C,EAAS,UAAEC,KAAcjf,IAClD,MAAM2C,EAAS2Z,EAAU,GACnB3rB,EAAS2rB,EAAUA,EAAUhiB,OAAS,GAKtCwF,EAAQ,CAAE4c,MAAM,EAAOzkB,MAAO0K,IAC9B,UAAE+b,EAAS,QAAEC,EAAO,KAAEd,EAAI,SAAEhL,EAAQ,SAAEtjB,EAAQ,uBAAE2vB,GA/B1D,SAA0Blf,GACtB,IAAImf,EAAgB,CAChBtM,SAAU,EACV6L,UAAW,IACXC,QAAS,GACTd,KAAM,EACNqB,wBAAwB,KACrBlf,GAGP,IAAK8e,GAAa9e,EAAS6e,KACvBC,GAAa9e,EAAS4e,IAAe,CACrC,MAAMQ,EAAUzB,GAAW3d,GAC3Bmf,EAAgB,IACTA,KACAC,EACHvM,SAAU,EACVgL,KAAM,GAEVsB,EAAcD,wBAAyB,CAC3C,CACA,OAAOC,CACX,CASsFE,CAAiBrf,GAC7Fsf,EAAkBzM,GAAYM,GAAsBN,GAAY,EAChEmL,EAAeW,GAAW,EAAI1jB,KAAKod,KAAKqG,EAAYb,IACpD0B,EAAe5uB,EAASgS,EACxB6c,EAAsBrM,GAAsBlY,KAAKod,KAAKqG,EAAYb,IAQlE4B,EAAkBxkB,KAAKua,IAAI+J,GAAgB,EAGjD,IAAIG,EACJ,GAHAT,IAAcA,EAAYQ,EAAkB,IAAO,GACnDT,IAAcA,EAAYS,EAAkB,KAAQ,IAEhDzB,EAAe,EAAG,CAClB,MAAM2B,EAAcxB,GAAgBqB,EAAqBxB,GAEzD0B,EAAiBlL,IACb,MAAMsJ,EAAW7iB,KAAKmjB,KAAKJ,EAAewB,EAAsBhL,GAChE,OAAQ7jB,EACJmtB,IACOwB,EACCtB,EAAewB,EAAsBD,GACrCI,EACA1kB,KAAK4a,IAAI8J,EAAcnL,GACvB+K,EAAetkB,KAAK2kB,IAAID,EAAcnL,GAAI,CAE9D,MACK,GAAqB,IAAjBwJ,EAEL0B,EAAiBlL,GAAM7jB,EACnBsK,KAAKmjB,KAAKoB,EAAsBhL,IAC3B+K,GACID,EAAkBE,EAAsBD,GAAgB/K,OAEpE,CAED,MAAMqL,EAAoBL,EAAsBvkB,KAAKod,KAAK2F,EAAeA,EAAe,GACxF0B,EAAiBlL,IACb,MAAMsJ,EAAW7iB,KAAKmjB,KAAKJ,EAAewB,EAAsBhL,GAE1DsL,EAAW7kB,KAAKF,IAAI8kB,EAAoBrL,EAAG,KACjD,OAAQ7jB,EACHmtB,IACKwB,EACEtB,EAAewB,EAAsBD,GACrCtkB,KAAK8kB,KAAKD,GACVD,EACIN,EACAtkB,KAAK+kB,KAAKF,IAClBD,CAAkB,CAElC,CACA,MAAO,CACH9C,mBAAoBmC,GAAyB3vB,GAAmB,KAChEijB,KAAOgC,IACH,MAAMrd,EAAUuoB,EAAclL,GAC9B,GAAK0K,EAqBDpf,EAAM4c,KAAOlI,GAAKjlB,MArBO,CACzB,IAAI8W,EAAkBiZ,EACZ,IAAN9K,IAOInO,EADA2X,EAAe,EACGb,GAAsBuC,EAAelL,EAAGrd,GAGxC,GAG1B,MAAM8oB,EAA2BhlB,KAAKua,IAAInP,IAAoB4Y,EACxDiB,EAA+BjlB,KAAKua,IAAI7kB,EAASwG,IAAY6nB,EACnElf,EAAM4c,KACFuD,GAA4BC,CACpC,CAKA,OADApgB,EAAM7H,MAAQ6H,EAAM4c,KAAO/rB,EAASwG,EAC7B2I,CAAK,EAGxB,CC3HA,SAASqgB,IAAQ,UAAE7D,EAAS,SAAEzJ,EAAW,EAAG,MAAEuN,EAAQ,GAAG,aAAEC,EAAe,IAAG,cAAEC,EAAgB,GAAE,gBAAEC,EAAkB,IAAG,aAAEC,EAAY,IAAEzlB,EAAG,IAAEC,EAAG,UAAEgkB,EAAY,GAAG,UAAEC,IAC/J,MAAMtc,EAAS2Z,EAAU,GACnBxc,EAAQ,CACV4c,MAAM,EACNzkB,MAAO0K,GAGL8d,EAAmBptB,QACTc,IAAR4G,EACOC,OACC7G,IAAR6G,GAEGC,KAAKua,IAAIza,EAAM1H,GAAK4H,KAAKua,IAAIxa,EAAM3H,GAD/B0H,EAC0CC,EAEzD,IAAI0lB,EAAYN,EAAQvN,EACxB,MAAM8N,EAAQhe,EAAS+d,EACjB/vB,OAA0BwD,IAAjBqsB,EAA6BG,EAAQH,EAAaG,GAK7DhwB,IAAWgwB,IACXD,EAAY/vB,EAASgS,GACzB,MAAMie,EAAapM,IAAOkM,EAAYzlB,KAAKmjB,KAAK5J,EAAI6L,GAC9CQ,EAAcrM,GAAM7jB,EAASiwB,EAAUpM,GACvCsM,EAAiBtM,IACnB,MAAM/K,EAAQmX,EAAUpM,GAClBlR,EAASud,EAAWrM,GAC1B1U,EAAM4c,KAAOzhB,KAAKua,IAAI/L,IAAUuV,EAChClf,EAAM7H,MAAQ6H,EAAM4c,KAAO/rB,EAAS2S,CAAM,EAQ9C,IAAIyd,EACAC,EACJ,MAAMC,EAAsBzM,IAjCN,IAACnhB,KAkCAyM,EAAM7H,WAlCS9D,IAAR4G,GAAqB1H,EAAI0H,QAAiB5G,IAAR6G,GAAqB3H,EAAI2H,KAoCrF+lB,EAAsBvM,EACtBwM,EAAWjC,GAAO,CACdzC,UAAW,CAACxc,EAAM7H,MAAOwoB,EAAgB3gB,EAAM7H,QAC/C4a,SAAUsK,GAAsB0D,EAAYrM,EAAG1U,EAAM7H,OACrD0mB,QAAS2B,EACT5B,UAAW6B,EACXvB,YACAC,cACF,EAGN,OADAgC,EAAmB,GACZ,CACHlE,mBAAoB,KACpBvK,KAAOgC,IAOH,IAAI0M,GAAkB,EAUtB,OATKF,QAAoC7sB,IAAxB4sB,IACbG,GAAkB,EAClBJ,EAActM,GACdyM,EAAmBzM,SAMKrgB,IAAxB4sB,GAAqCvM,EAAIuM,EAClCC,EAASxO,KAAKgC,EAAIuM,KAGxBG,GAAmBJ,EAActM,GAC3B1U,EACX,EAGZ,CClFA,MAAMqhB,GAAmB7pB,IACrB,MAAM8pB,EAAgB,EAAG1X,eAAgBpS,EAAOoS,GAChD,MAAO,CACHjW,MAAO,IAAM,GAAM6D,OAAO8pB,GAAe,GACzCC,KAAM,IAAMnY,GAAYkY,GAKxBrW,IAAK,IAAM5B,GAAUQ,aAAeR,GAAUO,UAAYoB,YAAYC,MACzE,ECRCuW,GAAuB,IAC7B,SAASC,GAAsBC,GAC3B,IAAIjyB,EAAW,EAEf,IAAIuQ,EAAQ0hB,EAAUhP,KAAKjjB,GAC3B,MAAQuQ,EAAM4c,MAAQntB,EAAW+xB,IAC7B/xB,GAHa,GAIbuQ,EAAQ0hB,EAAUhP,KAAKjjB,GAE3B,OAAOA,GAAY+xB,GAAuBG,IAAWlyB,CACzD,CCLA,MAAMmyB,GAAQ,CACVC,MAAOxB,GACPA,QAAO,GACPyB,MAAOtF,GACPA,UAAWA,GACXyC,OAAM,IASV,SAAS8C,IAAa,SAAEC,GAAW,EAAI,MAAEC,EAAQ,EAAC,OAAEC,EAASb,GAAiB7E,UAAW2F,EAAW,KAAErnB,EAAO,YAAW,OAAEsnB,EAAS,EAAC,YAAEC,EAAc,EAAC,WAAEC,EAAa,OAAM,OAAEC,EAAM,OAAEC,EAAM,WAAEC,EAAU,SAAEC,KAAaxiB,IACjN,IAEIyiB,EACAC,EAHAC,EAAQ,EACRC,GAAa,EAOjB,MAAMC,EAAwB,KAC1BH,EAAyB,IAAII,SAASC,IAClCN,EAAyBM,CAAO,GAClC,EAIN,IAAIC,EADJH,IAEA,MAAMI,EAAmBvB,GAAM9mB,IAAS0hB,GAMxC,IAAI4G,EACAD,IAAqB3G,IACK,iBAAnB2F,EAAY,KACnBiB,EAAwBxH,GAAY,CAAC,EAAG,KAAMuG,EAAa,CACvDnnB,OAAO,IAEXmnB,EAAc,CAAC,EAAG,MAEtB,MAAMT,EAAYyB,EAAiB,IAAKjjB,EAASsc,UAAW2F,IAC5D,IAAIkB,EACe,WAAff,IACAe,EAAoBF,EAAiB,IAC9BjjB,EACHsc,UAAW,IAAI2F,GAAanG,UAC5BjJ,WAAY7S,EAAQ6S,UAAY,MAGxC,IAAIuQ,EAAY,OACZC,EAAW,KACXC,EAAY,KACZC,EAAa,KASoB,OAAjC/B,EAAUzE,oBAA+BmF,IACzCV,EAAUzE,mBAAqBwE,GAAsBC,IAEzD,MAAM,mBAAEzE,GAAuByE,EAC/B,IAAIgC,EAAmB/B,IACnBgC,EAAgBhC,IACO,OAAvB1E,IACAyG,EAAmBzG,EAAqBoF,EACxCsB,EAAgBD,GAAoBtB,EAAS,GAAKC,GAEtD,IAAIuB,EAAc,EAClB,MAAMC,EAAQja,IACV,GAAkB,OAAd4Z,EACA,OAOAX,EAAQ,IACRW,EAAYroB,KAAKF,IAAIuoB,EAAW5Z,IAChCiZ,EAAQ,IACRW,EAAYroB,KAAKF,IAAI2O,EAAY+Z,EAAgBd,EAAOW,IAExDI,EADa,OAAbL,EACcA,EAMApoB,KAAKQ,MAAMiO,EAAY4Z,GAAaX,EAGtD,MAAMiB,EAAmBF,EAAc3B,GAASY,GAAS,EAAI,GAAK,GAC5DkB,EAAiBlB,GAAS,EAAIiB,EAAmB,EAAIA,EAAmBH,EAC9EC,EAAczoB,KAAKD,IAAI4oB,EAAkB,GAKvB,aAAdR,GAAyC,OAAbC,IAC5BK,EAAcD,GAElB,IAAIK,EAAUJ,EACVK,EAAiBvC,EACrB,GAAIU,EAAQ,CAMR,MAAMlK,EAAW0L,EAAcF,EAK/B,IAAIQ,EAAmB/oB,KAAKgpB,MAAMjM,GAK9BkM,EAAoBlM,EAAW,GAK9BkM,GAAqBlM,GAAY,IAClCkM,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmB/oB,KAAKF,IAAIipB,EAAkB9B,EAAS,GAIvD,MAAMiC,EAAiBnwB,QAAQgwB,EAAmB,GAC9CG,IACmB,YAAf/B,GACA8B,EAAoB,EAAIA,EACpB/B,IACA+B,GAAqB/B,EAAcqB,IAGnB,WAAfpB,IACL2B,EAAiBZ,IAGzB,IAAIhxB,EAAI2I,EAAM,EAAG,EAAGopB,GAChBR,EAAcD,IACdtxB,EAAmB,YAAfiwB,GAA4B+B,EAAiB,EAAI,GAEzDL,EAAU3xB,EAAIqxB,CAClB,CAMA,MAAM1jB,EAAQ+jB,EACR,CAAEnH,MAAM,EAAOzkB,MAAOgqB,EAAY,IAClC8B,EAAevR,KAAKsR,GACtBZ,IACApjB,EAAM7H,MAAQirB,EAAsBpjB,EAAM7H,QAE9C,IAAI,KAAEykB,GAAS5c,EACV+jB,GAAyC,OAAvB9G,IACnBL,EAAOiG,GAAS,EAAIe,GAAeD,EAAgBC,GAAe,GAEtE,MAAMU,EAAmC,OAAbf,IACT,aAAdD,GAA2C,YAAdA,GAA2B1G,GAO7D,OANI8F,GACAA,EAAS1iB,EAAM7H,OAEfmsB,GACAC,IAEGvkB,CAAK,EAEVwkB,EAAsB,KACxBtB,GAAmBA,EAAgB3B,OACnC2B,OAAkB7uB,CAAS,EAEzB8U,EAAS,KACXma,EAAY,OACZkB,IACA7B,IACAI,IACAS,EAAYC,EAAa,IAAI,EAE3Bc,EAAS,KACXjB,EAAY,WACZb,GAAcA,IACd+B,IACA7B,GAAwB,EAEtB8B,EAAO,KACT,GAAI3B,EACA,OACCI,IACDA,EAAkBhB,EAAO2B,IAC7B,MAAM5Y,EAAMiY,EAAgBjY,MAC5BsX,GAAUA,IACO,OAAbgB,EACAC,EAAYvY,EAAMsY,EAEZC,GAA2B,aAAdF,IACnBE,EAAYvY,GAEE,aAAdqY,GACAP,IAEJU,EAAaD,EACbD,EAAW,KAKXD,EAAY,UACZJ,EAAgBvvB,OAAO,EAEvBquB,GACAyC,IAEJ,MAAMC,EAAW,CACb,IAAAC,CAAK1B,EAAS2B,GACV,OAAOhC,EAAuB+B,KAAK1B,EAAS2B,EAChD,EACA,QAAIC,GACA,OAAOxR,GAAsBuQ,EACjC,EACA,QAAIiB,CAAKC,GACLA,EAAU3R,GAAsB2R,GAChClB,EAAckB,EACG,OAAbvB,GAAsBL,GAA6B,IAAVL,EAIzCW,EAAYN,EAAgBjY,MAAQ6Z,EAAUjC,EAH9CU,EAAWuB,CAKnB,EACA,YAAIr1B,GACA,MAAMA,EAA4C,OAAjCiyB,EAAUzE,mBACrBwE,GAAsBC,GACtBA,EAAUzE,mBAChB,OAAO5J,GAAsB5jB,EACjC,EACA,SAAIozB,GACA,OAAOA,CACX,EACA,SAAIA,CAAMkC,GACFA,IAAalC,GAAUK,IAE3BL,EAAQkC,EACRL,EAASG,KAAOxR,GAAsBuQ,GAC1C,EACA,SAAI5jB,GACA,OAAOsjB,CACX,EACAmB,OACAO,MAAO,KACH1B,EAAY,SACZC,EAAWK,CAAW,EAE1BrC,KAAM,KACFuB,GAAa,EACK,SAAdQ,IAEJA,EAAY,OACZd,GAAUA,IACVrZ,IAAQ,EAEZA,OAAQ,KACe,OAAfsa,GACAI,EAAKJ,GACTta,GAAQ,EAEZ8b,SAAU,KACN3B,EAAY,UAAU,EAE1B4B,OAASlB,IACLR,EAAY,EACLK,EAAKG,KAGpB,OAAOU,CACX,CCnSA,MAAMS,GCTN,SAAc5a,GACV,IAAIkU,EACJ,MAAO,UACYpqB,IAAXoqB,IACAA,EAASlU,KACNkU,EAEf,CDEsB2G,EAAK,IAAMlyB,OAAOE,eAAeC,KAAKgyB,QAAQlyB,UAAW,aAIzEmyB,GAAoB,IAAIzrB,IAAI,CAC9B,UACA,WACA,SACA,YACA,oBAgBJ,SAAS0rB,GAA2BptB,EAAOqtB,GAAW,SAAE9C,EAAQ,WAAED,KAAeviB,IAO7E,KAN+BilB,MAC3BG,GAAkBlsB,IAAIosB,KACrBtlB,EAAQmiB,aACc,WAAvBniB,EAAQoiB,YACY,IAApBpiB,EAAQ2e,SACS,YAAjB3e,EAAQpF,MAER,OAAO,EAIX,IACI6nB,EACAC,EAFAE,GAAa,EAOjB,MAAMC,EAAwB,KAC1BH,EAAyB,IAAII,SAASC,IAClCN,EAAyBM,CAAO,GAClC,EAGNF,IACA,IAAI,UAAEvG,EAAS,SAAE/sB,EAAW,IAAG,KAAEukB,EAAI,MAAE0I,GAAUxc,EAIjD,GAjCkC,EAACslB,EAAWtlB,IAA6B,WAAjBA,EAAQpF,MACpD,oBAAd0qB,IACC9R,GAAuBxT,EAAQ8T,MA+B5ByR,CAA8BD,EAAWtlB,GAAU,CACnD,MAAMwlB,EAAkB3D,GAAa,IAC9B7hB,EACHkiB,OAAQ,EACRH,MAAO,IAEX,IAAIjiB,EAAQ,CAAE4c,MAAM,EAAOzkB,MAAOqkB,EAAU,IAC5C,MAAMmJ,EAAwB,GAK9B,IAAIjR,EAAI,EACR,MAAQ1U,EAAM4c,MAAQlI,EA/CV,KAgDR1U,EAAQ0lB,EAAgBR,OAAOxQ,GAC/BiR,EAAsBhd,KAAK3I,EAAM7H,OACjCuc,GAvDQ,GAyDZgI,OAAQroB,EACRmoB,EAAYmJ,EACZl2B,EAAWilB,EA3DC,GA4DZV,EAAO,QACX,CACA,MAAMlf,EErFV,SAAsBuQ,EAASmgB,EAAWhJ,GAAW,MAAEyF,EAAQ,EAAC,SAAExyB,EAAQ,OAAE2yB,EAAS,EAAC,WAAEE,EAAa,OAAM,KAAEtO,EAAI,MAAE0I,GAAW,CAAC,GAC3H,MAAMkJ,EAAkB,CAAE,CAACJ,GAAYhJ,GACnCE,IACAkJ,EAAgB9iB,OAAS4Z,GAC7B,MAAMjJ,EAASe,GAAwBR,GAMvC,OAFIxgB,MAAMC,QAAQggB,KACdmS,EAAgBnS,OAASA,GACtBpO,EAAQ1U,QAAQi1B,EAAiB,CACpC3D,QACAxyB,WACAgkB,OAASjgB,MAAMC,QAAQggB,GAAmB,SAATA,EACjCnkB,KAAM,OACNu2B,WAAYzD,EAAS,EACrB0D,UAA0B,YAAfxD,EAA2B,YAAc,UAE5D,CFmEsByD,CAAa5tB,EAAM6tB,MAAM3uB,QAASmuB,EAAWhJ,EAAW,IACnEtc,EACHzQ,WASAukB,KAAMA,EACN0I,UAQAxc,EAAQ+lB,YACRnxB,EAAU0uB,UAAYna,GAAUQ,aAC1BR,GAAUO,UACVlX,SAASwzB,SACLxzB,SAASwzB,SAAStC,YAClB5Y,YAAYC,OAE1B,MAAMkb,EAAkB,IAAMrxB,EAAUqU,SAClCid,EAAa,KACf,GAAM5uB,OAAO2uB,GACbxD,IACAI,GAAuB,EAU3BjuB,EAAUuxB,SAAW,KACjBluB,EAAMkB,IGjId,SAA0BmjB,GAAW,OAAE4F,EAAM,WAAEE,EAAa,SAIxD,OAAO9F,EAHO4F,GAAyB,SAAfE,GAAyBF,EAAS,GAAM,EAC1D,EACA5F,EAAUhiB,OAAS,EAE7B,CH4HkB8rB,CAAiB9J,EAAWtc,IACtCuiB,GAAcA,IACd2D,GAAY,EAgEhB,MA3DiB,CACb,IAAAzB,CAAK1B,EAAS2B,GACV,OAAOhC,EAAuB+B,KAAK1B,EAAS2B,EAChD,EACA,cAAA2B,CAAeL,GAGX,OAFApxB,EAAUoxB,SAAWA,EACrBpxB,EAAUuxB,SAAW,KACdne,EACX,EACA,QAAI2c,GACA,OAAOxR,GAAsBve,EAAU8uB,aAAe,EAC1D,EACA,QAAIiB,CAAKC,GACLhwB,EAAU8uB,YAAczQ,GAAsB2R,EAClD,EACA,SAAIjC,GACA,OAAO/tB,EAAU0xB,YACrB,EACA,SAAI3D,CAAMkC,GACNjwB,EAAU0xB,aAAezB,CAC7B,EACA,YAAIt1B,GACA,OAAO4jB,GAAsB5jB,EACjC,EACAg1B,KAAM,KACE3B,IAEJhuB,EAAU2vB,OAIVrb,GAAY+c,GAAgB,EAEhCnB,MAAO,IAAMlwB,EAAUkwB,QACvBzD,KAAM,KAEF,GADAuB,GAAa,EACe,SAAxBhuB,EAAUwuB,UACV,OASJ,MAAM,YAAEM,GAAgB9uB,EACxB,GAAI8uB,EAAa,CACb,MAAM8B,EAAkB3D,GAAa,IAC9B7hB,EACH8hB,UAAU,IAEd7pB,EAAMsuB,gBAAgBf,EAAgBR,OAAOtB,EAnKzC,IAmKoEzrB,MAAOutB,EAAgBR,OAAOtB,GAAazrB,MAnK/G,GAoKR,CACAiuB,GAAY,EAEhBnB,SAAU,IAAMnwB,EAAUyvB,SAC1Bpb,OAAQid,EAGhB,CIlMA,MAAMM,GAAoB,CACtB5rB,KAAM,SACN8jB,UAAW,IACXC,QAAS,GACTM,UAAW,IAQTwH,GAAsB,CACxB7rB,KAAM,YACNrL,SAAU,IAMRukB,GAAO,CACTlZ,KAAM,YACNkZ,KAAM,CAAC,IAAM,GAAK,IAAM,GACxBvkB,SAAU,IAERm3B,GAAuB,CAACC,GAAYrK,eAClCA,EAAUhiB,OAAS,EACZmsB,GAEF/sB,EAAeR,IAAIytB,GACjBA,EAAS9sB,WAAW,SAxBQ,CACvCe,KAAM,SACN8jB,UAAW,IACXC,QAAoB,IAsBarC,EAAU,GAtBnB,EAAIrhB,KAAKod,KAAK,KAAO,GAC7C4G,UAAW,IAsBDuH,GAEH1S,GCzBL8S,GAAe,CAAC51B,EAAKiH,IAEX,WAARjH,MAKiB,iBAAViH,IAAsB3E,MAAMC,QAAQ0E,OAE1B,iBAAVA,IACNgiB,GAAQ1gB,KAAKtB,IAAoB,MAAVA,GACvBA,EAAM4B,WAAW,UChBpBgtB,GAAc,IAAIltB,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASmtB,GAAmBzzB,GACxB,MAAOS,EAAMmE,GAAS5E,EAAE0zB,MAAM,GAAI,GAAG9qB,MAAM,KAC3C,GAAa,gBAATnI,EACA,OAAOT,EACX,MAAO6H,GAAUjD,EAAM8e,MAAMrb,IAAe,GAC5C,IAAKR,EACD,OAAO7H,EACX,MAAM0I,EAAO9D,EAAMgN,QAAQ/J,EAAQ,IACnC,IAAI8rB,EAAeH,GAAY3tB,IAAIpF,GAAQ,EAAI,EAG/C,OAFIoH,IAAWjD,IACX+uB,GAAgB,KACblzB,EAAO,IAAMkzB,EAAejrB,EAAO,GAC9C,CACA,MAAMkrB,GAAgB,oBAChBC,GAAS,IACRjN,GACHG,kBAAoB/mB,IAChB,MAAM8zB,EAAY9zB,EAAE0jB,MAAMkQ,IAC1B,OAAOE,EAAYA,EAAUv2B,IAAIk2B,IAAoBpyB,KAAK,KAAOrB,CAAC,GClBpE+zB,GAAoB,IACnB5qB,GAEH9M,MAAK,GACLC,gBAAiBD,GACjB23B,aAAc33B,GACdN,KAAMM,GACN43B,OAAQ53B,GAER63B,YAAa73B,GACb83B,eAAgB93B,GAChB+3B,iBAAkB/3B,GAClBg4B,kBAAmBh4B,GACnBi4B,gBAAiBj4B,GACjBw3B,OAAM,GACNU,aAAcV,IAKZW,GAAuB72B,GAAQo2B,GAAkBp2B,GCvBvD,SAAS,GAAkBA,EAAKiH,GAC5B,IAAI6vB,EAAmBD,GAAoB72B,GAI3C,OAHI82B,IAAqBZ,KACrBY,EAAmB7N,IAEhB6N,EAAiB1N,kBAClB0N,EAAiB1N,kBAAkBniB,QACnC9D,CACV,CCTA,MAAM4zB,GAAqB10B,GAAM,aAAakG,KAAKlG,GCDnD,SAAS20B,GAAO/vB,GACZ,MAAqB,iBAAVA,EACU,IAAVA,EAEQ,OAAVA,EACY,SAAVA,GAA8B,MAAVA,GAAiB8vB,GAAkB9vB,QAD7D,CAGT,CCDA,SAASgwB,GAAmB34B,EAAY0B,GACpC,OAAO1B,EAAW0B,IAAQ1B,EAAoB,SAAKA,CACvD,CCCA,MAAM44B,GAAqB,CAAC5C,EAAWrtB,EAAOtH,EAAQrB,EAAa,CAAC,IACxDizB,IACJ,MAAM4F,EAAkBF,GAAmB34B,EAAYg2B,IAAc,CAAC,EAMhEvD,EAAQoG,EAAgBpG,OAASzyB,EAAWyyB,OAAS,EAK3D,IAAI,QAAE+B,EAAU,GAAMx0B,EACtBw0B,GAAoB7Q,GAAsB8O,GAC1C,MAAMzF,ECtBd,SAAsBrkB,EAAOqtB,EAAW30B,EAAQrB,GAC5C,MAAM84B,EAAqBxB,GAAatB,EAAW30B,GACnD,IAAI2rB,EAEAA,EADAhpB,MAAMC,QAAQ5C,GACF,IAAIA,GAGJ,CAAC,KAAMA,GAEvB,MAAM03B,OAAoCl0B,IAApB7E,EAAWyoB,KAAqBzoB,EAAWyoB,KAAO9f,EAAMe,MAC9E,IAAIsvB,EACJ,MAAMC,EAAsB,GAC5B,IAAK,IAAIznB,EAAI,EAAGA,EAAIwb,EAAUhiB,OAAQwG,IAIb,OAAjBwb,EAAUxb,KACVwb,EAAUxb,GAAW,IAANA,EAAUunB,EAAgB/L,EAAUxb,EAAI,IAEvDknB,GAAO1L,EAAUxb,KACjBynB,EAAoB9f,KAAK3H,GAGD,iBAAjBwb,EAAUxb,IACA,SAAjBwb,EAAUxb,IACO,MAAjBwb,EAAUxb,KACVwnB,EAA0BhM,EAAUxb,IAG5C,GAAIsnB,GACAG,EAAoBjuB,QACpBguB,EACA,IAAK,IAAIxnB,EAAI,EAAGA,EAAIynB,EAAoBjuB,OAAQwG,IAE5Cwb,EADciM,EAAoBznB,IACf,GAAkBwkB,EAAWgD,GAGxD,OAAOhM,CACX,CDhB0BkM,CAAavwB,EAAOqtB,EAAW30B,EAAQw3B,GAMnDM,EAAiBnM,EAAU,GAC3BoM,EAAiBpM,EAAUA,EAAUhiB,OAAS,GAC9CquB,EAAqB/B,GAAatB,EAAWmD,GAC7CL,EAAqBxB,GAAatB,EAAWoD,GACnD3V,GAAQ4V,IAAuBP,EAAoB,6BAA6B9C,WAAmBmD,UAAuBC,OAAoBD,+DAA4EA,8BAA2CC,iCACrQ,IAAI1oB,EAAU,CACVsc,YACAzJ,SAAU5a,EAAM8B,cAChB+Z,KAAM,aACHqU,EACHpG,OAAQ+B,EACRtB,SAAWnvB,IACP4E,EAAMkB,IAAI9F,GACV80B,EAAgB3F,UAAY2F,EAAgB3F,SAASnvB,EAAE,EAE3DkvB,WAAY,KACRA,IACA4F,EAAgB5F,YAAc4F,EAAgB5F,YAAY,GAwBlE,GDpER,UAA6B,KAAEqG,EAAM7G,MAAO8G,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAE9G,EAAM,WAAEE,EAAU,YAAED,EAAW,KAAEpK,EAAI,QAAE+L,KAAYx0B,IACrJ,QAAS0D,OAAO6Q,KAAKvU,GAAYgL,MACrC,CCiDa2uB,CAAoBd,KACrBnoB,EAAU,IACHA,KACA0mB,GAAqBpB,EAAWtlB,KAQvCA,EAAQzQ,WACRyQ,EAAQzQ,SAAW0jB,GAAsBjT,EAAQzQ,WAEjDyQ,EAAQmiB,cACRniB,EAAQmiB,YAAclP,GAAsBjT,EAAQmiB,eAEnDwG,IACAP,GACD/U,KACyB,IAAzB8U,EAAgBvtB,KAKhB,OE9EZ,UAAgC,UAAE0hB,EAAS,MAAEyF,EAAK,SAAES,EAAQ,WAAED,IAC1D,MAAM2G,EAAW,KACb1G,GAAYA,EAASlG,EAAUA,EAAUhiB,OAAS,IAClDioB,GAAcA,IAQP,CACHoC,KAAM,EACNhC,MAAO,EACPpzB,SAAU,EACVg1B,KAAM,GACNO,MAAO,GACPzD,KAAM,GACNoD,KAAO1B,IACHA,IACOD,QAAQC,WAEnB9Z,OAAQ,GACR8b,SAAU,KAGlB,OAAOhD,EACDF,GAAa,CACXvF,UAAW,CAAC,EAAG,GACf/sB,SAAU,EACVwyB,QACAQ,WAAY2G,IAEdA,GACV,CF4CmBC,CAAuB9V,GACxB,IAAKrT,EAAS+hB,MAAO,GACrB/hB,GAKV,GAAI/H,EAAM6tB,OACN7tB,EAAM6tB,MAAM3uB,mBAAmBiyB,cAC9BnxB,EAAM6tB,MAAM/X,WAAWyU,SAAU,CAClC,MAAM6G,EAAuBhE,GAA2BptB,EAAOqtB,EAAWtlB,GAC1E,GAAIqpB,EACA,OAAOA,CACf,CAIA,OAAOxH,GAAa7hB,EAAQ,EGhGpC,SAASspB,GAAwBrxB,GAC7B,OAAOjE,QAAQ8F,EAAc7B,IAAUA,EAAMsQ,IACjD,CCDA,MAAMghB,GAAqBl2B,GAAM,iBAAiBkG,KAAKlG,GCHvD,SAASm2B,GAActN,EAAKuN,IACG,IAAvBvN,EAAI5iB,QAAQmwB,IACZvN,EAAIzT,KAAKghB,EACjB,CACA,SAASC,GAAWxN,EAAKuN,GACrB,MAAM9gB,EAAQuT,EAAI5iB,QAAQmwB,GACtB9gB,GAAS,GACTuT,EAAItT,OAAOD,EAAO,EAC1B,CCNA,MAAMghB,GACF,WAAAxhB,GACIC,KAAKwhB,cAAgB,EACzB,CACA,GAAArhB,CAAIoD,GAEA,OADA6d,GAAcphB,KAAKwhB,cAAeje,GAC3B,IAAM+d,GAAWthB,KAAKwhB,cAAeje,EAChD,CACA,MAAAke,CAAOnd,EAAGC,EAAGiH,GACT,MAAMkW,EAAmB1hB,KAAKwhB,cAActvB,OAC5C,GAAKwvB,EAEL,GAAyB,IAArBA,EAIA1hB,KAAKwhB,cAAc,GAAGld,EAAGC,EAAGiH,QAG5B,IAAK,IAAI9S,EAAI,EAAGA,EAAIgpB,EAAkBhpB,IAAK,CAKvC,MAAM6K,EAAUvD,KAAKwhB,cAAc9oB,GACnC6K,GAAWA,EAAQe,EAAGC,EAAGiH,EAC7B,CAER,CACA,OAAAmW,GACI,OAAO3hB,KAAKwhB,cAActvB,MAC9B,CACA,KAAAwO,GACIV,KAAKwhB,cAActvB,OAAS,CAChC,EC/BJ,MAGM0vB,GAAsB,CACxB7yB,aAAShD,GAOb,MAAM81B,GASF,WAAA9hB,CAAYf,EAAMpH,EAAU,CAAC,GApBjB,IAAC/H,EAyBTmQ,KAAK8hB,QAAU,UAMf9hB,KAAK+hB,UAAY,EAMjB/hB,KAAKgiB,YAAc,EAQnBhiB,KAAKiiB,kBAAmB,EAIxBjiB,KAAKkiB,OAAS,CAAC,EACfliB,KAAKmiB,gBAAkB,CAACl3B,EAAGoE,GAAS,KAChC2Q,KAAKqK,KAAOrK,KAAKjR,QACjBiR,KAAKjR,QAAU9D,EAEf,MAAM,MAAEoW,EAAK,UAAEC,GAAcP,GACzBf,KAAKgiB,cAAgB1gB,IACrBtB,KAAK+hB,UAAY1gB,EACjBrB,KAAKgiB,YAAc1gB,EACnB,GAAM8gB,WAAWpiB,KAAKqiB,wBAGtBriB,KAAKqK,OAASrK,KAAKjR,SAAWiR,KAAKkiB,OAAOI,QAC1CtiB,KAAKkiB,OAAOI,OAAOb,OAAOzhB,KAAKjR,SAG/BiR,KAAKkiB,OAAOK,gBACZviB,KAAKkiB,OAAOK,eAAed,OAAOzhB,KAAKrO,eAGvCtC,GAAU2Q,KAAKkiB,OAAOM,eACtBxiB,KAAKkiB,OAAOM,cAAcf,OAAOzhB,KAAKjR,QAC1C,EAUJiR,KAAKqiB,sBAAwB,IAAM,GAAMD,WAAWpiB,KAAKyiB,eAUzDziB,KAAKyiB,cAAgB,EAAGnhB,gBAChBA,IAActB,KAAKgiB,cACnBhiB,KAAKqK,KAAOrK,KAAKjR,QACbiR,KAAKkiB,OAAOK,gBACZviB,KAAKkiB,OAAOK,eAAed,OAAOzhB,KAAKrO,eAE/C,EAEJqO,KAAK0iB,aAAc,EACnB1iB,KAAKqK,KAAOrK,KAAKjR,QAAUiQ,EAC3BgB,KAAKiiB,kBArGIpyB,EAqGuBmQ,KAAKjR,SApGjCgjB,MAAM/e,WAAWnD,KAqGrBmQ,KAAK0d,MAAQ9lB,EAAQ8lB,KACzB,CAyCA,QAAAiF,CAASC,GAIL,OAAO5iB,KAAK6iB,GAAG,SAAUD,EAC7B,CACA,EAAAC,CAAGvf,EAAWrB,GACLjC,KAAKkiB,OAAO5e,KACbtD,KAAKkiB,OAAO5e,GAAa,IAAIie,IAEjC,MAAMuB,EAAc9iB,KAAKkiB,OAAO5e,GAAWnD,IAAI8B,GAC/C,MAAkB,WAAdqB,EACO,KACHwf,IAKA,GAAM/f,MAAK,KACF/C,KAAKkiB,OAAOI,OAAOX,WACpB3hB,KAAKiZ,MACT,GACF,EAGH6J,CACX,CACA,cAAAC,GACI,IAAK,MAAMC,KAAiBhjB,KAAKkiB,OAC7BliB,KAAKkiB,OAAOc,GAAetiB,OAEnC,CAMA,MAAAuiB,CAAOC,EAAeC,GAClBnjB,KAAKkjB,cAAgBA,EACrBljB,KAAKmjB,kBAAoBA,CAC7B,CAgBA,GAAApyB,CAAI9F,EAAGoE,GAAS,GACPA,GAAW2Q,KAAKkjB,cAIjBljB,KAAKkjB,cAAcj4B,EAAG+U,KAAKmiB,iBAH3BniB,KAAKmiB,gBAAgBl3B,EAAGoE,EAKhC,CACA,eAAA8uB,CAAgB9T,EAAMtb,EAASsS,GAC3BrB,KAAKjP,IAAIhC,GACTiR,KAAKqK,KAAOA,EACZrK,KAAK+hB,UAAY1gB,CACrB,CAKA,IAAA+hB,CAAKn4B,GACD+U,KAAKmiB,gBAAgBl3B,GACrB+U,KAAKqK,KAAOpf,EACZ+U,KAAKiZ,OACDjZ,KAAKmjB,mBACLnjB,KAAKmjB,mBACb,CAQA,GAAAvyB,GAII,OAHIgxB,GAAoB7yB,SACpB6yB,GAAoB7yB,QAAQsR,KAAKL,MAE9BA,KAAKjR,OAChB,CAIA,WAAAs0B,GACI,OAAOrjB,KAAKqK,IAChB,CAQA,WAAA1Y,GAEI,OAAOqO,KAAKiiB,iBAEJrN,GAAkB5hB,WAAWgN,KAAKjR,SAC9BiE,WAAWgN,KAAKqK,MAAOrK,KAAK+hB,WAClC,CACV,CAaA,KAAA12B,CAAMi4B,GAEF,OADAtjB,KAAKiZ,OACE,IAAIyB,SAASC,IAChB3a,KAAK0iB,aAAc,EACnB1iB,KAAKxT,UAAY82B,EAAe3I,GAC5B3a,KAAKkiB,OAAOqB,gBACZvjB,KAAKkiB,OAAOqB,eAAe9B,QAC/B,IACDpF,MAAK,KACArc,KAAKkiB,OAAOsB,mBACZxjB,KAAKkiB,OAAOsB,kBAAkB/B,SAElCzhB,KAAKyjB,gBAAgB,GAE7B,CAMA,IAAAxK,GACQjZ,KAAKxT,YACLwT,KAAKxT,UAAUysB,OACXjZ,KAAKkiB,OAAOwB,iBACZ1jB,KAAKkiB,OAAOwB,gBAAgBjC,UAGpCzhB,KAAKyjB,gBACT,CAMA,WAAAE,GACI,QAAS3jB,KAAKxT,SAClB,CACA,cAAAi3B,UACWzjB,KAAKxT,SAChB,CAUA,OAAAo3B,GACI5jB,KAAK+iB,iBACL/iB,KAAKiZ,OACDjZ,KAAKmjB,mBACLnjB,KAAKmjB,mBAEb,EAEJ,SAASU,GAAY7kB,EAAMpH,GACvB,OAAO,IAAIiqB,GAAY7iB,EAAMpH,EACjC,CC3UA,MAAMksB,GAAiB74B,GAAOuH,GAASA,EAAKrB,KAAKlG,GCK3C84B,GAAsB,CAACjxB,EAAQkB,EAAID,EAASD,EAASI,GAAID,ECLlD,CACT9C,KAAOlG,GAAY,SAANA,EACb8H,MAAQ9H,GAAMA,IDOZ+4B,GAA0B/4B,GAAM84B,GAAoB3T,KAAK0T,GAAc74B,IEJvEg5B,GAAa,IAAIF,GAAqBz8B,GAAOuqB,ICKnD,SAASqS,GAAe31B,EAAe3F,EAAKiH,GACpCtB,EAAc41B,SAASv7B,GACvB2F,EAAc61B,SAASx7B,GAAKmI,IAAIlB,GAGhCtB,EAAc81B,SAASz7B,EAAKi7B,GAAYh0B,GAEhD,CACA,SAASy0B,GAAU/1B,EAAewP,GAC9B,MAAM0B,EAAW8K,GAAehc,EAAewP,GAC/C,IAAI,cAAE2B,EAAgB,CAAC,EAAC,WAAExY,EAAa,CAAC,KAAMqB,GAAWkX,EAAWlR,EAAcg2B,qBAAqB9kB,GAAU,GAAS,CAAC,EAC3HlX,EAAS,IAAKA,KAAWmX,GACzB,IAAK,MAAM9W,KAAOL,EAAQ,CAEtB27B,GAAe31B,EAAe3F,EADhB0V,GAA6B/V,EAAOK,IAEtD,CACJ,CAuEA,SAAS47B,GAAwB57B,EAAK1B,GAClC,IAAKA,EACD,OAEJ,OADwBA,EAAW0B,IAAQ1B,EAAoB,SAAKA,GAC7CyoB,IAC3B,CC5FA,SAAS8U,IAAqB,cAAEC,EAAa,eAAEC,GAAkB/7B,GAC7D,MAAMg8B,EAAcF,EAAc55B,eAAelC,KAAgC,IAAxB+7B,EAAe/7B,GAExE,OADA+7B,EAAe/7B,IAAO,EACfg8B,CACX,CACA,SAASC,GAAct2B,EAAewP,GAAY,MAAE4b,EAAQ,EAAC,mBAAEmL,EAAkB,KAAEtyB,GAAS,CAAC,GACzF,IAAI,WAAEtL,EAAaqH,EAAc+vB,uBAAsB,cAAE5e,KAAkBnX,GAAWgG,EAAcg2B,qBAAqBxmB,GACzH,MAAMgnB,EAAax2B,EAAc61B,SAAS,cACtCU,IACA59B,EAAa49B,GACjB,MAAME,EAAa,GACbC,EAAqBzyB,GACvBjE,EAAce,gBACdf,EAAce,eAAe41B,WAAW1yB,GAC5C,IAAK,MAAM5J,KAAOL,EAAQ,CACtB,MAAMsH,EAAQtB,EAAc61B,SAASx7B,GAC/B+W,EAAcpX,EAAOK,GAC3B,IAAKiH,QACe9D,IAAhB4T,GACCslB,GACGR,GAAqBQ,EAAoBr8B,GAC7C,SAEJ,MAAMm3B,EAAkB,CACpBpG,QACA+B,QAAS,KACNx0B,GAMP,GAAIS,OAAOyH,0BAA4BS,EAAM6yB,YAAa,CACtD,MAAMyC,EAAW52B,EAAcoX,WAAW+E,IACtCya,IACApF,EAAgBrE,QAAU/zB,OAAOyH,wBAAwB+1B,EAAUv8B,EAAKiH,EAAO,IAC/EkwB,EAAgBpC,WAAY,EAEpC,CACA9tB,EAAMxE,MAAMy0B,GAAmBl3B,EAAKiH,EAAO8P,EAAapR,EAAc62B,oBAAsB9zB,EAAeR,IAAIlI,GACzG,CAAE4J,MAAM,GACRutB,IACN,MAAMvzB,EAAYqD,EAAMrD,UACpB00B,GAAwB6D,KACxBA,EAAW5kB,IAAIvX,GACf4D,EAAU6vB,MAAK,IAAM0I,EAAWzkB,OAAO1X,MAE3Co8B,EAAW3kB,KAAK7T,EACpB,CAMA,OALIkT,GACAgb,QAAQpT,IAAI0d,GAAY3I,MAAK,KACzB3c,GAAiB4kB,GAAU/1B,EAAemR,EAAc,IAGzDslB,CACX,CCjEA,SAASK,GAAe92B,EAAe+2B,EAAS1tB,EAAU,CAAC,GACvD,MAAM6H,EAAW8K,GAAehc,EAAe+2B,EAAS1tB,EAAQrH,QAChE,IAAI,WAAErJ,EAAaqH,EAAc+vB,wBAA0B,CAAC,GAAM7e,GAAY,CAAC,EAC3E7H,EAAQktB,qBACR59B,EAAa0Q,EAAQktB,oBAMzB,MAAMS,EAAe9lB,EACf,IAAMib,QAAQpT,IAAIud,GAAct2B,EAAekR,EAAU7H,IACzD,IAAM8iB,QAAQC,UAKd6K,EAAqBj3B,EAAck3B,iBAAmBl3B,EAAck3B,gBAAgBtwB,KACpF,CAACuwB,EAAe,KACd,MAAM,cAAEhF,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsB15B,EAClE,OAkBZ,SAAyBqH,EAAe+2B,EAAS5E,EAAgB,EAAGC,EAAkB,EAAGC,EAAmB,EAAGhpB,GAC3G,MAAMotB,EAAa,GACbW,GAAsBp3B,EAAck3B,gBAAgBtwB,KAAO,GAAKwrB,EAChEiF,EAA+C,IAArBhF,EAC1B,CAACloB,EAAI,IAAMA,EAAIioB,EACf,CAACjoB,EAAI,IAAMitB,EAAqBjtB,EAAIioB,EAU1C,OATAz1B,MAAMykB,KAAKphB,EAAck3B,iBACpBI,KAAKC,IACLtmB,SAAQ,CAACsG,EAAOpN,KACjBoN,EAAM2b,OAAO,iBAAkB6D,GAC/BN,EAAW3kB,KAAKglB,GAAevf,EAAOwf,EAAS,IACxC1tB,EACH+hB,MAAO+G,EAAgBkF,EAAwBltB,KAChD2jB,MAAK,IAAMvW,EAAM2b,OAAO,oBAAqB6D,KAAU,IAEvD5K,QAAQpT,IAAI0d,EACvB,CAlCmBe,CAAgBx3B,EAAe+2B,EAAS5E,EAAgBgF,EAAc/E,EAAiBC,EAAkBhpB,EAAQ,EAE1H,IAAM8iB,QAAQC,WAKd,KAAE6F,GAASt5B,EACjB,GAAIs5B,EAAM,CACN,MAAOwF,EAAOC,GAAiB,mBAATzF,EAChB,CAAC+E,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOS,IAAQ3J,MAAK,IAAM4J,KAC9B,CAEI,OAAOvL,QAAQpT,IAAI,CAACie,IAAgBC,EAAmB5tB,EAAQ+hB,QAEvE,CAkBA,SAASmM,GAAgBxhB,EAAGC,GACxB,OAAOD,EAAE4hB,iBAAiB3hB,EAC9B,CCpDA,MAAM4hB,GAAuB,IAAI76B,GAAsBooB,UACjD0S,GAAoB96B,EAAqB4G,OAC/C,SAASm0B,GAAY93B,GACjB,OAAQy2B,GAAetK,QAAQpT,IAAI0d,EAAWx8B,KAAI,EAAGgE,YAAWoL,aCPpE,SAA8BrJ,EAAewP,EAAYnG,EAAU,CAAC,GAEhE,IAAIpL,EACJ,GAFA+B,EAAckzB,OAAO,iBAAkB1jB,GAEnC7S,MAAMC,QAAQ4S,GAAa,CAC3B,MAAMinB,EAAajnB,EAAWvV,KAAK88B,GAAYD,GAAe92B,EAAe+2B,EAAS1tB,KACtFpL,EAAYkuB,QAAQpT,IAAI0d,EAC5B,MACK,GAA0B,iBAAfjnB,EACZvR,EAAY64B,GAAe92B,EAAewP,EAAYnG,OAErD,CACD,MAAM0uB,EAA2C,mBAAfvoB,EAC5BwM,GAAehc,EAAewP,EAAYnG,EAAQrH,QAClDwN,EACNvR,EAAYkuB,QAAQpT,IAAIud,GAAct2B,EAAe+3B,EAAoB1uB,GAC7E,CACA,OAAOpL,EAAU6vB,MAAK,IAAM9tB,EAAckzB,OAAO,oBAAqB1jB,IAC1E,CDVkFwoB,CAAqBh4B,EAAe/B,EAAWoL,KACjI,CACA,SAAS4uB,GAAqBj4B,GAC1B,IAAIlG,EAAUg+B,GAAY93B,GAC1B,MAAMmJ,EAoSC,CACHrP,QAASo+B,IAAgB,GACzBC,YAAaD,KACbj/B,WAAYi/B,KACZ1sB,SAAU0sB,KACVE,UAAWF,KACXG,WAAYH,KACZh6B,KAAMg6B,MA1SV,IAAII,GAAkB,EAKtB,MAAMC,EAA0B,CAACrlB,EAAK1D,KAClC,MAAM0B,EAAW8K,GAAehc,EAAewP,GAC/C,GAAI0B,EAAU,CACV,MAAM,WAAEvY,EAAU,cAAEwY,KAAkBnX,GAAWkX,EACjDgC,EAAM,IAAKA,KAAQlZ,KAAWmX,EAClC,CACA,OAAO+B,CAAG,EAmBd,SAASlS,EAAeqI,EAASmvB,GAC7B,MAAMvgC,EAAQ+H,EAAcoX,WACtB7Z,EAAUyC,EAAcy4B,mBAAkB,IAAS,CAAC,EAKpDhC,EAAa,GAKbiC,EAAc,IAAI11B,IAMxB,IAAI21B,EAAkB,CAAC,EAKnBC,EAAsB9N,IAO1B,IAAK,IAAI3gB,EAAI,EAAGA,EAAI0tB,GAAmB1tB,IAAK,CACxC,MAAMlG,EAAO2zB,GAAqBztB,GAC5B0uB,EAAY1vB,EAAMlF,GAClBnG,OAAuBN,IAAhBvF,EAAMgM,GAAsBhM,EAAMgM,GAAQ1G,EAAQ0G,GACzD60B,EAAgBr8B,EAAeqB,GAK/Bi7B,EAAc90B,IAASu0B,EAAoBK,EAAU5hB,SAAW,MAClD,IAAhB8hB,IACAH,EAAsBzuB,GAO1B,IAAI6uB,EAAcl7B,IAASP,EAAQ0G,IAASnG,IAAS7F,EAAMgM,IAAS60B,EAepE,GAXIE,GACAV,GACAt4B,EAAci5B,yBACdD,GAAc,GAMlBH,EAAU1C,cAAgB,IAAKwC,IAI7BE,EAAU5hB,UAA4B,OAAhB8hB,IAElBj7B,IAAS+6B,EAAUK,UAErBr8B,EAAoBiB,IACJ,kBAATA,EACP,SAOJ,MAAMq7B,EAAmBC,GAAuBP,EAAUK,SAAUp7B,GACpE,IAAIu7B,EAAoBF,GAEnBl1B,IAASu0B,GACNK,EAAU5hB,WACT+hB,GACDF,GAEH3uB,EAAIyuB,GAAuBE,EAKhC,MAAMQ,EAAiB38B,MAAMC,QAAQkB,GAAQA,EAAO,CAACA,GAKrD,IAAIy7B,EAAiBD,EAAermB,OAAOslB,EAAyB,CAAC,IACjD,IAAhBQ,IACAQ,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMX,EAC9BY,EAAU,IACTD,KACAD,GAEDG,EAAiBr/B,IACnBg/B,GAAoB,EACpBX,EAAYxmB,OAAO7X,GACnBw+B,EAAUzC,eAAe/7B,IAAO,CAAI,EAExC,IAAK,MAAMA,KAAOo/B,EAAS,CACvB,MAAM5d,EAAO0d,EAAel/B,GACtByhB,EAAO0d,EAAmBn/B,GAE5Bs+B,EAAgBp8B,eAAelC,KAK/BwhB,IAASC,EAKLnM,GAAkBkM,IAASlM,GAAkBmM,IACxCF,GAAeC,EAAMC,IAASqd,EAC/BO,EAAcr/B,GAOdw+B,EAAU1C,cAAc97B,IAAO,OAGrBmD,IAATqe,EAEL6d,EAAcr/B,GAIdq+B,EAAY9mB,IAAIvX,QAGNmD,IAATqe,GAAsB6c,EAAYn2B,IAAIlI,GAK3Cq/B,EAAcr/B,GAOdw+B,EAAU1C,cAAc97B,IAAO,EAEvC,CAKAw+B,EAAUK,SAAWp7B,EACrB+6B,EAAUW,mBAAqBD,EAI3BV,EAAU5hB,WACV0hB,EAAkB,IAAKA,KAAoBY,IAE3CjB,GAAmBt4B,EAAcS,wBACjC44B,GAAoB,GAOpBA,IAAsBL,GACtBvC,EAAW3kB,QAAQwnB,EAAer/B,KAAKgE,IAAc,CACjDA,UAAWA,EACXoL,QAAS,CAAEpF,UAASoF,OAGhC,CAMA,GAAIqvB,EAAY9xB,KAAM,CAClB,MAAM+yB,EAAoB,CAAC,EAC3BjB,EAAYznB,SAAS5W,IACjB,MAAMu/B,EAAiB55B,EAAc65B,cAAcx/B,QAC5BmD,IAAnBo8B,IACAD,EAAkBt/B,GAAOu/B,EAC7B,IAEJnD,EAAW3kB,KAAK,CAAE7T,UAAW07B,GACjC,CACA,IAAIG,EAAgBz8B,QAAQo5B,EAAW9yB,QAOvC,OANI20B,IACkB,IAAlBrgC,EAAMa,UACLkH,EAAci5B,yBACfa,GAAgB,GAEpBxB,GAAkB,EACXwB,EAAgBhgC,EAAQ28B,GAActK,QAAQC,SACzD,CAkBA,MAAO,CACHprB,iBACAqW,UAhBJ,SAAmBpT,EAAMgT,EAAU5N,GAC/B,IAAIyC,EAEJ,GAAI3C,EAAMlF,GAAMgT,WAAaA,EACzB,OAAOkV,QAAQC,UAEsB,QAAxCtgB,EAAK9L,EAAck3B,uBAAoC,IAAPprB,GAAyBA,EAAGmF,SAASsG,IAAY,IAAIzL,EAAI,OAAuC,QAA/BA,EAAKyL,EAAMxW,sBAAmC,IAAP+K,OAAgB,EAASA,EAAGuL,UAAUpT,EAAMgT,EAAS,IAC9M9N,EAAMlF,GAAMgT,SAAWA,EACvB,MAAMwf,EAAaz1B,EAAeqI,EAASpF,GAC3C,IAAK,MAAM5J,KAAO8O,EACdA,EAAM9O,GAAK87B,cAAgB,CAAC,EAEhC,OAAOM,CACX,EAIIsD,mBA5PJ,SAA4BC,GACxBlgC,EAAUkgC,EAAah6B,EAC3B,EA2PI22B,SAAU,IAAMxtB,EAExB,CACA,SAASiwB,GAAuBtd,EAAMD,GAClC,MAAoB,iBAATA,EACAA,IAASC,IAEXnf,MAAMC,QAAQif,KACXD,GAAeC,EAAMC,EAGrC,CACA,SAASoc,GAAgBjhB,GAAW,GAChC,MAAO,CACHA,WACAkf,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBoD,mBAAoB,CAAC,EAE7B,CE/SA,IAAI33B,GAAK,ECCT,MAAM40B,GAAa,CACfx4B,UAAW,CACP4Y,QCDR,cAA+BA,GAM3B,WAAArF,CAAYsF,GACRmC,MAAMnC,GACNA,EAAK/V,iBAAmB+V,EAAK/V,eAAiBk3B,GAAqBnhB,GACvE,CACA,mCAAAmjB,GACI,MAAM,QAAEngC,GAAY2X,KAAKqF,KAAKM,WAC9B3F,KAAK/P,UACD7E,EAAoB/C,KACpB2X,KAAK/P,QAAU5H,EAAQogC,UAAUzoB,KAAKqF,MAE9C,CAIA,KAAArV,GACIgQ,KAAKwoB,qCACT,CACA,MAAAt5B,GACI,MAAM,QAAE7G,GAAY2X,KAAKqF,KAAKM,YACtBtd,QAASqgC,GAAgB1oB,KAAKqF,KAAK3H,WAAa,CAAC,EACrDrV,IAAYqgC,GACZ1oB,KAAKwoB,qCAEb,CACA,OAAAv4B,GAAY,ID3BZxD,KAAM,CACF2Y,QDLR,cAAmCA,GAC/B,WAAArF,GACIyH,SAASC,WACTzH,KAAK5P,GAAKA,IACd,CACA,MAAAlB,GACI,IAAK8Q,KAAKqF,KAAK3W,gBACX,OACJ,MAAM,UAAEi6B,EAAS,eAAEC,EAAc,OAAEr4B,GAAWyP,KAAKqF,KAAK3W,iBAChDi6B,UAAWE,GAAkB7oB,KAAKqF,KAAKyjB,qBAAuB,CAAC,EACvE,IAAK9oB,KAAKqF,KAAK/V,gBAAkBq5B,IAAcE,EAC3C,OAEJ,MAAME,EAAgB/oB,KAAKqF,KAAK/V,eAAesW,UAAU,QAAS+iB,EAAW,CAAEp4B,OAAQA,QAAuCA,EAASyP,KAAKqF,KAAKM,WAAWpV,SACxJq4B,IAAmBD,GACnBI,EAAc1M,MAAK,IAAMuM,EAAe5oB,KAAK5P,KAErD,CACA,KAAAJ,GACI,MAAM,SAAEg5B,GAAahpB,KAAKqF,KAAK3W,iBAAmB,CAAC,EAC/Cs6B,IACAhpB,KAAK/P,QAAU+4B,EAAShpB,KAAK5P,IAErC,CACA,OAAAH,GAAY,KG3BV2G,GAAW,CAAC0N,EAAGC,IAAM1R,KAAKua,IAAI9I,EAAIC,GCWxC,MAAM0kB,GACF,WAAAlpB,CAAY6D,EAAOslB,GAAU,mBAAEp/B,GAAuB,CAAC,GA0DnD,GAtDAkW,KAAK2I,WAAa,KAIlB3I,KAAKmpB,cAAgB,KAIrBnpB,KAAKopB,kBAAoB,KAIzBppB,KAAKkpB,SAAW,CAAC,EACjBlpB,KAAKqpB,YAAc,KACf,IAAMrpB,KAAKmpB,gBAAiBnpB,KAAKopB,kBAC7B,OACJ,MAAM1jB,EAAO4jB,GAAWtpB,KAAKopB,kBAAmBppB,KAAKupB,SAC/CC,EAAmC,OAApBxpB,KAAK2I,WAIpB8gB,EDpClB,SAAoBnlB,EAAGC,GAEnB,MAAMmlB,EAAS9yB,GAAS0N,EAAEzS,EAAG0S,EAAE1S,GACzB83B,EAAS/yB,GAAS0N,EAAExS,EAAGyS,EAAEzS,GAC/B,OAAOe,KAAKod,KAAKyZ,GAAU,EAAIC,GAAU,EAC7C,CC+B4CC,CAAWlkB,EAAKlL,OAAQ,CAAE3I,EAAG,EAAGC,EAAG,KAAQ,EAC3E,IAAK03B,IAAiBC,EAClB,OACJ,MAAM,MAAEvlB,GAAUwB,GACZ,UAAEpE,GAAcP,GACtBf,KAAKupB,QAAQlpB,KAAK,IAAK6D,EAAO5C,cAC9B,MAAM,QAAEuoB,EAAO,OAAEC,GAAW9pB,KAAKkpB,SAC5BM,IACDK,GAAWA,EAAQ7pB,KAAKmpB,cAAezjB,GACvC1F,KAAK2I,WAAa3I,KAAKmpB,eAE3BW,GAAUA,EAAO9pB,KAAKmpB,cAAezjB,EAAK,EAE9C1F,KAAK+pB,kBAAoB,CAACnmB,EAAO8B,KAC7B1F,KAAKmpB,cAAgBvlB,EACrB5D,KAAKopB,kBAAoBY,GAAetkB,EAAM1F,KAAKlW,oBAEnD,GAAMoF,OAAO8Q,KAAKqpB,aAAa,EAAK,EAExCrpB,KAAKiqB,gBAAkB,CAACrmB,EAAO8B,KAE3B,GADA1F,KAAKkqB,OACClqB,KAAKmpB,gBAAiBnpB,KAAKopB,kBAC7B,OACJ,MAAM,MAAEe,EAAK,aAAEC,GAAiBpqB,KAAKkpB,SAC/BmB,EAAUf,GAA0B,kBAAf1lB,EAAMpR,KAC3BwN,KAAKopB,kBACLY,GAAetkB,EAAM1F,KAAKlW,oBAAqBkW,KAAKupB,SACtDvpB,KAAK2I,YAAcwhB,GACnBA,EAAMvmB,EAAOymB,GAEjBD,GAAgBA,EAAaxmB,EAAOymB,EAAQ,GAG3C1mB,GAAiBC,GAClB,OACJ5D,KAAKkpB,SAAWA,EAChBlpB,KAAKlW,mBAAqBA,EAC1B,MACMwgC,EAAcN,GADPhmB,GAAiBJ,GACW5D,KAAKlW,qBACxC,MAAEoa,GAAUomB,GACZ,UAAEhpB,GAAcP,GACtBf,KAAKupB,QAAU,CAAC,IAAKrlB,EAAO5C,cAC5B,MAAM,eAAEipB,GAAmBrB,EAC3BqB,GACIA,EAAe3mB,EAAO0lB,GAAWgB,EAAatqB,KAAKupB,UACvDvpB,KAAKwqB,gBAAkBhmB,GAAKJ,GAAgBzc,OAAQ,cAAeqY,KAAK+pB,mBAAoB3lB,GAAgBzc,OAAQ,YAAaqY,KAAKiqB,iBAAkB7lB,GAAgBzc,OAAQ,gBAAiBqY,KAAKiqB,iBAC1M,CACA,cAAAQ,CAAevB,GACXlpB,KAAKkpB,SAAWA,CACpB,CACA,GAAAgB,GACIlqB,KAAKwqB,iBAAmBxqB,KAAKwqB,kBAC7B1pB,GAAYd,KAAKqpB,YACrB,EAEJ,SAASW,GAAetkB,EAAM5b,GAC1B,OAAOA,EAAqB,CAAEoa,MAAOpa,EAAmB4b,EAAKxB,QAAWwB,CAC5E,CACA,SAASglB,GAAcpmB,EAAGC,GACtB,MAAO,CAAE1S,EAAGyS,EAAEzS,EAAI0S,EAAE1S,EAAGC,EAAGwS,EAAExS,EAAIyS,EAAEzS,EACtC,CACA,SAASw3B,IAAW,MAAEplB,GAASqlB,GAC3B,MAAO,CACHrlB,QACA7C,MAAOqpB,GAAcxmB,EAAOymB,GAAgBpB,IAC5C/uB,OAAQkwB,GAAcxmB,EAAO0mB,GAAiBrB,IAC9C9e,SAAU,GAAY8e,EAAS,IAEvC,CACA,SAASqB,GAAiBrB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASoB,GAAgBpB,GACrB,OAAOA,EAAQA,EAAQr3B,OAAS,EACpC,CACA,SAAS,GAAYq3B,EAASxH,GAC1B,GAAIwH,EAAQr3B,OAAS,EACjB,MAAO,CAAEL,EAAG,EAAGC,EAAG,GAEtB,IAAI4G,EAAI6wB,EAAQr3B,OAAS,EACrB24B,EAAmB,KACvB,MAAMC,EAAYH,GAAgBpB,GAClC,KAAO7wB,GAAK,IACRmyB,EAAmBtB,EAAQ7wB,KACvBoyB,EAAUxpB,UAAYupB,EAAiBvpB,UACvCuJ,GAAsBkX,MAG1BrpB,IAEJ,IAAKmyB,EACD,MAAO,CAAEh5B,EAAG,EAAGC,EAAG,GAEtB,MAAMyqB,EAAOxR,GAAsB+f,EAAUxpB,UAAYupB,EAAiBvpB,WAC1E,GAAa,IAATib,EACA,MAAO,CAAE1qB,EAAG,EAAGC,EAAG,GAEtB,MAAMmM,EAAkB,CACpBpM,GAAIi5B,EAAUj5B,EAAIg5B,EAAiBh5B,GAAK0qB,EACxCzqB,GAAIg5B,EAAUh5B,EAAI+4B,EAAiB/4B,GAAKyqB,GAQ5C,OANIte,EAAgBpM,IAAMwnB,MACtBpb,EAAgBpM,EAAI,GAEpBoM,EAAgBnM,IAAMunB,MACtBpb,EAAgBnM,EAAI,GAEjBmM,CACX,CC/IA,SAAS8sB,GAAWC,GAChB,OAAOA,EAAKp4B,IAAMo4B,EAAKr4B,GAC3B,CACA,SAASs4B,GAAOp7B,EAAOtH,EAAS,EAAG2iC,EAAc,KAC7C,OAAOr4B,KAAKua,IAAIvd,EAAQtH,IAAW2iC,CACvC,CACA,SAASC,GAAc9pB,EAAOtI,EAAQxQ,EAAQgS,EAAS,IACnD8G,EAAM9G,OAASA,EACf8G,EAAM+pB,YAAchtB,GAAIrF,EAAOpG,IAAKoG,EAAOnG,IAAKyO,EAAM9G,QACtD8G,EAAMnO,MAAQ63B,GAAWxiC,GAAUwiC,GAAWhyB,IAC1CkyB,GAAO5pB,EAAMnO,MAAO,EAAG,OAAW6e,MAAM1Q,EAAMnO,UAC9CmO,EAAMnO,MAAQ,GAClBmO,EAAMgqB,UACFjtB,GAAI7V,EAAOoK,IAAKpK,EAAOqK,IAAKyO,EAAM9G,QAAU8G,EAAM+pB,aAClDH,GAAO5pB,EAAMgqB,YAActZ,MAAM1Q,EAAMgqB,cACvChqB,EAAMgqB,UAAY,EAC1B,CACA,SAASC,GAAajqB,EAAOtI,EAAQxQ,EAAQgS,GACzC4wB,GAAc9pB,EAAMxP,EAAGkH,EAAOlH,EAAGtJ,EAAOsJ,EAAG0I,EAASA,EAAOrD,aAAUnL,GACrEo/B,GAAc9pB,EAAMvP,EAAGiH,EAAOjH,EAAGvJ,EAAOuJ,EAAGyI,EAASA,EAAOpD,aAAUpL,EACzE,CACA,SAASw/B,GAAiBhjC,EAAQijC,EAAUh9B,GACxCjG,EAAOoK,IAAMnE,EAAOmE,IAAM64B,EAAS74B,IACnCpK,EAAOqK,IAAMrK,EAAOoK,IAAMo4B,GAAWS,EACzC,CAKA,SAASC,GAAyBljC,EAAQyE,EAAQwB,GAC9CjG,EAAOoK,IAAM3F,EAAO2F,IAAMnE,EAAOmE,IACjCpK,EAAOqK,IAAMrK,EAAOoK,IAAMo4B,GAAW/9B,EACzC,CACA,SAAS0+B,GAAqBnjC,EAAQyE,EAAQwB,GAC1Ci9B,GAAyBljC,EAAOsJ,EAAG7E,EAAO6E,EAAGrD,EAAOqD,GACpD45B,GAAyBljC,EAAOuJ,EAAG9E,EAAO8E,EAAGtD,EAAOsD,EACxD,CCZA,SAAS65B,GAA4BX,EAAMr4B,EAAKC,GAC5C,MAAO,CACHD,SAAa5G,IAAR4G,EAAoBq4B,EAAKr4B,IAAMA,OAAM5G,EAC1C6G,SAAa7G,IAAR6G,EACCo4B,EAAKp4B,IAAMA,GAAOo4B,EAAKp4B,IAAMo4B,EAAKr4B,UAClC5G,EAEd,CAcA,SAAS6/B,GAA4BC,EAAYC,GAC7C,IAAIn5B,EAAMm5B,EAAgBn5B,IAAMk5B,EAAWl5B,IACvCC,EAAMk5B,EAAgBl5B,IAAMi5B,EAAWj5B,IAO3C,OAJIk5B,EAAgBl5B,IAAMk5B,EAAgBn5B,IACtCk5B,EAAWj5B,IAAMi5B,EAAWl5B,OAC3BA,EAAKC,GAAO,CAACA,EAAKD,IAEhB,CAAEA,MAAKC,MAClB,CAuCA,MAAMm5B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHx5B,IAAKy5B,GAAoBH,EAAaC,GACtCt5B,IAAKw5B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,iBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC1HA,MAMMC,GAAc,KAAM,CACtBz6B,EAP0B,CAC1Bw5B,UAAW,EACXn4B,MAAO,EACPqH,OAAQ,EACR6wB,YAAa,GAIbt5B,EAR0B,CAC1Bu5B,UAAW,EACXn4B,MAAO,EACPqH,OAAQ,EACR6wB,YAAa,KAOXmB,GAAY,KAAM,CACpB16B,EAFqB,CAAGc,IAAK,EAAGC,IAAK,GAGrCd,EAHqB,CAAGa,IAAK,EAAGC,IAAK,KCVzC,SAAS45B,GAASvqB,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAASwqB,IAAwB,IAAEr3B,EAAG,KAAEG,EAAI,MAAEF,EAAK,OAAEC,IACjD,MAAO,CACHzD,EAAG,CAAEc,IAAK4C,EAAM3C,IAAKyC,GACrBvD,EAAG,CAAEa,IAAKyC,EAAKxC,IAAK0C,GAE5B,CCVA,SAASo3B,GAAgBx5B,GACrB,YAAiBnH,IAAVmH,GAAiC,IAAVA,CAClC,CACA,SAASy5B,IAAS,MAAEz5B,EAAK,OAAEoD,EAAM,OAAEC,IAC/B,OAASm2B,GAAgBx5B,KACpBw5B,GAAgBp2B,KAChBo2B,GAAgBn2B,EACzB,CACA,SAAS0B,GAAaqE,GAClB,OAAQqwB,GAASrwB,IACbswB,GAAetwB,IACfA,EAAOvK,GACPuK,EAAOpG,QACPoG,EAAOnG,SACPmG,EAAOlG,OACf,CACA,SAASw2B,GAAetwB,GACpB,OAAOuwB,GAAcvwB,EAAOzK,IAAMg7B,GAAcvwB,EAAOxK,EAC3D,CACA,SAAS+6B,GAAch9B,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCfA,SAASi9B,GAAW5oB,EAAOhR,EAAOk4B,GAG9B,OAAOA,EADQl4B,GADYgR,EAAQknB,EAGvC,CAIA,SAAS2B,GAAgB7oB,EAAOmnB,EAAWn4B,EAAOk4B,EAAa4B,GAI3D,YAHiBjhC,IAAbihC,IACA9oB,EAAQ4oB,GAAW5oB,EAAO8oB,EAAU5B,IAEjC0B,GAAW5oB,EAAOhR,EAAOk4B,GAAeC,CACnD,CAIA,SAAS4B,GAAejC,EAAMK,EAAY,EAAGn4B,EAAQ,EAAGk4B,EAAa4B,GACjEhC,EAAKr4B,IAAMo6B,GAAgB/B,EAAKr4B,IAAK04B,EAAWn4B,EAAOk4B,EAAa4B,GACpEhC,EAAKp4B,IAAMm6B,GAAgB/B,EAAKp4B,IAAKy4B,EAAWn4B,EAAOk4B,EAAa4B,EACxE,CAIA,SAASE,GAAcC,GAAK,EAAEt7B,EAAC,EAAEC,IAC7Bm7B,GAAeE,EAAIt7B,EAAGA,EAAEw5B,UAAWx5B,EAAEqB,MAAOrB,EAAEu5B,aAC9C6B,GAAeE,EAAIr7B,EAAGA,EAAEu5B,UAAWv5B,EAAEoB,MAAOpB,EAAEs5B,YAClD,CAuDA,SAASgC,GAAcl6B,GACnB,OAAIm6B,OAAOC,UAAUp6B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAASq6B,GAAcvC,EAAMp0B,GACzBo0B,EAAKr4B,IAAMq4B,EAAKr4B,IAAMiE,EACtBo0B,EAAKp4B,IAAMo4B,EAAKp4B,IAAMgE,CAC1B,CAMA,SAAS42B,GAAcxC,EAAMyC,GAAa7kC,EAAK8kC,EAAUC,IACrD,MAAMC,OAAuC7hC,IAA1B0hC,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EvC,EAAchtB,GAAI4sB,EAAKr4B,IAAKq4B,EAAKp4B,IAAKg7B,GAE5CX,GAAejC,EAAMyC,EAAW7kC,GAAM6kC,EAAWC,GAAWtC,EAAaqC,EAAWv6B,MACxF,CAIA,MAAM26B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaZ,EAAK16B,GACvB+6B,GAAcL,EAAIt7B,EAAGY,EAAWo7B,IAChCL,GAAcL,EAAIr7B,EAAGW,EAAWq7B,GACpC,CCpHA,SAASE,GAAmBj+B,EAAUi6B,GAClC,OAAOyC,GHeX,SAA4BvoB,EAAO8lB,GAC/B,IAAKA,EACD,OAAO9lB,EACX,MAAM+pB,EAAUjE,EAAe,CAAEn4B,EAAGqS,EAAM3O,KAAMzD,EAAGoS,EAAM9O,MACnD84B,EAAclE,EAAe,CAAEn4B,EAAGqS,EAAM7O,MAAOvD,EAAGoS,EAAM5O,SAC9D,MAAO,CACHF,IAAK64B,EAAQn8B,EACbyD,KAAM04B,EAAQp8B,EACdyD,OAAQ44B,EAAYp8B,EACpBuD,MAAO64B,EAAYr8B,EAE3B,CG1BmCs8B,CAAmBp+B,EAASkT,wBAAyB+mB,GACxF,CCaA,MAAMoE,GAAsB,IAAIhoB,QAKhC,MAAMioB,GACF,WAAAtuB,CAAYxR,GAIRyR,KAAKsuB,eAAiB,KACtBtuB,KAAKuuB,YAAa,EAClBvuB,KAAKwuB,iBAAmB,KACxBxuB,KAAKorB,YAAc,CAAEv5B,EAAG,EAAGC,EAAG,GAI9BkO,KAAKyuB,aAAc,EACnBzuB,KAAK0uB,uBAAwB,EAI7B1uB,KAAK2uB,QAAUpC,KACfvsB,KAAKzR,cAAgBA,CACzB,CACA,KAAAlD,CAAMujC,GAAa,aAAEC,GAAe,GAAU,CAAC,GAI3C,MAAM,gBAAEngC,GAAoBsR,KAAKzR,cACjC,GAAIG,IAAiD,IAA9BA,EAAgBi6B,UACnC,OAuFJ3oB,KAAK8uB,WAAa,IAAI7F,GAAW2F,EAAa,CAC1CrE,eAvFoB3mB,IAGpB5D,KAAK+uB,gBACDF,GACA7uB,KAAK6uB,aAAa7qB,GAAiBJ,EAAO,QAAQM,MACtD,EAkFA2lB,QAhFY,CAACjmB,EAAO8B,KAEpB,MAAM,KAAEhZ,EAAI,gBAAEsiC,EAAe,YAAEC,GAAgBjvB,KAAK2F,WACpD,GAAIjZ,IAASsiC,IACLhvB,KAAKsuB,gBACLtuB,KAAKsuB,iBACTtuB,KAAKsuB,eAAiBvpB,GAAcrY,IAE/BsT,KAAKsuB,gBACN,OAERtuB,KAAKuuB,YAAa,EAClBvuB,KAAKwuB,iBAAmB,KACxBxuB,KAAKkvB,qBACDlvB,KAAKzR,cAAc0O,aACnB+C,KAAKzR,cAAc0O,WAAWkyB,oBAAqB,EACnDnvB,KAAKzR,cAAc0O,WAAW1U,YAASwD,GAK3CygC,IAAUxB,IACN,IAAIj8B,EAAUiR,KAAKovB,mBAAmBpE,GAAMp6B,OAAS,EAIrD,GAAImD,EAAQ5C,KAAKpC,GAAU,CACvB,MAAM,WAAEkO,GAAe+C,KAAKzR,cAC5B,GAAI0O,GAAcA,EAAWjQ,OAAQ,CACjC,MAAMqiC,EAAepyB,EAAWjQ,OAAOsiC,UAAUtE,GACjD,GAAIqE,EAAc,CAEdtgC,EADeg8B,GAAWsE,IACNr8B,WAAWjE,GAAW,IAC9C,CACJ,CACJ,CACAiR,KAAKorB,YAAYJ,GAAQj8B,CAAO,IAGhCkgC,GACA,GAAM//B,QAAO,IAAM+/B,EAAYrrB,EAAO8B,KAAO,GAAO,GAExD,MAAM,eAAEpW,GAAmB0Q,KAAKzR,cAChCe,GAAkBA,EAAesW,UAAU,aAAa,EAAK,EAsC7DkkB,OApCW,CAAClmB,EAAO8B,KAEnB,MAAM,gBAAEspB,EAAe,kBAAEO,EAAiB,gBAAEC,EAAe,OAAEC,GAAYzvB,KAAK2F,WAE9E,IAAKqpB,IAAoBhvB,KAAKsuB,eAC1B,OACJ,MAAM,OAAE9zB,GAAWkL,EAEnB,GAAI6pB,GAA+C,OAA1BvvB,KAAKwuB,iBAM1B,OALAxuB,KAAKwuB,iBA6UrB,SAA6Bh0B,EAAQk1B,EAAgB,IACjD,IAAIlS,EAAY,KACZ3qB,KAAKua,IAAI5S,EAAO1I,GAAK49B,EACrBlS,EAAY,IAEP3qB,KAAKua,IAAI5S,EAAO3I,GAAK69B,IAC1BlS,EAAY,KAEhB,OAAOA,CACX,CAtVwCmS,CAAoBn1B,QAEd,OAA1BwF,KAAKwuB,kBACLgB,GAAmBA,EAAgBxvB,KAAKwuB,mBAKhDxuB,KAAK4vB,WAAW,IAAKlqB,EAAKxB,MAAO1J,GACjCwF,KAAK4vB,WAAW,IAAKlqB,EAAKxB,MAAO1J,GAOjCwF,KAAKzR,cAAcc,SAKnBogC,GAAUA,EAAO7rB,EAAO8B,EAAK,EAO7B0kB,aALiB,CAACxmB,EAAO8B,IAAS1F,KAAKiZ,KAAKrV,EAAO8B,IAMpD,CAAE5b,mBAAoBkW,KAAKzR,cAAcshC,yBAChD,CACA,IAAA5W,CAAKrV,EAAO8B,GACR,MAAM6oB,EAAavuB,KAAKuuB,WAExB,GADAvuB,KAAKa,UACA0tB,EACD,OACJ,MAAM,SAAE9jB,GAAa/E,EACrB1F,KAAKsjB,eAAe7Y,GACpB,MAAM,UAAEqlB,GAAc9vB,KAAK2F,WACvBmqB,GACA,GAAM5gC,QAAO,IAAM4gC,EAAUlsB,EAAO8B,IAE5C,CACA,MAAA7E,GACIb,KAAKuuB,YAAa,EAClB,MAAM,WAAEtxB,EAAU,eAAE3N,GAAmB0Q,KAAKzR,cACxC0O,IACAA,EAAWkyB,oBAAqB,GAEpCnvB,KAAK8uB,YAAc9uB,KAAK8uB,WAAW5E,MACnClqB,KAAK8uB,gBAAa/iC,EAClB,MAAM,gBAAEijC,GAAoBhvB,KAAK2F,YAC5BqpB,GAAmBhvB,KAAKsuB,iBACzBtuB,KAAKsuB,iBACLtuB,KAAKsuB,eAAiB,MAE1Bh/B,GAAkBA,EAAesW,UAAU,aAAa,EAC5D,CACA,UAAAgqB,CAAW5E,EAAM+E,EAAQv1B,GACrB,MAAM,KAAE9N,GAASsT,KAAK2F,WAEtB,IAAKnL,IAAWw1B,GAAWhF,EAAMt+B,EAAMsT,KAAKwuB,kBACxC,OACJ,MAAMyB,EAAYjwB,KAAKovB,mBAAmBpE,GAC1C,IAAI5gB,EAAOpK,KAAKorB,YAAYJ,GAAQxwB,EAAOwwB,GAEvChrB,KAAKyuB,aAAezuB,KAAKyuB,YAAYzD,KACrC5gB,EPzKZ,SAA0BlG,GAAO,IAAEvR,EAAG,IAAEC,GAAO+7B,GAS3C,YARY5iC,IAAR4G,GAAqBuR,EAAQvR,EAE7BuR,EAAQyqB,EAAUvwB,GAAIzL,EAAKuR,EAAOyqB,EAAQh8B,KAAOE,KAAKD,IAAIsR,EAAOvR,QAEpD5G,IAAR6G,GAAqBsR,EAAQtR,IAElCsR,EAAQyqB,EAAUvwB,GAAIxL,EAAKsR,EAAOyqB,EAAQ/7B,KAAOC,KAAKF,IAAIuR,EAAOtR,IAE9DsR,CACX,CO+JmBgsB,CAAiB9lB,EAAMpK,KAAKyuB,YAAYzD,GAAOhrB,KAAK2uB,QAAQ3D,KAEvEiF,EAAUl/B,IAAIqZ,EAClB,CACA,kBAAA8kB,GACI,MAAM,gBAAEiB,EAAe,YAAElE,GAAgBjsB,KAAK2F,YACxC,OAAE3Y,GAAWgT,KAAKzR,cAAc0O,YAAc,CAAC,EAC/CmzB,EAAkBpwB,KAAKyuB,YACzB0B,GAAmBzlC,EAAYylC,GAC1BnwB,KAAKyuB,cACNzuB,KAAKyuB,YAAczuB,KAAKqwB,yBAKxBrwB,KAAKyuB,eADL0B,IAAmBnjC,IP3JnC,SAAiCsiC,GAAW,IAAEl6B,EAAG,KAAEG,EAAI,OAAED,EAAM,MAAED,IAC7D,MAAO,CACHxD,EAAG85B,GAA4B2D,EAAUz9B,EAAG0D,EAAMF,GAClDvD,EAAG65B,GAA4B2D,EAAUx9B,EAAGsD,EAAKE,GAEzD,COuJmCg7B,CAAwBtjC,EAAOsiC,UAAWa,GAMrEnwB,KAAK2uB,QPpGb,SAA4B1C,EAAcF,IAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACHl6B,EAAGm6B,GAAmBC,EAAa,OAAQ,SAC3Cn6B,EAAGk6B,GAAmBC,EAAa,MAAO,UAElD,COyFuBsE,CAAmBtE,GAK9BmE,IAAoBpwB,KAAKyuB,aACzBzhC,GACAgT,KAAKyuB,cACJzuB,KAAK0uB,uBACNlC,IAAUxB,IACFhrB,KAAKovB,mBAAmBpE,KACxBhrB,KAAKyuB,YAAYzD,GP7HrC,SAA+Bh+B,EAAQyhC,GACnC,MAAM+B,EAAsB,CAAC,EAO7B,YANwBzkC,IAApB0iC,EAAY97B,MACZ69B,EAAoB79B,IAAM87B,EAAY97B,IAAM3F,EAAO2F,UAE/B5G,IAApB0iC,EAAY77B,MACZ49B,EAAoB59B,IAAM67B,EAAY77B,IAAM5F,EAAO2F,KAEhD69B,CACX,COoH6CC,CAAsBzjC,EAAOsiC,UAAUtE,GAAOhrB,KAAKyuB,YAAYzD,IAC5F,GAGZ,CACA,qBAAAqF,GACI,MAAQF,gBAAiB1B,EAAW,yBAAEiC,GAA6B1wB,KAAK2F,WACxE,IAAK8oB,IAAgB/jC,EAAY+jC,GAC7B,OAAO,EACX,MAAMkC,EAAqBlC,EAAY1/B,QACvC6b,GAAiC,OAAvB+lB,EAA6B,0GACvC,MAAM,WAAE1zB,GAAe+C,KAAKzR,cAE5B,IAAK0O,IAAeA,EAAWjQ,OAC3B,OAAO,EACX,MAAM4jC,ED5Nd,SAAwB7zB,EAAS8zB,EAAoB/mC,GACjD,MAAMgnC,EAAc9C,GAAmBjxB,EAASjT,IAC1C,OAAEinC,GAAWF,EAKnB,OAJIE,IACAxD,GAAcuD,EAAYj/B,EAAGk/B,EAAOv2B,OAAO3I,GAC3C07B,GAAcuD,EAAYh/B,EAAGi/B,EAAOv2B,OAAO1I,IAExCg/B,CACX,CCoN+BE,CAAeL,EAAoB1zB,EAAW2J,KAAM5G,KAAKzR,cAAcshC,yBAC9F,IAAIoB,EPtKZ,SAAiC3B,EAAWsB,GACxC,MAAO,CACH/+B,EAAG+5B,GAA4B0D,EAAUz9B,EAAG++B,EAAe/+B,GAC3DC,EAAG85B,GAA4B0D,EAAUx9B,EAAG8+B,EAAe9+B,GAEnE,COiKkCo/B,CAAwBj0B,EAAWjQ,OAAOsiC,UAAWsB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,EJ9NpC,UAAiC,EAAE7+B,EAAC,EAAEC,IAClC,MAAO,CAAEsD,IAAKtD,EAAEa,IAAK0C,MAAOxD,EAAEe,IAAK0C,OAAQxD,EAAEc,IAAK2C,KAAM1D,EAAEc,IAC9D,CI4N6Dy+B,CAAwBH,IACzEjxB,KAAK0uB,wBAA0ByC,EAC3BA,IACAF,EAAsBxE,GAAwB0E,GAEtD,CACA,OAAOF,CACX,CACA,cAAA3N,CAAe7Y,GACX,MAAM,KAAE/d,EAAI,aAAE2kC,EAAY,YAAEpF,EAAW,eAAEqF,EAAc,iBAAEC,EAAgB,oBAAEC,GAAyBxxB,KAAK2F,WACnG8oB,EAAczuB,KAAKyuB,aAAe,CAAC,EACnCgD,EAAqBjF,IAAUxB,IACjC,IAAKgF,GAAWhF,EAAMt+B,EAAMsT,KAAKwuB,kBAC7B,OAEJ,IAAItnC,EAAcunC,GAAeA,EAAYzD,IAAU,CAAC,EACpDuG,IACArqC,EAAa,CAAEyL,IAAK,EAAGC,IAAK,IAOhC,MAAMulB,EAAkB8T,EAAc,IAAM,IACtC/T,EAAgB+T,EAAc,GAAK,IACnClU,EAAU,CACZvlB,KAAM,UACNiY,SAAU4mB,EAAe5mB,EAASugB,GAAQ,EAC1C7S,kBACAD,gBACAD,aAAc,IACdrB,UAAW,EACXC,UAAW,MACRya,KACApqC,GAKP,OAAO8Y,KAAK0xB,wBAAwB1G,EAAMjT,EAAQ,IAGtD,OAAO2C,QAAQpT,IAAImqB,GAAoBpV,KAAKmV,EAChD,CACA,uBAAAE,CAAwB1G,EAAM9jC,GAC1B,MAAM+oC,EAAYjwB,KAAKovB,mBAAmBpE,GAC1C,OAAOiF,EAAU5kC,MAAMy0B,GAAmBkL,EAAMiF,EAAW,EAAG/oC,GAClE,CACA,aAAA6nC,GACIvC,IAAUxB,GAAShrB,KAAKovB,mBAAmBpE,GAAM/R,QACrD,CAOA,kBAAAmW,CAAmBpE,GACf,MAAM2G,EAAU,QAAU3G,EAAKliC,cACzBtC,EAAQwZ,KAAKzR,cAAcoX,WAC3BisB,EAAsBprC,EAAMmrC,GAClC,OAAOC,GAED5xB,KAAKzR,cAAc61B,SAAS4G,GAAOxkC,EAAMa,QAAUb,EAAMa,QAAQ2jC,QAAQj/B,IAAc,EACjG,CACA,YAAA8iC,CAAa3qB,GACTsoB,IAAUxB,IACN,MAAM,KAAEt+B,GAASsT,KAAK2F,WAEtB,IAAKqqB,GAAWhF,EAAMt+B,EAAMsT,KAAKwuB,kBAC7B,OACJ,MAAM,WAAEvxB,GAAe+C,KAAKzR,cACtB0hC,EAAYjwB,KAAKovB,mBAAmBpE,GAC1C,GAAI/tB,GAAcA,EAAWjQ,OAAQ,CACjC,MAAM,IAAE2F,EAAG,IAAEC,GAAQqK,EAAWjQ,OAAOsiC,UAAUtE,GACjDiF,EAAUl/B,IAAImT,EAAM8mB,GAAQ5sB,GAAIzL,EAAKC,EAAK,IAC9C,IAER,CAMA,8BAAAi/B,GACI,IAAK7xB,KAAKzR,cAAcQ,QACpB,OACJ,MAAM,KAAErC,EAAI,gBAAEyjC,GAAoBnwB,KAAK2F,YACjC,WAAE1I,GAAe+C,KAAKzR,cAC5B,IAAK7D,EAAYylC,KAAqBlzB,IAAe+C,KAAKyuB,YACtD,OAKJzuB,KAAK+uB,gBAKL,MAAM+C,EAAc,CAAEjgC,EAAG,EAAGC,EAAG,GAC/B06B,IAAUxB,IACN,MAAMiF,EAAYjwB,KAAKovB,mBAAmBpE,GAC1C,GAAIiF,EAAW,CACX,MAAM/0B,EAAS+0B,EAAUr/B,MACzBkhC,EAAY9G,GP5Q5B,SAAoBjyB,EAAQxQ,GACxB,IAAIgS,EAAS,GACb,MAAMw3B,EAAehH,GAAWhyB,GAC1Bi5B,EAAejH,GAAWxiC,GAOhC,OANIypC,EAAeD,EACfx3B,EAASqV,GAASrnB,EAAOoK,IAAKpK,EAAOqK,IAAMm/B,EAAch5B,EAAOpG,KAE3Do/B,EAAeC,IACpBz3B,EAASqV,GAAS7W,EAAOpG,IAAKoG,EAAOnG,IAAMo/B,EAAczpC,EAAOoK,MAE7DD,EAAM,EAAG,EAAG6H,EACvB,COiQoC,CAAW,CAAE5H,IAAKuI,EAAQtI,IAAKsI,GAAU8E,KAAKyuB,YAAYzD,GAClF,KAKJ,MAAM,kBAAEnzB,GAAsBmI,KAAKzR,cAAcoX,WACjD3F,KAAKzR,cAAcQ,QAAQ+I,MAAMrF,UAAYoF,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACNoF,EAAW2J,MAAQ3J,EAAW2J,KAAKqrB,eACnCh1B,EAAWi1B,eACXlyB,KAAKkvB,qBAKL1C,IAAUxB,IACN,IAAKgF,GAAWhF,EAAMt+B,EAAM,MACxB,OAIJ,MAAMujC,EAAYjwB,KAAKovB,mBAAmBpE,IACpC,IAAEr4B,EAAG,IAAEC,GAAQoN,KAAKyuB,YAAYzD,GACtCiF,EAAUl/B,IAAIqN,GAAIzL,EAAKC,EAAKk/B,EAAY9G,IAAO,GAEvD,CACA,YAAAmH,GACI,IAAKnyB,KAAKzR,cAAcQ,QACpB,OACJq/B,GAAoBr9B,IAAIiP,KAAKzR,cAAeyR,MAC5C,MAIMoyB,EAAsBhuB,GAJZpE,KAAKzR,cAAcQ,QAIkB,eAAgB6U,IACjE,MAAM,KAAElX,EAAI,aAAE4M,GAAe,GAAS0G,KAAK2F,WAC3CjZ,GAAQ4M,GAAgB0G,KAAK3U,MAAMuY,EAAM,IAEvCyuB,EAAyB,KAC3B,MAAM,gBAAElC,GAAoBnwB,KAAK2F,WAC7Bjb,EAAYylC,KACZnwB,KAAKyuB,YAAczuB,KAAKqwB,wBAC5B,GAEE,WAAEpzB,GAAe+C,KAAKzR,cACtB+jC,EAA4Br1B,EAAWwG,iBAAiB,UAAW4uB,GACrEp1B,IAAeA,EAAWjQ,SAC1BiQ,EAAW2J,MAAQ3J,EAAW2J,KAAKqrB,eACnCh1B,EAAWi1B,gBAEfG,IAKA,MAAME,EAAqBlvB,GAAY1b,OAAQ,UAAU,IAAMqY,KAAK6xB,mCAK9DW,EAA2Bv1B,EAAWwG,iBAAiB,aAAa,EAAIpC,QAAOoxB,uBAC7EzyB,KAAKuuB,YAAckE,IACnBjG,IAAUxB,IACN,MAAMnH,EAAc7jB,KAAKovB,mBAAmBpE,GACvCnH,IAEL7jB,KAAKorB,YAAYJ,IAAS3pB,EAAM2pB,GAAMK,UACtCxH,EAAY9yB,IAAI8yB,EAAYjzB,MAAQyQ,EAAM2pB,GAAMK,WAAU,IAE9DrrB,KAAKzR,cAAcc,SAE1B,IACD,MAAO,KACHkjC,IACAH,IACAE,IACAE,GAA4BA,GAA0B,CAE9D,CACA,QAAA7sB,GACI,MAAMnf,EAAQwZ,KAAKzR,cAAcoX,YAC3B,KAAEjZ,GAAO,EAAK,kBAAE6iC,GAAoB,EAAK,gBAAEP,GAAkB,EAAK,gBAAEmB,GAAkB,EAAK,YAAElE,EAAcF,GAAc,aAAEsF,GAAe,GAAU7qC,EAC1J,MAAO,IACAA,EACHkG,OACA6iC,oBACAP,kBACAmB,kBACAlE,cACAoF,eAER,EAEJ,SAASrB,GAAWxS,EAAW9wB,EAAM8hC,GACjC,SAAkB,IAAT9hC,GAAiBA,IAAS8wB,GACT,OAArBgR,GAA6BA,IAAqBhR,EAC3D,CC/aA,MAAMkV,GAAgBnvB,GAAY,CAACK,EAAO8B,KAClCnC,GACA,GAAMrU,QAAO,IAAMqU,EAAQK,EAAO8B,IACtC,ECJJ,MAAMitB,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQ/H,GAC7B,OAAIA,EAAKp4B,MAAQo4B,EAAKr4B,IACX,EACHogC,GAAU/H,EAAKp4B,IAAMo4B,EAAKr4B,KAAQ,GAC9C,CAQA,MAAMqgC,GAAsB,CACxBC,QAAS,CAAC/3B,EAAQmK,KACd,IAAKA,EAAK9c,OACN,OAAO2S,EAKX,GAAsB,iBAAXA,EAAqB,CAC5B,IAAIlH,EAAG7C,KAAK+J,GAIR,OAAOA,EAHPA,EAASlI,WAAWkI,EAK5B,CAOA,MAAO,GAFG43B,GAAgB53B,EAAQmK,EAAK9c,OAAOsJ,OACpCihC,GAAgB53B,EAAQmK,EAAK9c,OAAOuJ,KAC1B,GCjCtBohC,GAAmB,CACrBD,QAAS,CAAC/3B,GAAUi4B,YAAWC,sBAC3B,MAAMC,EAAWn4B,EACXo4B,EAASzhB,GAAQ9e,MAAMmI,GAE7B,GAAIo4B,EAAOphC,OAAS,EAChB,OAAOmhC,EACX,MAAM3gB,EAAWb,GAAQJ,kBAAkBvW,GACrCV,EAA8B,iBAAd84B,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgBvhC,EAAEqB,MAAQigC,EAAUthC,EAC7C2hC,EAASJ,EAAgBthC,EAAEoB,MAAQigC,EAAUrhC,EACnDwhC,EAAO,EAAI94B,IAAW+4B,EACtBD,EAAO,EAAI94B,IAAWg5B,EAOtB,MAAMC,EAAer1B,GAAIm1B,EAAQC,EAAQ,IAOzC,MALkC,iBAAvBF,EAAO,EAAI94B,KAClB84B,EAAO,EAAI94B,IAAWi5B,GAEQ,iBAAvBH,EAAO,EAAI94B,KAClB84B,EAAO,EAAI94B,IAAWi5B,GACnB/gB,EAAS4gB,EAAO,GCpB/B,MAAMI,WAAiC,YAMnC,iBAAAC,GACI,MAAM,cAAEplC,EAAa,YAAEqlC,EAAW,kBAAEC,EAAiB,SAAEzlC,GAAa4R,KAAKxZ,OACnE,WAAEyW,GAAe1O,EjJjB/B,IAA2BulC,IiJkBDC,GjJjBtBnpC,OAAOqO,OAAO7H,EAAiB0iC,GiJkBvB72B,IACI22B,EAAYI,OACZJ,EAAYI,MAAM7zB,IAAIlD,GACtB42B,GAAqBA,EAAkB7K,UAAY56B,GACnDylC,EAAkB7K,SAAS/rB,GAE/BA,EAAW2J,KAAKqtB,YAChBh3B,EAAWwG,iBAAiB,qBAAqB,KAC7CzD,KAAKk0B,cAAc,IAEvBj3B,EAAWk3B,WAAW,IACfl3B,EAAWrF,QACdgxB,eAAgB,IAAM5oB,KAAKk0B,kBAGnCvB,GAAsBE,gBAAiB,CAC3C,CACA,uBAAAuB,CAAwB12B,GACpB,MAAM,iBAAE22B,EAAgB,cAAE9lC,EAAa,KAAE7B,EAAI,UAAEi8B,GAAc3oB,KAAKxZ,MAC5DyW,EAAa1O,EAAc0O,WACjC,OAAKA,GASLA,EAAW0rB,UAAYA,EACnBj8B,GACAgR,EAAU22B,mBAAqBA,QACVtoC,IAArBsoC,EACAp3B,EAAWq3B,aAGXt0B,KAAKk0B,eAELx2B,EAAUirB,YAAcA,IACpBA,EACA1rB,EAAWs3B,UAELt3B,EAAWu3B,YAMjB,GAAMpS,YAAW,KACb,MAAMqS,EAAQx3B,EAAWy3B,WACpBD,GAAUA,EAAME,QAAQziC,QACzB8N,KAAKk0B,cACT,KAIL,MAnCI,IAoCf,CACA,kBAAAU,GACI,MAAM,WAAE33B,GAAe+C,KAAKxZ,MAAM+H,cAC9B0O,IACAA,EAAW2J,KAAKqtB,YAChBY,gBAAe,MACN53B,EAAW63B,kBAAoB73B,EAAW83B,UAC3C/0B,KAAKk0B,cACT,IAGZ,CACA,oBAAAc,GACI,MAAM,cAAEzmC,EAAa,YAAEqlC,EAAaC,kBAAmBoB,GAAoBj1B,KAAKxZ,OAC1E,WAAEyW,GAAe1O,EACnB0O,IACAA,EAAWi4B,4BACPtB,GAAeA,EAAYI,OAC3BJ,EAAYI,MAAM1zB,OAAOrD,GACzBg4B,GAAkBA,EAAeE,YACjCF,EAAeE,WAAWl4B,GAEtC,CACA,YAAAi3B,GACI,MAAM,aAAEA,GAAiBl0B,KAAKxZ,MAC9B0tC,GAAgBA,GACpB,CACA,MAAA7kC,GACI,OAAO,IACX,EAEJ,SAASnB,GAAc1H,GACnB,MAAOmiC,EAAWuL,GCnFtB,WACI,MAAMpoC,GAAU,IAAAI,YAAW,GAC3B,GAAgB,OAAZJ,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAE68B,EAAS,eAAEC,EAAc,SAAEI,GAAal9B,EAG1CsE,GAAK,IAAAglC,SAGX,OAFA,IAAA7qC,YAAU,IAAMy+B,EAAS54B,IAAK,KAEtBu4B,GAAaC,EAAiB,EAAC,EADlB,IAAMA,GAAkBA,EAAex4B,IACE,EAAC,EACnE,CDwEsCilC,GAC5BzB,GAAc,IAAA1nC,YAAWiB,GAC/B,OAAQ,gBAA6BumC,GAA0B,IAAKltC,EAAOotC,YAAaA,EAAaC,mBAAmB,IAAA3nC,YAAWkB,GAA2Bu7B,UAAWA,EAAWuL,aAAcA,GACtM,CACA,MAAMH,GAAyB,CAC3Br/B,aAAc,IACPs+B,GACHsC,QAAS,CACL,sBACA,uBACA,yBACA,4BAGR1gC,oBAAqBo+B,GACrBn+B,qBAAsBm+B,GACtBj+B,uBAAwBi+B,GACxBl+B,wBAAyBk+B,GACzBuC,UAAWrC,IEzHTsC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQtjC,OACrBwjC,GAAY7lC,GAA2B,iBAAVA,EAAqBmD,WAAWnD,GAASA,EACtE8lC,GAAQ9lC,GAA2B,iBAAVA,GAAsBmE,EAAG7C,KAAKtB,GA0C7D,SAAS+lC,GAAUt5B,EAAQu5B,GACvB,YAA8B9pC,IAAvBuQ,EAAOu5B,GACRv5B,EAAOu5B,GACPv5B,EAAO5H,YACjB,CAwBA,MAAMohC,GAAkBC,GAAS,EAAG,GAAKhqB,IACnCiqB,GAAmBD,GAAS,GAAK,IAAMn2B,IAC7C,SAASm2B,GAASpjC,EAAKC,EAAKuY,GACxB,OAAQphB,GAEAA,EAAI4I,EACG,EACP5I,EAAI6I,EACG,EACJuY,EAAOyE,GAASjd,EAAKC,EAAK7I,GAEzC,CCrFA,SAASksC,GAAajL,EAAMkL,GACxBlL,EAAKr4B,IAAMujC,EAAWvjC,IACtBq4B,EAAKp4B,IAAMsjC,EAAWtjC,GAC1B,CAMA,SAASujC,GAAYhJ,EAAKiJ,GACtBH,GAAa9I,EAAIt7B,EAAGukC,EAAUvkC,GAC9BokC,GAAa9I,EAAIr7B,EAAGskC,EAAUtkC,EAClC,CCVA,SAASukC,GAAiBnyB,EAAOmnB,EAAWn4B,EAAOk4B,EAAa4B,GAM5D,OAJA9oB,EAAQ4oB,GADR5oB,GAASmnB,EACiB,EAAIn4B,EAAOk4B,QACpBr/B,IAAbihC,IACA9oB,EAAQ4oB,GAAW5oB,EAAO,EAAI8oB,EAAU5B,IAErClnB,CACX,CAsBA,SAASoyB,GAAqBtL,EAAMyC,GAAa7kC,EAAK8kC,EAAUC,GAAYpzB,EAAQg8B,IAlBpF,SAAyBvL,EAAMK,EAAY,EAAGn4B,EAAQ,EAAGqH,EAAS,GAAKyyB,EAAUkJ,EAAalL,EAAMuL,EAAavL,GACzGj3B,EAAQ5C,KAAKk6B,KACbA,EAAYr4B,WAAWq4B,GAEvBA,EADyBjtB,GAAIm4B,EAAW5jC,IAAK4jC,EAAW3jC,IAAKy4B,EAAY,KAC1CkL,EAAW5jC,KAE9C,GAAyB,iBAAd04B,EACP,OACJ,IAAID,EAAchtB,GAAI83B,EAAWvjC,IAAKujC,EAAWtjC,IAAK2H,GAClDywB,IAASkL,IACT9K,GAAeC,GACnBL,EAAKr4B,IAAM0jC,GAAiBrL,EAAKr4B,IAAK04B,EAAWn4B,EAAOk4B,EAAa4B,GACrEhC,EAAKp4B,IAAMyjC,GAAiBrL,EAAKp4B,IAAKy4B,EAAWn4B,EAAOk4B,EAAa4B,EACzE,CAMIwJ,CAAgBxL,EAAMyC,EAAW7kC,GAAM6kC,EAAWC,GAAWD,EAAWE,GAAYF,EAAWv6B,MAAOqH,EAAQg8B,EAClH,CAIA,MAAM,GAAQ,CAAC,IAAK,SAAU,WACxB,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASE,GAAoBtJ,EAAKM,EAAY2I,EAAWM,GACrDJ,GAAqBnJ,EAAIt7B,EAAG47B,EAAY,GAAO2I,EAAYA,EAAUvkC,OAAI9F,EAAW2qC,EAAYA,EAAU7kC,OAAI9F,GAC9GuqC,GAAqBnJ,EAAIr7B,EAAG27B,EAAY,GAAO2I,EAAYA,EAAUtkC,OAAI/F,EAAW2qC,EAAYA,EAAU5kC,OAAI/F,EAClH,CCjDA,SAAS4qC,GAAgBt1B,GACrB,OAA2B,IAApBA,EAAMgqB,WAAmC,IAAhBhqB,EAAMnO,KAC1C,CACA,SAAS0jC,GAAYv1B,GACjB,OAAOs1B,GAAgBt1B,EAAMxP,IAAM8kC,GAAgBt1B,EAAMvP,EAC7D,CAOA,SAAS+kC,GAAiBvyB,EAAGC,GACzB,OAAQ1R,KAAKQ,MAAMiR,EAAEzS,EAAEc,OAASE,KAAKQ,MAAMkR,EAAE1S,EAAEc,MAC3CE,KAAKQ,MAAMiR,EAAEzS,EAAEe,OAASC,KAAKQ,MAAMkR,EAAE1S,EAAEe,MACvCC,KAAKQ,MAAMiR,EAAExS,EAAEa,OAASE,KAAKQ,MAAMkR,EAAEzS,EAAEa,MACvCE,KAAKQ,MAAMiR,EAAExS,EAAEc,OAASC,KAAKQ,MAAMkR,EAAEzS,EAAEc,IAC/C,CACA,SAASkkC,GAAY3J,GACjB,OAAOpC,GAAWoC,EAAIt7B,GAAKk5B,GAAWoC,EAAIr7B,EAC9C,CCpBA,MAAMilC,GACF,WAAAh3B,GACIC,KAAK20B,QAAU,EACnB,CACA,GAAAx0B,CAAIkF,GACA+b,GAAcphB,KAAK20B,QAAStvB,GAC5BA,EAAK2xB,gBACT,CACA,MAAA12B,CAAO+E,GAKH,GAJAic,GAAWthB,KAAK20B,QAAStvB,GACrBA,IAASrF,KAAKi3B,WACdj3B,KAAKi3B,cAAWlrC,GAEhBsZ,IAASrF,KAAKk3B,KAAM,CACpB,MAAMD,EAAWj3B,KAAK20B,QAAQ30B,KAAK20B,QAAQziC,OAAS,GAChD+kC,GACAj3B,KAAKu0B,QAAQ0C,EAErB,CACJ,CACA,QAAAzC,CAASnvB,GACL,MAAM8xB,EAAcn3B,KAAK20B,QAAQyC,WAAWC,GAAWhyB,IAASgyB,IAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAIv+B,EAAIy+B,EAAaz+B,GAAK,EAAGA,IAAK,CACnC,MAAM2+B,EAASr3B,KAAK20B,QAAQj8B,GAC5B,IAAyB,IAArB2+B,EAAO1O,UAAqB,CAC5BsO,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACAj3B,KAAKu0B,QAAQ0C,IACN,EAKf,CACA,OAAA1C,CAAQlvB,EAAMiyB,GACV,MAAML,EAAWj3B,KAAKk3B,KACtB,GAAI7xB,IAAS4xB,IAEbj3B,KAAKi3B,SAAWA,EAChBj3B,KAAKk3B,KAAO7xB,EACZA,EAAKkyB,OACDN,GAAU,CACVA,EAASlnC,UAAYknC,EAASD,iBAC9B3xB,EAAK2xB,iBACL3xB,EAAKmyB,WAAaP,EACdK,IACAjyB,EAAKmyB,WAAWC,iBAAkB,GAElCR,EAASS,WACTryB,EAAKqyB,SAAWT,EAASS,SACzBryB,EAAKqyB,SAAS//B,aACVs/B,EAASU,iBAAmBV,EAASt/B,cAEzC0N,EAAKuB,MAAQvB,EAAKuB,KAAKgxB,aACvBvyB,EAAKwyB,eAAgB,GAEzB,MAAM,UAAEC,GAAczyB,EAAKzN,SACT,IAAdkgC,GACAb,EAASc,MAcjB,CACJ,CACA,qBAAAC,GACIh4B,KAAK20B,QAAQn1B,SAAS6F,IAClB,MAAM,QAAEzN,EAAO,aAAEqgC,GAAiB5yB,EAClCzN,EAAQgxB,gBAAkBhxB,EAAQgxB,iBAC9BqP,GACAA,EAAargC,QAAQgxB,gBACjBqP,EAAargC,QAAQgxB,gBAC7B,GAER,CACA,cAAAoO,GACIh3B,KAAK20B,QAAQn1B,SAAS6F,IAClBA,EAAKtV,UAAYsV,EAAK2xB,gBAAe,EAAM,GAEnD,CAKA,kBAAAkB,GACQl4B,KAAKk3B,MAAQl3B,KAAKk3B,KAAKQ,WACvB13B,KAAKk3B,KAAKQ,cAAW3rC,EAE7B,EC5GJ,SAASosC,GAAyB92B,EAAO8xB,EAAWiF,GAChD,IAAI3lC,EAAY,GAOhB,MAAM4lC,EAAah3B,EAAMxP,EAAEw5B,UAAY8H,EAAUthC,EAC3CymC,EAAaj3B,EAAMvP,EAAEu5B,UAAY8H,EAAUrhC,EAWjD,IAVIumC,GAAcC,KACd7lC,EAAY,eAAe4lC,QAAiBC,YAM5B,IAAhBnF,EAAUthC,GAA2B,IAAhBshC,EAAUrhC,IAC/BW,GAAa,SAAS,EAAI0gC,EAAUthC,MAAM,EAAIshC,EAAUrhC,OAExDsmC,EAAiB,CACjB,MAAM,OAAEliC,EAAM,QAAEC,EAAO,QAAEC,GAAYgiC,EACjCliC,IACAzD,GAAa,UAAUyD,UACvBC,IACA1D,GAAa,WAAW0D,UACxBC,IACA3D,GAAa,WAAW2D,SAChC,CAKA,MAAMmiC,EAAgBl3B,EAAMxP,EAAEqB,MAAQigC,EAAUthC,EAC1C2mC,EAAgBn3B,EAAMvP,EAAEoB,MAAQigC,EAAUrhC,EAIhD,OAHsB,IAAlBymC,GAAyC,IAAlBC,IACvB/lC,GAAa,SAAS8lC,MAAkBC,MAErC/lC,GAAa,MACxB,CCvCA,MAAMgmC,GAAiB,CAACn0B,EAAGC,IAAMD,EAAEo0B,MAAQn0B,EAAEm0B,MCG7C,MAAMC,GACF,WAAA54B,GACIC,KAAK7W,SAAW,GAChB6W,KAAK44B,SAAU,CACnB,CACA,GAAAz4B,CAAI2F,GACAsb,GAAcphB,KAAK7W,SAAU2c,GAC7B9F,KAAK44B,SAAU,CACnB,CACA,MAAAt4B,CAAOwF,GACHwb,GAAWthB,KAAK7W,SAAU2c,GAC1B9F,KAAK44B,SAAU,CACnB,CACA,OAAAp5B,CAAQyC,GACJjC,KAAK44B,SAAW54B,KAAK7W,SAAS08B,KAAK4S,IACnCz4B,KAAK44B,SAAU,EACf54B,KAAK7W,SAASqW,QAAQyC,EAC1B,ECMJ,MAAM42B,GAAgB,CAAC,GAAI,IAAK,IAAK,KAMrC,IAAI,GAAK,EAKT,MAAMC,GAAsB,CACxBtmC,KAAM,kBACNumC,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAE5B,SAASC,IAAqB,qBAAEC,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,IACnG,OAAO,MACH,WAAAx5B,CAAYpI,EAAe,CAAC,EAAGnJ,GAAS4qC,aAAqD,EAASA,MAIlGp5B,KAAK5P,GAAK,KAIV4P,KAAKw5B,YAAc,EAOnBx5B,KAAK7W,SAAW,IAAIoI,IAKpByO,KAAKpI,QAAU,CAAC,EAMhBoI,KAAKy5B,iBAAkB,EACvBz5B,KAAKmvB,oBAAqB,EAO1BnvB,KAAK63B,eAAgB,EAKrB73B,KAAK05B,mBAAoB,EAKzB15B,KAAK25B,yBAA0B,EAK/B35B,KAAK45B,kBAAmB,EAIxB55B,KAAK65B,uBAAwB,EAC7B75B,KAAK85B,uBAAwB,EAK7B95B,KAAK43B,YAAa,EAIlB53B,KAAK+5B,OAAQ,EAKb/5B,KAAKg6B,YAAa,EAIlBh6B,KAAKi6B,sBAAuB,EAS5Bj6B,KAAKmzB,UAAY,CAAEthC,EAAG,EAAGC,EAAG,GAI5BkO,KAAKk6B,cAAgB,IAAIvpC,IACzBqP,KAAKm6B,iBAAkB,EAEvBn6B,KAAKo6B,iBAAkB,EACvBp6B,KAAKq6B,kBAAoB,KACjBr6B,KAAK43B,aACL53B,KAAK43B,YAAa,EAClB53B,KAAKs6B,oBACT,EAOJt6B,KAAKu6B,iBAAmB,KCjJpC,IAAgB/wC,EDsJAsvC,GAAoBC,WAChBD,GAAoBE,qBAChBF,GAAoBG,uBAChB,EACZj5B,KAAKw6B,MAAMh7B,QAAQi7B,IACnBz6B,KAAKw6B,MAAMh7B,QAAQk7B,IACnB16B,KAAKw6B,MAAMh7B,QAAQm7B,IACnB36B,KAAKw6B,MAAMh7B,QAAQo7B,IC7JnBpxC,ED8JOsvC,GC7JfnxC,OAAOkzC,aACPlzC,OAAOkzC,YAAYC,OAAOtxC,ED4JS,EAE/BwW,KAAK+6B,cAAe,EACpB/6B,KAAKg7B,WAAY,EACjBh7B,KAAKi7B,kBAAoB,EAKzBj7B,KAAKk7B,YAAc,IAAIvqC,IACvBqP,KAAKrI,aAAeA,EACpBqI,KAAK4G,KAAOpY,EAASA,EAAOoY,MAAQpY,EAASwR,KAC7CA,KAAK7X,KAAOqG,EAAS,IAAIA,EAAOrG,KAAMqG,GAAU,GAChDwR,KAAKxR,OAASA,EACdwR,KAAK04B,MAAQlqC,EAASA,EAAOkqC,MAAQ,EAAI,EACzC,IAAK,IAAIhgC,EAAI,EAAGA,EAAIsH,KAAK7X,KAAK+J,OAAQwG,IAClCsH,KAAK7X,KAAKuQ,GAAGuhC,sBAAuB,EAEpCj6B,KAAK4G,OAAS5G,OACdA,KAAKw6B,MAAQ,IAAI7B,GACzB,CACA,gBAAAl1B,CAAiB/X,EAAM6X,GAInB,OAHKvD,KAAKk6B,cAAcppC,IAAIpF,IACxBsU,KAAKk6B,cAAcnpC,IAAIrF,EAAM,IAAI61B,IAE9BvhB,KAAKk6B,cAActpC,IAAIlF,GAAMyU,IAAIoD,EAC5C,CACA,eAAA43B,CAAgBzvC,KAAS0vC,GACrB,MAAMC,EAAsBr7B,KAAKk6B,cAActpC,IAAIlF,GACnD2vC,GAAuBA,EAAoB5Z,UAAU2Z,EACzD,CACA,YAAAE,CAAa5vC,GACT,OAAOsU,KAAKk6B,cAAcppC,IAAIpF,EAClC,CAIA,KAAAsE,CAAMD,EAAU8nC,EAAgB73B,KAAK4G,KAAKuzB,iBACtC,GAAIn6B,KAAKjQ,SACL,OErMhB,IAAsBgN,EFsMViD,KAAK+5B,OEtMKh9B,EFsMgBhN,aErMRwrC,YAAkC,QAApBx+B,EAAQoG,QFsMxCnD,KAAKjQ,SAAWA,EAChB,MAAM,SAAE3B,EAAQ,OAAEpB,EAAM,cAAEuB,GAAkByR,KAAKpI,QASjD,GARIrJ,IAAkBA,EAAcQ,SAChCR,EAAcyB,MAAMD,GAExBiQ,KAAK4G,KAAK4zB,MAAMr6B,IAAIH,MACpBA,KAAKxR,QAAUwR,KAAKxR,OAAOrF,SAASgX,IAAIH,MACpC63B,IAAkB7qC,GAAUoB,KAC5B4R,KAAK63B,eAAgB,GAErBsB,EAAsB,CACtB,IAAIqC,EACJ,MAAMC,EAAsB,IAAOz7B,KAAK4G,KAAKkzB,uBAAwB,EACrEX,EAAqBppC,GAAU,KAC3BiQ,KAAK4G,KAAKkzB,uBAAwB,EAClC0B,GAAeA,IACfA,EGlNpB,SAAev5B,EAAUy5B,GACrB,MAAMrwC,EAAQqX,YAAYC,MACpBg5B,EAAe,EAAGr6B,gBACpB,MAAMoa,EAAUpa,EAAYjW,EACxBqwB,GAAWggB,IACX56B,GAAY66B,GACZ15B,EAASyZ,EAAUggB,GACvB,EAGJ,OADA,GAAM34B,KAAK44B,GAAc,GAClB,IAAM76B,GAAY66B,EAC7B,CHuMkChiB,CAAM8hB,EAAqB,KACrC9I,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/C5yB,KAAKw6B,MAAMh7B,QAAQo8B,IACvB,GAER,CACIxtC,GACA4R,KAAK4G,KAAKi1B,mBAAmBztC,EAAU4R,OAGd,IAAzBA,KAAKpI,QAAQvP,SACbkG,IACCH,GAAYpB,IACbgT,KAAKyD,iBAAiB,aAAa,EAAGpC,QAAOoxB,mBAAkBqJ,2BAA0B9uC,OAAQ+uC,MAC7F,GAAI/7B,KAAKg8B,yBAGL,OAFAh8B,KAAKzX,YAASwD,OACdiU,KAAKi8B,oBAAiBlwC,GAI1B,MAAMmwC,EAAmBl8B,KAAKpI,QAAQ1Q,YAClCqH,EAAc+vB,wBACd6d,IACE,uBAAEC,EAAsB,0BAAEC,GAA+B9tC,EAAcoX,WAKvE22B,GAAiBt8B,KAAKu8B,eACvB1F,GAAiB72B,KAAKu8B,aAAcR,IACrCD,EAMEU,GAAgC/J,GAAoBqJ,EAC1D,GAAI97B,KAAKpI,QAAQ6kC,YACZz8B,KAAKw3B,YAAcx3B,KAAKw3B,WAAWznC,UACpCysC,GACC/J,IACI6J,IAAkBt8B,KAAK80B,kBAAoB,CAC5C90B,KAAKw3B,aACLx3B,KAAKi4B,aAAej4B,KAAKw3B,WACzBx3B,KAAKi4B,aAAaA,kBAAelsC,GAErCiU,KAAK08B,mBAAmBr7B,EAAOm7B,GAC/B,MAAMG,EAAmB,IAClB9c,GAAmBqc,EAAkB,UACxCjiB,OAAQmiB,EACRjiB,WAAYkiB,IAEZ9tC,EAAc62B,oBACdplB,KAAKpI,QAAQ6kC,cACbE,EAAiBhjB,MAAQ,EACzBgjB,EAAiBnqC,MAAO,GAE5BwN,KAAKsjB,eAAeqZ,EACxB,MAOSlK,GACDmJ,GAAgB57B,MAEhBA,KAAK+0B,UAAY/0B,KAAKpI,QAAQgxB,gBAC9B5oB,KAAKpI,QAAQgxB,iBAGrB5oB,KAAKu8B,aAAeR,CAAS,GAGzC,CACA,OAAA9rC,GACI+P,KAAKpI,QAAQxJ,UAAY4R,KAAKs0B,aAC9Bt0B,KAAK4G,KAAK4zB,MAAMl6B,OAAON,MACvB,MAAMy0B,EAAQz0B,KAAK00B,WACnBD,GAASA,EAAMn0B,OAAON,MACtBA,KAAKxR,QAAUwR,KAAKxR,OAAOrF,SAASsX,OAAOT,MAC3CA,KAAKjQ,cAAWhE,EAChB+U,GAAYd,KAAKu6B,iBACrB,CAEA,WAAAqC,GACI58B,KAAK65B,uBAAwB,CACjC,CACA,aAAAgD,GACI78B,KAAK65B,uBAAwB,CACjC,CACA,eAAAiD,GACI,OAAO98B,KAAK65B,uBAAyB75B,KAAK85B,qBAC9C,CACA,sBAAAkC,GACI,OAAQh8B,KAAKmvB,oBACRnvB,KAAKxR,QAAUwR,KAAKxR,OAAOwtC,2BAC5B,CACR,CAEA,WAAAe,GACQ/8B,KAAK88B,oBAET98B,KAAK43B,YAAa,EAClB53B,KAAKw6B,OAASx6B,KAAKw6B,MAAMh7B,QAAQw9B,IACjCh9B,KAAKw5B,cACT,CACA,oBAAAyD,GACI,MAAM,cAAE1uC,GAAkByR,KAAKpI,QAC/B,OAAOrJ,GAAiBA,EAAcoX,WAAW9N,iBACrD,CACA,UAAAy8B,CAAW4I,GAAwB,GAE/B,GADAl9B,KAAK4G,KAAKuzB,iBAAkB,EACxBn6B,KAAK4G,KAAKk2B,kBAEV,YADA98B,KAAKpI,QAAQgxB,gBAAkB5oB,KAAKpI,QAAQgxB,kBAIhD,IADC5oB,KAAK4G,KAAKgxB,YAAc53B,KAAK4G,KAAKm2B,cAC/B/8B,KAAK63B,cACL,OACJ73B,KAAK63B,eAAgB,EACrB,IAAK,IAAIn/B,EAAI,EAAGA,EAAIsH,KAAK7X,KAAK+J,OAAQwG,IAAK,CACvC,MAAM2M,EAAOrF,KAAK7X,KAAKuQ,GACvB2M,EAAK40B,sBAAuB,EAC5B50B,EAAK4sB,aAAa,YACd5sB,EAAKzN,QAAQ6kC,YACbp3B,EAAKivB,YAAW,EAExB,CACA,MAAM,SAAElmC,EAAQ,OAAEpB,GAAWgT,KAAKpI,QAClC,QAAiB7L,IAAbqC,IAA2BpB,EAC3B,OACJ,MAAM6K,EAAoBmI,KAAKi9B,uBAC/Bj9B,KAAKm9B,2BAA6BtlC,EAC5BA,EAAkBmI,KAAKrI,aAAc,SACrC5L,EACNiU,KAAKo9B,iBACLF,GAAyBl9B,KAAKm7B,gBAAgB,aAClD,CACA,MAAAjsC,GACI8Q,KAAKo6B,iBAAkB,EAKvB,GAJyBp6B,KAAK88B,kBAQ1B,OAHA98B,KAAK68B,gBACL78B,KAAKs6B,yBACLt6B,KAAKw6B,MAAMh7B,QAAQ69B,IAGlBr9B,KAAK43B,YACN53B,KAAKw6B,MAAMh7B,QAAQ89B,IAEvBt9B,KAAK43B,YAAa,EAIlB53B,KAAKw6B,MAAMh7B,QAAQ+9B,IAKnBv9B,KAAKw6B,MAAMh7B,QAAQ0yB,IAKnBlyB,KAAKw6B,MAAMh7B,QAAQg+B,IACnBx9B,KAAKs6B,oBAML,MAAM33B,EAAMD,YAAYC,MACxB5B,GAAUM,MAAQ3O,EAAM,EAAG,IAAO,GAAIiQ,EAAM5B,GAAUO,WACtDP,GAAUO,UAAYqB,EACtB5B,GAAUQ,cAAe,EACzBP,GAAM9R,OAAOkR,QAAQW,IACrBC,GAAMy8B,UAAUr9B,QAAQW,IACxBC,GAAM3R,OAAO+Q,QAAQW,IACrBA,GAAUQ,cAAe,CAC7B,CACA,SAAA0yB,GACSj0B,KAAKo6B,kBACNp6B,KAAKo6B,iBAAkB,EACvBvF,gBAAe,IAAM70B,KAAK9Q,WAElC,CACA,iBAAAorC,GACIt6B,KAAKw6B,MAAMh7B,QAAQk+B,IACnB19B,KAAKk7B,YAAY17B,QAAQm+B,GAC7B,CACA,wBAAAC,GACI,GAAMH,UAAUz9B,KAAKu6B,kBAAkB,GAAO,EAClD,CACA,yBAAArF,GAMI,GAAM9S,YAAW,KACTpiB,KAAK63B,cACL73B,KAAK4G,KAAKqtB,YAGVj0B,KAAK4G,KAAKyzB,mBACd,GAER,CAIA,cAAA+C,IACQp9B,KAAK03B,UAAa13B,KAAKjQ,WAE3BiQ,KAAK03B,SAAW13B,KAAK69B,UACzB,CACA,YAAA3L,GACI,IAAKlyB,KAAKjQ,SACN,OAGJ,GADAiQ,KAAKiyB,iBACCjyB,KAAKpI,QAAQkmC,qBAAuB99B,KAAK+0B,UAC1C/0B,KAAK63B,eACN,OASJ,GAAI73B,KAAKw3B,aAAex3B,KAAKw3B,WAAWznC,SACpC,IAAK,IAAI2I,EAAI,EAAGA,EAAIsH,KAAK7X,KAAK+J,OAAQwG,IAAK,CAC1BsH,KAAK7X,KAAKuQ,GAClBu5B,cACT,CAEJ,MAAM8L,EAAa/9B,KAAKhT,OACxBgT,KAAKhT,OAASgT,KAAK69B,SAAQ,GAC3B79B,KAAKg+B,gBAAkBzR,KACvBvsB,KAAK63B,eAAgB,EACrB73B,KAAKozB,qBAAkBrnC,EACvBiU,KAAKm7B,gBAAgB,UAAWn7B,KAAKhT,OAAOsiC,WAC5C,MAAM,cAAE/gC,GAAkByR,KAAKpI,QAC/BrJ,GACIA,EAAckzB,OAAO,gBAAiBzhB,KAAKhT,OAAOsiC,UAAWyO,EAAaA,EAAWzO,eAAYvjC,EACzG,CACA,YAAAkmC,CAAagM,EAAQ,WACjB,IAAIC,EAAmBtyC,QAAQoU,KAAKpI,QAAQumC,cAAgBn+B,KAAKjQ,UAC7DiQ,KAAK+wB,QACL/wB,KAAK+wB,OAAOyI,cAAgBx5B,KAAK4G,KAAK4yB,aACtCx5B,KAAK+wB,OAAOkN,QAAUA,IACtBC,GAAmB,GAEnBA,IACAl+B,KAAK+wB,OAAS,CACVyI,YAAax5B,KAAK4G,KAAK4yB,YACvByE,QACAG,OAAQ9E,EAAkBt5B,KAAKjQ,UAC/ByK,OAAQ6+B,EAAcr5B,KAAKjQ,WAGvC,CACA,cAAAwpC,GACI,IAAKA,EACD,OACJ,MAAM8E,EAAmBr+B,KAAK63B,eAAiB73B,KAAKi6B,qBAC9CqE,EAAgBt+B,KAAKozB,kBAAoBwD,GAAY52B,KAAKozB,iBAC1Dv7B,EAAoBmI,KAAKi9B,uBACzBsB,EAAyB1mC,EACzBA,EAAkBmI,KAAKrI,aAAc,SACrC5L,EACAyyC,EAA8BD,IAA2Bv+B,KAAKm9B,2BAChEkB,IACCC,GACGrmC,GAAa+H,KAAKrI,eAClB6mC,KACJjF,EAAev5B,KAAKjQ,SAAUwuC,GAC9Bv+B,KAAKi6B,sBAAuB,EAC5Bj6B,KAAKg3B,iBAEb,CACA,OAAA6G,CAAQY,GAAkB,GACtB,MAAMC,EAAU1+B,KAAKgxB,iBACrB,IAAI1B,EAAYtvB,KAAK2+B,oBAAoBD,GAi9BrD,IAAkBvR,EAv8BN,OAJIsR,IACAnP,EAAYtvB,KAAKy+B,gBAAgBnP,IA28B7CsP,IADczR,EAx8BGmC,GAy8BHz9B,GACd+sC,GAAUzR,EAAIr7B,GAz8BC,CACH0nC,YAAax5B,KAAK4G,KAAK4yB,YACvBqF,YAAaH,EACbpP,YACA33B,aAAc,CAAC,EACfoB,OAAQiH,KAAK5P,GAErB,CACA,cAAA4gC,GACI,MAAM,cAAEziC,GAAkByR,KAAKpI,QAC/B,IAAKrJ,EACD,OAAOg+B,KACX,MAAMY,EAAM5+B,EAAcy/B,sBAEpB,OAAE+C,GAAW/wB,KAAK4G,KAKxB,OAJImqB,IACAxD,GAAcJ,EAAIt7B,EAAGk/B,EAAOv2B,OAAO3I,GACnC07B,GAAcJ,EAAIr7B,EAAGi/B,EAAOv2B,OAAO1I,IAEhCq7B,CACX,CACA,mBAAAwR,CAAoBxR,GAChB,MAAM2R,EAAmBvS,KACzB4J,GAAY2I,EAAkB3R,GAK9B,IAAK,IAAIz0B,EAAI,EAAGA,EAAIsH,KAAK7X,KAAK+J,OAAQwG,IAAK,CACvC,MAAM2M,EAAOrF,KAAK7X,KAAKuQ,IACjB,OAAEq4B,EAAM,QAAEn5B,GAAYyN,EAC5B,GAAIA,IAASrF,KAAK4G,MAAQmqB,GAAUn5B,EAAQumC,aAAc,CAKtD,GAAIpN,EAAOqN,OAAQ,CACfjI,GAAY2I,EAAkB3R,GAC9B,MAAQ4D,OAAQgO,GAAe/+B,KAAK4G,KAKhCm4B,IACAxR,GAAcuR,EAAiBjtC,GAAIktC,EAAWvkC,OAAO3I,GACrD07B,GAAcuR,EAAiBhtC,GAAIitC,EAAWvkC,OAAO1I,GAE7D,CACAy7B,GAAcuR,EAAiBjtC,EAAGk/B,EAAOv2B,OAAO3I,GAChD07B,GAAcuR,EAAiBhtC,EAAGi/B,EAAOv2B,OAAO1I,EACpD,CACJ,CACA,OAAOgtC,CACX,CACA,cAAAE,CAAe7R,EAAK8R,GAAgB,GAChC,MAAMC,EAAiB3S,KACvB4J,GAAY+I,EAAgB/R,GAC5B,IAAK,IAAIz0B,EAAI,EAAGA,EAAIsH,KAAK7X,KAAK+J,OAAQwG,IAAK,CACvC,MAAM2M,EAAOrF,KAAK7X,KAAKuQ,IAClBumC,GACD55B,EAAKzN,QAAQumC,cACb94B,EAAK0rB,QACL1rB,IAASA,EAAKuB,MACdmnB,GAAamR,EAAgB,CACzBrtC,GAAIwT,EAAK0rB,OAAOv2B,OAAO3I,EACvBC,GAAIuT,EAAK0rB,OAAOv2B,OAAO1I,IAG1BmG,GAAaoN,EAAK1N,eAEvBo2B,GAAamR,EAAgB75B,EAAK1N,aACtC,CAIA,OAHIM,GAAa+H,KAAKrI,eAClBo2B,GAAamR,EAAgBl/B,KAAKrI,cAE/BunC,CACX,CACA,eAAAT,CAAgBtR,GACZ,MAAMgS,EAAsB5S,KAC5B4J,GAAYgJ,EAAqBhS,GACjC,IAAK,IAAIz0B,EAAI,EAAGA,EAAIsH,KAAK7X,KAAK+J,OAAQwG,IAAK,CACvC,MAAM2M,EAAOrF,KAAK7X,KAAKuQ,GACvB,IAAK2M,EAAKtV,SACN,SACJ,IAAKkI,GAAaoN,EAAK1N,cACnB,SACJg1B,GAAStnB,EAAK1N,eAAiB0N,EAAK+3B,iBACpC,MAAM1G,EAAYnK,KAElB4J,GAAYO,EADIrxB,EAAK2rB,kBAErByF,GAAoB0I,EAAqB95B,EAAK1N,aAAc0N,EAAKqyB,SAAWryB,EAAKqyB,SAASpI,eAAYvjC,EAAW2qC,EACrH,CAIA,OAHIz+B,GAAa+H,KAAKrI,eAClB8+B,GAAoB0I,EAAqBn/B,KAAKrI,cAE3CwnC,CACX,CACA,cAAAC,CAAe/9B,GACXrB,KAAKq/B,YAAch+B,EACnBrB,KAAK4G,KAAKg3B,2BACV59B,KAAK05B,mBAAoB,CAC7B,CACA,UAAAvF,CAAWv8B,GACPoI,KAAKpI,QAAU,IACRoI,KAAKpI,WACLA,EACHkgC,eAAiC/rC,IAAtB6L,EAAQkgC,WAA0BlgC,EAAQkgC,UAE7D,CACA,iBAAAuF,GACIr9B,KAAK+wB,YAAShlC,EACdiU,KAAKhT,YAASjB,EACdiU,KAAK03B,cAAW3rC,EAChBiU,KAAKm9B,gCAA6BpxC,EAClCiU,KAAKq/B,iBAActzC,EACnBiU,KAAKzX,YAASwD,EACdiU,KAAK63B,eAAgB,CACzB,CACA,kCAAAyH,GACSt/B,KAAKu/B,gBAQNv/B,KAAKu/B,eAAeC,2BACpBz+B,GAAUO,WACVtB,KAAKu/B,eAAe7E,oBAAmB,EAE/C,CACA,kBAAAA,CAAmB+E,GAAqB,GACpC,IAAIplC,EAMJ,MAAM68B,EAAOl3B,KAAK0/B,UAClB1/B,KAAK05B,oBAAsB15B,KAAK05B,kBAAoBxC,EAAKwC,mBACzD15B,KAAK45B,mBAAqB55B,KAAK45B,iBAAmB1C,EAAK0C,kBACvD55B,KAAK25B,0BAA4B35B,KAAK25B,wBAA0BzC,EAAKyC,yBACrE,MAAMgG,EAAW/zC,QAAQoU,KAAKi4B,eAAiBj4B,OAASk3B,EAUxD,KALkBuI,GACbE,GAAY3/B,KAAK25B,yBAClB35B,KAAK05B,oBACmB,QAAtBr/B,EAAK2F,KAAKxR,cAA2B,IAAP6L,OAAgB,EAASA,EAAGq/B,oBAC5D15B,KAAK4/B,gCAEL,OACJ,MAAM,OAAE5yC,EAAM,SAAEoB,GAAa4R,KAAKpI,QAIlC,GAAKoI,KAAKhT,SAAYA,GAAUoB,GAAhC,CASA,GAPA4R,KAAKw/B,yBAA2Bz+B,GAAUO,WAOrCtB,KAAKq/B,cAAgBr/B,KAAKi8B,eAAgB,CAE3C,MAAMsD,EAAiBv/B,KAAK6/B,6BACxBN,GACAA,EAAevyC,QACY,IAA3BgT,KAAKi7B,mBACLj7B,KAAKu/B,eAAiBA,EACtBv/B,KAAKs/B,qCACLt/B,KAAKi8B,eAAiB1P,KACtBvsB,KAAK8/B,qBAAuBvT,KAC5Bb,GAAqB1rB,KAAK8/B,qBAAsB9/B,KAAKhT,OAAOsiC,UAAWiQ,EAAevyC,OAAOsiC,WAC7F6G,GAAYn2B,KAAKi8B,eAAgBj8B,KAAK8/B,uBAGtC9/B,KAAKu/B,eAAiBv/B,KAAKi8B,oBAAiBlwC,CAEpD,CAKA,GAAKiU,KAAKi8B,gBAAmBj8B,KAAKq/B,YAAlC,CvBtqBZ,IAAyB92C,EAAQijC,EAAUh9B,EuB+sB/B,GApCKwR,KAAKzX,SACNyX,KAAKzX,OAASgkC,KACdvsB,KAAK+/B,qBAAuBxT,MAK5BvsB,KAAKi8B,gBACLj8B,KAAK8/B,sBACL9/B,KAAKu/B,gBACLv/B,KAAKu/B,eAAeh3C,QACpByX,KAAKs/B,qCvBtrBI/2C,EuBurBOyX,KAAKzX,OvBvrBJijC,EuBurBYxrB,KAAKi8B,evBvrBPztC,EuBurBuBwR,KAAKu/B,eAAeh3C,OvBtrBlFgjC,GAAiBhjC,EAAOsJ,EAAG25B,EAAS35B,EAAGrD,EAAOqD,GAC9C05B,GAAiBhjC,EAAOuJ,EAAG05B,EAAS15B,EAAGtD,EAAOsD,IuB0rB7BkO,KAAKq/B,aACNzzC,QAAQoU,KAAKi4B,cAEbj4B,KAAKzX,OAASyX,KAAKg/B,eAAeh/B,KAAKhT,OAAOsiC,WAG9C6G,GAAYn2B,KAAKzX,OAAQyX,KAAKhT,OAAOsiC,WAEzCpC,GAAcltB,KAAKzX,OAAQyX,KAAKq/B,cAMhClJ,GAAYn2B,KAAKzX,OAAQyX,KAAKhT,OAAOsiC,WAKrCtvB,KAAK4/B,+BAAgC,CACrC5/B,KAAK4/B,gCAAiC,EACtC,MAAML,EAAiBv/B,KAAK6/B,6BACxBN,GACA3zC,QAAQ2zC,EAAetH,gBACnBrsC,QAAQoU,KAAKi4B,gBAChBsH,EAAe3nC,QAAQumC,cACxBoB,EAAeh3C,QACY,IAA3ByX,KAAKi7B,mBACLj7B,KAAKu/B,eAAiBA,EACtBv/B,KAAKs/B,qCACLt/B,KAAKi8B,eAAiB1P,KACtBvsB,KAAK8/B,qBAAuBvT,KAC5Bb,GAAqB1rB,KAAK8/B,qBAAsB9/B,KAAKzX,OAAQg3C,EAAeh3C,QAC5E4tC,GAAYn2B,KAAKi8B,eAAgBj8B,KAAK8/B,uBAGtC9/B,KAAKu/B,eAAiBv/B,KAAKi8B,oBAAiBlwC,CAEpD,CAIA+sC,GAAoBE,sBA/DV,CA9BA,CA8Fd,CACA,0BAAA6G,GACI,GAAK7/B,KAAKxR,SACNm+B,GAAS3sB,KAAKxR,OAAOmJ,gBACrBi1B,GAAe5sB,KAAKxR,OAAOmJ,cAG/B,OAAIqI,KAAKxR,OAAOwxC,eACLhgC,KAAKxR,OAGLwR,KAAKxR,OAAOqxC,4BAE3B,CACA,YAAAG,GACI,OAAOp0C,SAASoU,KAAKi8B,gBACjBj8B,KAAKq/B,aACLr/B,KAAKpI,QAAQ6kC,aACbz8B,KAAKhT,OACb,CACA,cAAA2tC,GACI,IAAItgC,EACJ,MAAM68B,EAAOl3B,KAAK0/B,UACZC,EAAW/zC,QAAQoU,KAAKi4B,eAAiBj4B,OAASk3B,EACxD,IAAI+I,GAAU,EAuBd,IAlBIjgC,KAAK05B,oBAA6C,QAAtBr/B,EAAK2F,KAAKxR,cAA2B,IAAP6L,OAAgB,EAASA,EAAGq/B,sBACtFuG,GAAU,GAMVN,IACC3/B,KAAK25B,yBAA2B35B,KAAK45B,oBACtCqG,GAAU,GAMVjgC,KAAKw/B,2BAA6Bz+B,GAAUO,YAC5C2+B,GAAU,GAEVA,EACA,OACJ,MAAM,OAAEjzC,EAAM,SAAEoB,GAAa4R,KAAKpI,QAWlC,GANAoI,KAAKy5B,gBAAkB7tC,QAASoU,KAAKxR,QAAUwR,KAAKxR,OAAOirC,iBACvDz5B,KAAK80B,kBACL90B,KAAKkgC,kBACJlgC,KAAKy5B,kBACNz5B,KAAKq/B,YAAcr/B,KAAKi8B,oBAAiBlwC,IAExCiU,KAAKhT,SAAYA,IAAUoB,EAC5B,OAKJ+nC,GAAYn2B,KAAKg+B,gBAAiBh+B,KAAKhT,OAAOsiC,WAI9C,MAAM6Q,EAAiBngC,KAAKmzB,UAAUthC,EAChCuuC,EAAiBpgC,KAAKmzB,UAAUrhC,GjBjyBlD,SAAyBq7B,EAAKgG,EAAWkN,EAAUC,GAAqB,GACpE,MAAMC,EAAaF,EAASnuC,OAC5B,IAAKquC,EACD,OAGJ,IAAIl7B,EACAhE,EAFJ8xB,EAAUthC,EAAIshC,EAAUrhC,EAAI,EAG5B,IAAK,IAAI4G,EAAI,EAAGA,EAAI6nC,EAAY7nC,IAAK,CACjC2M,EAAOg7B,EAAS3nC,GAChB2I,EAAQgE,EAAK+tB,gBAKb,MAAMrjC,EAAWsV,EAAKtV,SAClBA,GACAA,EAAS+H,OACkB,aAA3B/H,EAAS+H,MAAM0oC,UAGfF,GACAj7B,EAAKzN,QAAQumC,cACb94B,EAAK0rB,QACL1rB,IAASA,EAAKuB,MACdmnB,GAAaZ,EAAK,CACdt7B,GAAIwT,EAAK0rB,OAAOv2B,OAAO3I,EACvBC,GAAIuT,EAAK0rB,OAAOv2B,OAAO1I,IAG3BuP,IAEA8xB,EAAUthC,GAAKwP,EAAMxP,EAAEqB,MACvBigC,EAAUrhC,GAAKuP,EAAMvP,EAAEoB,MAEvBg6B,GAAcC,EAAK9rB,IAEnBi/B,GAAsBroC,GAAaoN,EAAK1N,eACxCo2B,GAAaZ,EAAK9nB,EAAK1N,cAE/B,CAKAw7B,EAAUthC,EAAIu7B,GAAc+F,EAAUthC,GACtCshC,EAAUrhC,EAAIs7B,GAAc+F,EAAUrhC,EAC1C,CiBuvBY2uC,CAAgBzgC,KAAKg+B,gBAAiBh+B,KAAKmzB,UAAWnzB,KAAK7X,KAAMw3C,IAK7DzI,EAAKlqC,QACJkqC,EAAK3uC,QACgB,IAArByX,KAAKmzB,UAAUthC,GAAgC,IAArBmO,KAAKmzB,UAAUrhC,IAC1ColC,EAAK3uC,OAAS2uC,EAAKlqC,OAAOsiC,WAE9B,MAAM,OAAE/mC,GAAW2uC,EACnB,IAAK3uC,EAWD,YALIyX,KAAK0gC,sBACL1gC,KAAKozB,gBAAkB9G,KACvBtsB,KAAK0gC,oBAAsB,OAC3B1gC,KAAKg3B,mBAIRh3B,KAAKozB,kBACNpzB,KAAKozB,gBAAkB9G,KACvBtsB,KAAK2gC,6BAA+BrU,MAExC,MAAMsU,EAA0B5gC,KAAK0gC,oBAUrCpV,GAAatrB,KAAKozB,gBAAiBpzB,KAAKg+B,gBAAiBz1C,EAAQyX,KAAKrI,cACtEqI,KAAK0gC,oBAAsBvI,GAAyBn4B,KAAKozB,gBAAiBpzB,KAAKmzB,WAC3EnzB,KAAK0gC,sBAAwBE,GAC7B5gC,KAAKmzB,UAAUthC,IAAMsuC,GACrBngC,KAAKmzB,UAAUrhC,IAAMsuC,IACrBpgC,KAAK+6B,cAAe,EACpB/6B,KAAKg3B,iBACLh3B,KAAKm7B,gBAAgB,mBAAoB5yC,IAK7CuwC,GAAoBG,wBACxB,CACA,IAAAlB,GACI/3B,KAAKg7B,WAAY,CAErB,CACA,IAAAzD,GACIv3B,KAAKg7B,WAAY,CAErB,CACA,cAAAhE,CAAe6J,GAAY,GAEvB,GADA7gC,KAAKpI,QAAQo/B,gBAAkBh3B,KAAKpI,QAAQo/B,iBACxC6J,EAAW,CACX,MAAMpM,EAAQz0B,KAAK00B,WACnBD,GAASA,EAAMuC,gBACnB,CACIh3B,KAAKi4B,eAAiBj4B,KAAKi4B,aAAaloC,WACxCiQ,KAAKi4B,kBAAelsC,EAE5B,CACA,kBAAA2wC,CAAmBr7B,EAAOm7B,GAA+B,GACrD,MAAM9E,EAAW13B,KAAK03B,SAChBoJ,EAAuBpJ,EACvBA,EAAS//B,aACT,CAAC,EACDopC,EAAc,IAAK/gC,KAAKrI,cACxB0nC,EAAc/S,KACftsB,KAAKu/B,gBACLv/B,KAAKu/B,eAAe3nC,QAAQ6kC,aAC7Bz8B,KAAKi8B,eAAiBj8B,KAAK8/B,0BAAuB/zC,GAEtDiU,KAAK4/B,gCAAkCpD,EACvC,MAAMwE,EAAiBzU,KAGjB0U,GAFiBvJ,EAAWA,EAAS3+B,YAAShN,MAC/BiU,KAAKhT,OAASgT,KAAKhT,OAAO+L,YAAShN,GAElD0oC,EAAQz0B,KAAK00B,WACbwM,GAAgBzM,GAASA,EAAME,QAAQziC,QAAU,EACjDivC,EAAyBv1C,QAAQq1C,IAClCC,IAC0B,IAA3BlhC,KAAKpI,QAAQkgC,YACZ93B,KAAK7X,KAAKsD,KAAK21C,KAEpB,IAAIC,EADJrhC,KAAKi7B,kBAAoB,EAEzBj7B,KAAKshC,eAAkBpmC,IACnB,MAAM0U,EAAW1U,EAAS,ILr6B1C,IAAmBoJ,EAAGC,EKy6CNoN,EAAQhC,EAAM5nB,EAAIgC,EAngBlBw3C,GAAalC,EAAYxtC,EAAGwP,EAAMxP,EAAG+d,GACrC2xB,GAAalC,EAAYvtC,EAAGuP,EAAMvP,EAAG8d,GACrC5P,KAAKo/B,eAAeC,GAChBr/B,KAAKi8B,gBACLj8B,KAAK8/B,sBACL9/B,KAAKhT,QACLgT,KAAKu/B,gBACLv/B,KAAKu/B,eAAevyC,SACpB0+B,GAAqBsV,EAAgBhhC,KAAKhT,OAAOsiC,UAAWtvB,KAAKu/B,eAAevyC,OAAOsiC,WA2f3F3d,EA1fW3R,KAAKi8B,eA0fRtsB,EA1fwB3P,KAAK8/B,qBA0fvB/3C,EA1f6Ci5C,EA0fzCj3C,EA1fyD6lB,EA2fvF4xB,GAAQ7vB,EAAO9f,EAAG8d,EAAK9d,EAAG9J,EAAG8J,EAAG9H,GAChCy3C,GAAQ7vB,EAAO7f,EAAG6d,EAAK7d,EAAG/J,EAAG+J,EAAG/H,GAvfZs3C,ILp7BL/8B,EKq7BetE,KAAKi8B,eLr7BjB13B,EKq7BiC88B,ELp7B3C/8B,EAAEzS,EAAEc,MAAQ4R,EAAE1S,EAAEc,KACpB2R,EAAEzS,EAAEe,MAAQ2R,EAAE1S,EAAEe,KAChB0R,EAAExS,EAAEa,MAAQ4R,EAAEzS,EAAEa,KAChB2R,EAAExS,EAAEc,MAAQ2R,EAAEzS,EAAEc,OKk7BAoN,KAAK05B,mBAAoB,GAExB2H,IACDA,EAAqB9U,MACzB4J,GAAYkL,EAAoBrhC,KAAKi8B,iBAErCgF,IACAjhC,KAAK23B,gBAAkBoJ,ER37B3C,SAAmBx4C,EAAQk5C,EAAQvK,EAAMtnB,EAAUuxB,EAAwBD,GACnEC,GACA54C,EAAO0O,QAAUmH,GAAI,OAEJrS,IAAjBmrC,EAAKjgC,QAAwBigC,EAAKjgC,QAAU,EAAG6+B,GAAgBlmB,IAC/DrnB,EAAOm5C,YAActjC,QAAuBrS,IAAnB01C,EAAOxqC,QAAwBwqC,EAAOxqC,QAAU,EAAG,EAAG++B,GAAiBpmB,KAE3FsxB,IACL34C,EAAO0O,QAAUmH,QAAuBrS,IAAnB01C,EAAOxqC,QAAwBwqC,EAAOxqC,QAAU,OAAoBlL,IAAjBmrC,EAAKjgC,QAAwBigC,EAAKjgC,QAAU,EAAG2Y,IAK3H,IAAK,IAAIlX,EAAI,EAAGA,EAAI+8B,GAAY/8B,IAAK,CACjC,MAAMipC,EAAc,SAASnM,GAAQ98B,WACrC,IAAIkpC,EAAehM,GAAU6L,EAAQE,GACjCE,EAAajM,GAAUsB,EAAMyK,QACZ51C,IAAjB61C,QAA6C71C,IAAf81C,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACAlM,GAAKiM,KAAkBjM,GAAKkM,IAE5Bt5C,EAAOo5C,GAAe9uC,KAAKD,IAAIwL,GAAIs3B,GAASkM,GAAelM,GAASmM,GAAajyB,GAAW,IACxF7b,EAAQ5C,KAAK0wC,IAAe9tC,EAAQ5C,KAAKywC,MACzCr5C,EAAOo5C,IAAgB,MAI3Bp5C,EAAOo5C,GAAeE,EAE9B,EAIIJ,EAAOvrC,QAAUghC,EAAKhhC,UACtB3N,EAAO2N,OAASkI,GAAIqjC,EAAOvrC,QAAU,EAAGghC,EAAKhhC,QAAU,EAAG0Z,GAElE,CQo5BoBkyB,CAAUf,EAAaD,EAAsB9gC,KAAKrI,aAAciY,EAAUuxB,EAAwBD,IAEtGlhC,KAAK4G,KAAKg3B,2BACV59B,KAAKg3B,iBACLh3B,KAAKi7B,kBAAoBrrB,CAAQ,EAErC5P,KAAKshC,eAAethC,KAAKpI,QAAQ6kC,WAAa,IAAO,EACzD,CACA,cAAAnZ,CAAe1rB,GACXoI,KAAKm7B,gBAAgB,kBACrBn7B,KAAK80B,kBAAoB90B,KAAK80B,iBAAiB7b,OAC3CjZ,KAAKi4B,cAAgBj4B,KAAKi4B,aAAanD,kBACvC90B,KAAKi4B,aAAanD,iBAAiB7b,OAEnCjZ,KAAKkgC,mBACLp/B,GAAYd,KAAKkgC,kBACjBlgC,KAAKkgC,sBAAmBn0C,GAO5BiU,KAAKkgC,iBAAmB,GAAMhxC,QAAO,KACjCyjC,GAAsBC,wBAAyB,EAC/C5yB,KAAK80B,iBI39BrB,SAA4BjlC,EAAOqkB,EAAWtc,GAC1C,MAAMmqC,EAAgBrwC,EAAc7B,GAASA,EAAQg0B,GAAYh0B,GAEjE,OADAkyC,EAAc12C,MAAMy0B,GAAmB,GAAIiiB,EAAe7tB,EAAWtc,IAC9DmqC,EAAcv1C,SACzB,CJu9BwCw1C,CAAmB,EAh8BnC,IAg8BuD,IACxDpqC,EACHwiB,SAAWlf,IACP8E,KAAKshC,eAAepmC,GACpBtD,EAAQwiB,UAAYxiB,EAAQwiB,SAASlf,EAAO,EAEhDif,WAAY,KACRviB,EAAQuiB,YAAcviB,EAAQuiB,aAC9Bna,KAAKiiC,mBAAmB,IAG5BjiC,KAAKi4B,eACLj4B,KAAKi4B,aAAanD,iBAAmB90B,KAAK80B,kBAE9C90B,KAAKkgC,sBAAmBn0C,CAAS,GAEzC,CACA,iBAAAk2C,GACQjiC,KAAKi4B,eACLj4B,KAAKi4B,aAAanD,sBAAmB/oC,EACrCiU,KAAKi4B,aAAaR,qBAAkB1rC,GAExC,MAAM0oC,EAAQz0B,KAAK00B,WACnBD,GAASA,EAAMuD,wBACfh4B,KAAKi4B,aACDj4B,KAAK80B,iBACD90B,KAAK23B,qBACD5rC,EACZiU,KAAKm7B,gBAAgB,oBACzB,CACA,eAAAS,GACQ57B,KAAK80B,mBACL90B,KAAKshC,gBAAkBthC,KAAKshC,eAh+BpB,KAi+BRthC,KAAK80B,iBAAiB7b,QAE1BjZ,KAAKiiC,mBACT,CACA,uBAAAC,GACI,MAAMhL,EAAOl3B,KAAK0/B,UAClB,IAAI,qBAAEK,EAAoB,OAAEx3C,EAAM,OAAEyE,EAAM,aAAE2K,GAAiBu/B,EAC7D,GAAK6I,GAAyBx3C,GAAWyE,EAAzC,CAOA,GAAIgT,OAASk3B,GACTl3B,KAAKhT,QACLA,GACAm1C,GAA0BniC,KAAKpI,QAAQwqC,cAAepiC,KAAKhT,OAAOsiC,UAAWtiC,EAAOsiC,WAAY,CAChG/mC,EAASyX,KAAKzX,QAAUgkC,KACxB,MAAM8V,EAAUtX,GAAW/qB,KAAKhT,OAAOsiC,UAAUz9B,GACjDtJ,EAAOsJ,EAAEc,IAAMukC,EAAK3uC,OAAOsJ,EAAEc,IAC7BpK,EAAOsJ,EAAEe,IAAMrK,EAAOsJ,EAAEc,IAAM0vC,EAC9B,MAAMC,EAAUvX,GAAW/qB,KAAKhT,OAAOsiC,UAAUx9B,GACjDvJ,EAAOuJ,EAAEa,IAAMukC,EAAK3uC,OAAOuJ,EAAEa,IAC7BpK,EAAOuJ,EAAEc,IAAMrK,EAAOuJ,EAAEa,IAAM2vC,CAClC,CACAnM,GAAY4J,EAAsBx3C,GAMlCwlC,GAAagS,EAAsBpoC,GAOnC2zB,GAAatrB,KAAK2gC,6BAA8B3gC,KAAKg+B,gBAAiB+B,EAAsBpoC,EA/BlF,CAgCd,CACA,kBAAAkkC,CAAmBztC,EAAUiX,GACpBrF,KAAKk7B,YAAYpqC,IAAI1C,IACtB4R,KAAKk7B,YAAYnqC,IAAI3C,EAAU,IAAI2oC,IAEzB/2B,KAAKk7B,YAAYtqC,IAAIxC,GAC7B+R,IAAIkF,GACV,MAAM3G,EAAS2G,EAAKzN,QAAQ2qC,uBAC5Bl9B,EAAKkvB,QAAQ,CACTrtC,WAAYwX,EAASA,EAAOxX,gBAAa6E,EACzCurC,sBAAuB54B,GAAUA,EAAO8jC,4BAClC9jC,EAAO8jC,4BAA4Bn9B,QACnCtZ,GAEd,CACA,MAAAgpC,GACI,MAAMN,EAAQz0B,KAAK00B,WACnB,OAAOD,GAAQA,EAAMyC,OAASl3B,IAClC,CACA,OAAA0/B,GACI,IAAIrlC,EACJ,MAAM,SAAEjM,GAAa4R,KAAKpI,QAC1B,OAAOxJ,IAAuC,QAA1BiM,EAAK2F,KAAK00B,kBAA+B,IAAPr6B,OAAgB,EAASA,EAAG68B,OAAgBl3B,IACtG,CACA,WAAAyiC,GACI,IAAIpoC,EACJ,MAAM,SAAEjM,GAAa4R,KAAKpI,QAC1B,OAAOxJ,EAAsC,QAA1BiM,EAAK2F,KAAK00B,kBAA+B,IAAPr6B,OAAgB,EAASA,EAAG48B,cAAWlrC,CAChG,CACA,QAAA2oC,GACI,MAAM,SAAEtmC,GAAa4R,KAAKpI,QAC1B,GAAIxJ,EACA,OAAO4R,KAAK4G,KAAKs0B,YAAYtqC,IAAIxC,EACzC,CACA,OAAAmmC,EAAQ,WAAEyF,EAAU,WAAE9yC,EAAU,sBAAEowC,GAA2B,CAAC,GAC1D,MAAM7C,EAAQz0B,KAAK00B,WACfD,GACAA,EAAMF,QAAQv0B,KAAMs3B,GACpB0C,IACAh6B,KAAKozB,qBAAkBrnC,EACvBiU,KAAKg6B,YAAa,GAElB9yC,GACA8Y,KAAKm0B,WAAW,CAAEjtC,cAC1B,CACA,QAAAstC,GACI,MAAMC,EAAQz0B,KAAK00B,WACnB,QAAID,GACOA,EAAMD,SAASx0B,KAK9B,CACA,aAAAg9B,GACI,MAAM,cAAEzuC,GAAkByR,KAAKpI,QAC/B,IAAKrJ,EACD,OAEJ,IAAIm0C,GAAY,EAKhB,MAAM,aAAE/qC,GAAiBpJ,EAQzB,IAPIoJ,EAAazB,QACbyB,EAAaxB,SACbwB,EAAavB,SACbuB,EAAatB,WACbqsC,GAAY,IAGXA,EACD,OACJ,MAAMC,EAAc,CAAC,EAErB,IAAK,IAAIjqC,EAAI,EAAGA,EAAImgC,GAAc3mC,OAAQwG,IAAK,CAC3C,MAAM9P,EAAM,SAAWiwC,GAAcngC,GAEjCf,EAAa/O,KACb+5C,EAAY/5C,GAAO+O,EAAa/O,GAChC2F,EAAcq0C,eAAeh6C,EAAK,GAE1C,CAGA2F,EAAcc,SAEd,IAAK,MAAMzG,KAAO+5C,EACdp0C,EAAcq0C,eAAeh6C,EAAK+5C,EAAY/5C,IAIlD2F,EAAcyoC,gBAClB,CACA,mBAAA95B,CAAoBF,EAAY,CAAC,GAC7B,IAAI3C,EAAIyX,EAER,MAAM+wB,EAAS,CAAC,EAChB,IAAK7iC,KAAKjQ,UAAYiQ,KAAK+5B,MACvB,OAAO8I,EACX,IAAK7iC,KAAKg7B,UACN,MAAO,CAAE8H,WAAY,UAGrBD,EAAOC,WAAa,GAExB,MAAMjrC,EAAoBmI,KAAKi9B,uBAC/B,GAAIj9B,KAAKg6B,WAQL,OAPAh6B,KAAKg6B,YAAa,EAClB6I,EAAO5rC,QAAU,GACjB4rC,EAAOE,cACHxkC,GAAmBvB,EAAU+lC,gBAAkB,GACnDF,EAAOpwC,UAAYoF,EACbA,EAAkBmI,KAAKrI,aAAc,IACrC,OACCkrC,EAEX,MAAM3L,EAAOl3B,KAAK0/B,UAClB,IAAK1/B,KAAKozB,kBAAoBpzB,KAAKhT,SAAWkqC,EAAK3uC,OAAQ,CACvD,MAAMy6C,EAAc,CAAC,EAerB,OAdIhjC,KAAKpI,QAAQxJ,WACb40C,EAAY/rC,aACsBlL,IAA9BiU,KAAKrI,aAAaV,QACZ+I,KAAKrI,aAAaV,QAClB,EACV+rC,EAAYD,cACRxkC,GAAmBvB,EAAU+lC,gBAAkB,IAEnD/iC,KAAK+6B,eAAiB9iC,GAAa+H,KAAKrI,gBACxCqrC,EAAYvwC,UAAYoF,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACNmI,KAAK+6B,cAAe,GAEjBiI,CACX,CACA,MAAMC,EAAiB/L,EAAKS,iBAAmBT,EAAKv/B,aACpDqI,KAAKkiC,0BACLW,EAAOpwC,UAAY0lC,GAAyBn4B,KAAK2gC,6BAA8B3gC,KAAKmzB,UAAW8P,GAC3FprC,IACAgrC,EAAOpwC,UAAYoF,EAAkBorC,EAAgBJ,EAAOpwC,YAEhE,MAAM,EAAEZ,EAAC,EAAEC,GAAMkO,KAAKozB,gBACtByP,EAAO7qC,gBAAkB,GAAc,IAAXnG,EAAE0I,WAA4B,IAAXzI,EAAEyI,YAC7C28B,EAAKS,gBAKLkL,EAAO5rC,QACHigC,IAASl3B,KACiG,QAAnG8R,EAAuC,QAAjCzX,EAAK4oC,EAAehsC,eAA4B,IAAPoD,EAAgBA,EAAK2F,KAAKrI,aAAaV,eAA4B,IAAP6a,EAAgBA,EAAK,EACjI9R,KAAKy3B,gBACDz3B,KAAKrI,aAAaV,QAClBgsC,EAAevB,YAO7BmB,EAAO5rC,QACHigC,IAASl3B,UACwBjU,IAA3Bk3C,EAAehsC,QACXgsC,EAAehsC,QACf,QAC2BlL,IAA/Bk3C,EAAevB,YACXuB,EAAevB,YACf,EAKlB,IAAK,MAAM94C,KAAOwI,EAAiB,CAC/B,QAA4BrF,IAAxBk3C,EAAer6C,GACf,SACJ,MAAM,QAAEqqC,EAAO,QAAEqC,GAAYlkC,EAAgBxI,GAOvCs6C,EAAiC,SAArBL,EAAOpwC,UACnBwwC,EAAer6C,GACfqqC,EAAQgQ,EAAer6C,GAAMsuC,GACnC,GAAI5B,EAAS,CACT,MAAM6N,EAAM7N,EAAQpjC,OACpB,IAAK,IAAIwG,EAAI,EAAGA,EAAIyqC,EAAKzqC,IACrBmqC,EAAOvN,EAAQ58B,IAAMwqC,CAE7B,MAEIL,EAAOj6C,GAAOs6C,CAEtB,CAYA,OANIljC,KAAKpI,QAAQxJ,WACby0C,EAAOE,cACH7L,IAASl3B,KACHzB,GAAmBvB,EAAU+lC,gBAAkB,GAC/C,QAEPF,CACX,CACA,aAAAnF,GACI19B,KAAKw3B,WAAax3B,KAAK03B,cAAW3rC,CACtC,CAEA,SAAAq3C,GACIpjC,KAAK4G,KAAK4zB,MAAMh7B,SAAS6F,IAAW,IAAIhL,EAAI,OAAwC,QAAhCA,EAAKgL,EAAKyvB,wBAAqC,IAAPz6B,OAAgB,EAASA,EAAG4e,MAAM,IAC9HjZ,KAAK4G,KAAK4zB,MAAMh7B,QAAQ69B,IACxBr9B,KAAK4G,KAAKs0B,YAAYx6B,OAC1B,EAER,CACA,SAASwxB,GAAa7sB,GAClBA,EAAK6sB,cACT,CACA,SAASsL,GAAmBn4B,GACxB,IAAIhL,EACJ,MAAMq9B,GAAuC,QAA1Br9B,EAAKgL,EAAKmyB,kBAA+B,IAAPn9B,OAAgB,EAASA,EAAGq9B,WAAaryB,EAAKqyB,SACnG,GAAIryB,EAAK0vB,UACL1vB,EAAKrY,QACL0qC,GACAryB,EAAKi2B,aAAa,aAAc,CAChC,MAAQhM,UAAWtiC,EAAQ6xC,YAAawE,GAAmBh+B,EAAKrY,QAC1D,cAAEo1C,GAAkB/8B,EAAKzN,QACzB+nC,EAAWjI,EAAS3+B,SAAWsM,EAAKrY,OAAO+L,OAG3B,SAAlBqpC,EACA5V,IAAUxB,IACN,MAAMsY,EAAe3D,EACfjI,EAASmH,YAAY7T,GACrB0M,EAASpI,UAAUtE,GACnB94B,EAAS64B,GAAWuY,GAC1BA,EAAa3wC,IAAM3F,EAAOg+B,GAAMr4B,IAChC2wC,EAAa1wC,IAAM0wC,EAAa3wC,IAAMT,CAAM,IAG3CiwC,GAA0BC,EAAe1K,EAASpI,UAAWtiC,IAClEw/B,IAAUxB,IACN,MAAMsY,EAAe3D,EACfjI,EAASmH,YAAY7T,GACrB0M,EAASpI,UAAUtE,GACnB94B,EAAS64B,GAAW/9B,EAAOg+B,IACjCsY,EAAa1wC,IAAM0wC,EAAa3wC,IAAMT,EAIlCmT,EAAK42B,iBAAmB52B,EAAKyvB,mBAC7BzvB,EAAKq0B,mBAAoB,EACzBr0B,EAAK42B,eAAejR,GAAMp4B,IACtByS,EAAK42B,eAAejR,GAAMr4B,IAAMT,EACxC,IAGR,MAAMqxC,EAAcjX,KACpBhB,GAAaiY,EAAav2C,EAAQ0qC,EAASpI,WAC3C,MAAMkU,EAAclX,KAChBqT,EACArU,GAAakY,EAAan+B,EAAK25B,eAAeqE,GAAgB,GAAO3L,EAASmH,aAG9EvT,GAAakY,EAAax2C,EAAQ0qC,EAASpI,WAE/C,MAAMmD,GAAoBmE,GAAY2M,GACtC,IAAIzH,GAA2B,EAC/B,IAAKz2B,EAAKmyB,WAAY,CAClB,MAAM+H,EAAiBl6B,EAAKw6B,6BAK5B,GAAIN,IAAmBA,EAAe/H,WAAY,CAC9C,MAAQE,SAAU+L,EAAgBz2C,OAAQ02C,GAAiBnE,EAC3D,GAAIkE,GAAkBC,EAAc,CAChC,MAAMC,EAAmBpX,KACzBb,GAAqBiY,EAAkBjM,EAASpI,UAAWmU,EAAenU,WAC1E,MAAM0R,EAAiBzU,KACvBb,GAAqBsV,EAAgBh0C,EAAQ02C,EAAapU,WACrDuH,GAAiB8M,EAAkB3C,KACpClF,GAA2B,GAE3ByD,EAAe3nC,QAAQ6kC,aACvBp3B,EAAK42B,eAAiB+E,EACtB37B,EAAKy6B,qBAAuB6D,EAC5Bt+B,EAAKk6B,eAAiBA,EAE9B,CACJ,CACJ,CACAl6B,EAAK81B,gBAAgB,YAAa,CAC9BnuC,SACA0qC,WACAr2B,MAAOmiC,EACPD,cACA9Q,mBACAqJ,4BAER,MACK,GAAIz2B,EAAK0vB,SAAU,CACpB,MAAM,eAAEnM,GAAmBvjB,EAAKzN,QAChCgxB,GAAkBA,GACtB,CAMAvjB,EAAKzN,QAAQ1Q,gBAAa6E,CAC9B,CACA,SAAS0uC,GAAoBp1B,GAIzByzB,GAAoBC,aACf1zB,EAAK7W,SAQL6W,EAAK26B,iBACN36B,EAAKq0B,kBAAoBr0B,EAAK7W,OAAOkrC,mBAOzCr0B,EAAKs0B,0BAA4Bt0B,EAAKs0B,wBAA0B/tC,QAAQyZ,EAAKq0B,mBACzEr0B,EAAK7W,OAAOkrC,mBACZr0B,EAAK7W,OAAOmrC,0BAChBt0B,EAAKu0B,mBAAqBv0B,EAAKu0B,iBAAmBv0B,EAAK7W,OAAOorC,kBAClE,CACA,SAASgB,GAAgBv1B,GACrBA,EAAKq0B,kBACDr0B,EAAKs0B,wBACDt0B,EAAKu0B,kBACD,CAChB,CACA,SAAS8D,GAAcr4B,GACnBA,EAAKq4B,eACT,CACA,SAASL,GAAkBh4B,GACvBA,EAAKg4B,mBACT,CACA,SAASC,GAAmBj4B,GACxBA,EAAKwyB,eAAgB,CACzB,CACA,SAAS0F,GAAoBl4B,GACzB,MAAM,cAAE9W,GAAkB8W,EAAKzN,QAC3BrJ,GAAiBA,EAAcoX,WAAWi+B,uBAC1Cr1C,EAAckzB,OAAO,uBAEzBpc,EAAKk0B,gBACT,CACA,SAASqC,GAAgBv2B,GACrBA,EAAKu2B,kBACLv2B,EAAKg6B,YAAch6B,EAAK42B,eAAiB52B,EAAK9c,YAASwD,EACvDsZ,EAAKq0B,mBAAoB,CAC7B,CACA,SAASgB,GAAmBr1B,GACxBA,EAAKq1B,oBACT,CACA,SAASC,GAAet1B,GACpBA,EAAKs1B,gBACT,CACA,SAASqC,GAAc33B,GACnBA,EAAK23B,eACT,CACA,SAASW,GAAoBlJ,GACzBA,EAAMyD,oBACV,CACA,SAASqJ,GAAa5vB,EAAQtQ,EAAOtX,GACjC4nB,EAAO0Z,UAAYjtB,GAAIiD,EAAMgqB,UAAW,EAAGthC,GAC3C4nB,EAAOze,MAAQkL,GAAIiD,EAAMnO,MAAO,EAAGnJ,GACnC4nB,EAAOpX,OAAS8G,EAAM9G,OACtBoX,EAAOyZ,YAAc/pB,EAAM+pB,WAC/B,CACA,SAASoW,GAAQ7vB,EAAQhC,EAAM5nB,EAAIgC,GAC/B4nB,EAAOhf,IAAMyL,GAAIuR,EAAKhd,IAAK5K,EAAG4K,IAAK5I,GACnC4nB,EAAO/e,IAAMwL,GAAIuR,EAAK/c,IAAK7K,EAAG6K,IAAK7I,EACvC,CAKA,SAASq3C,GAAoB/7B,GACzB,OAAQA,EAAKsyB,sBAAwD5rC,IAArCsZ,EAAKsyB,gBAAgB+J,WACzD,CACA,MAAMvF,GAA0B,CAC5Bh1C,SAAU,IACVukB,KAAM,CAAC,GAAK,EAAG,GAAK,IAElBm4B,GAAqBC,GAAgC,oBAAdC,WACzCA,UAAUC,UAAUnoC,cAAchT,SAASi7C,GAMzCG,GAAaJ,GAAkB,kBAAoBA,GAAkB,WACrEhxC,KAAKQ,MACLuM,GACN,SAASg/B,GAAU5T,GAEfA,EAAKr4B,IAAMsxC,GAAWjZ,EAAKr4B,KAC3Bq4B,EAAKp4B,IAAMqxC,GAAWjZ,EAAKp4B,IAC/B,CAKA,SAASuvC,GAA0BC,EAAe1K,EAAU1qC,GACxD,MAA0B,aAAlBo1C,GACe,oBAAlBA,IACInX,GAAO6L,GAAYY,GAAWZ,GAAY9pC,GAAS,GAChE,CKh9CA,MAAMk3C,GAAyBhL,GAAqB,CAChDC,qBAAsB,CAACxuC,EAAK82B,IAAWpe,GAAY1Y,EAAK,SAAU82B,GAClE4X,cAAe,KAAM,CACjBxnC,EAAGzH,SAAS+5C,gBAAgBC,YAAch6C,SAASi6C,KAAKD,WACxDtyC,EAAG1H,SAAS+5C,gBAAgBG,WAAal6C,SAASi6C,KAAKC,YAE3DhL,kBAAmB,KAAM,ICNvBzI,GAAqB,CACvB9hC,aAAShD,GAEPw4C,GAAqBrL,GAAqB,CAC5CG,cAAgBtpC,IAAa,CACzB8B,EAAG9B,EAASq0C,WACZtyC,EAAG/B,EAASu0C,YAEhBlL,cAAe,KACX,IAAKvI,GAAmB9hC,QAAS,CAC7B,MAAMy1C,EAAe,IAAIN,GAAuB,CAAC,GACjDM,EAAax0C,MAAMrI,QACnB68C,EAAarQ,WAAW,CAAEgK,cAAc,IACxCtN,GAAmB9hC,QAAUy1C,CACjC,CACA,OAAO3T,GAAmB9hC,OAAO,EAErCwqC,eAAgB,CAACxpC,EAAUF,KACvBE,EAAS+H,MAAMrF,eAAsB1G,IAAV8D,EAAsBA,EAAQ,MAAM,EAEnEypC,kBAAoBvpC,GAAanE,QAAuD,UAA/CjE,OAAO88C,iBAAiB10C,GAAU20C,YClBzEh4C,GAAO,CACTI,IAAK,CACDsY,QrBIR,cAAyBA,GACrB,WAAArF,GACIyH,SAASC,WACTzH,KAAK2kC,0BAA4B/kC,EACrC,CACA,aAAAglC,CAAcC,GACV7kC,KAAK8kC,QAAU,IAAI7b,GAAW4b,EAAkB7kC,KAAK+kC,oBAAqB,CAAEj7C,mBAAoBkW,KAAKqF,KAAKwqB,yBAC9G,CACA,iBAAAkV,GACI,MAAM,kBAAEC,EAAiB,WAAEC,EAAU,MAAEC,EAAK,SAAEC,GAAanlC,KAAKqF,KAAKM,WACrE,MAAO,CACH4kB,eAAgBmI,GAAasS,GAC7Bnb,QAAS6I,GAAauS,GACtBnb,OAAQob,EACR/a,MAAO,CAACvmB,EAAO8B,YACJ1F,KAAK8kC,QACRK,GACA,GAAMj2C,QAAO,IAAMi2C,EAASvhC,EAAO8B,IACvC,EAGZ,CACA,KAAA1V,GACIgQ,KAAK2kC,0BAA4BvgC,GAAgBpE,KAAKqF,KAAKtW,QAAS,eAAgB6U,GAAU5D,KAAK4kC,cAAchhC,IACrH,CACA,MAAA1U,GACI8Q,KAAK8kC,SAAW9kC,KAAK8kC,QAAQra,eAAezqB,KAAK+kC,oBACrD,CACA,OAAA90C,GACI+P,KAAK2kC,4BACL3kC,KAAK8kC,SAAW9kC,KAAK8kC,QAAQ5a,KACjC,IqBjCAx9B,KAAM,CACF0Y,QCNR,cAA0BA,GACtB,WAAArF,CAAYsF,GACRmC,MAAMnC,GACNrF,KAAKolC,oBAAsBxlC,GAC3BI,KAAKwqB,gBAAkB5qB,GACvBI,KAAKoc,SAAW,IAAIiS,GAA0BhpB,EAClD,CACA,KAAArV,GAGI,MAAM,aAAEq1C,GAAiBrlC,KAAKqF,KAAKM,WAC/B0/B,IACArlC,KAAKolC,oBAAsBC,EAAa5c,UAAUzoB,KAAKoc,WAE3Dpc,KAAKwqB,gBAAkBxqB,KAAKoc,SAAS+V,gBAAkBvyB,EAC3D,CACA,OAAA3P,GACI+P,KAAKolC,sBACLplC,KAAKwqB,iBACT,GDZI8a,eAAgBf,GAChBr2C,cAAa,KECfq3C,GAAwB,uDAQ9B,MAAMC,GAAW,EACjB,SAASC,GAAiB12C,EAASgO,EAAS27B,EAAQ,GAChD9tB,GAAU8tB,GAAS8M,GAAU,yDAAyDz2C,yDACtF,MAAOqD,EAAOszC,GAVlB,SAA0B32C,GACtB,MAAM4f,EAAQ42B,GAAsBI,KAAK52C,GACzC,IAAK4f,EACD,MAAO,CAAC,GACZ,MAAO,CAAEvc,EAAOszC,GAAY/2B,EAC5B,MAAO,CAACvc,EAAOszC,EACnB,CAI8BE,CAAiB72C,GAE3C,IAAKqD,EACD,OAEJ,MAAMqN,EAAW9X,OAAO88C,iBAAiB1nC,GAAS8oC,iBAAiBzzC,GACnE,GAAIqN,EAAU,CACV,MAAMqmC,EAAUrmC,EAAS9G,OACzB,OAAOwoB,GAAkB2kB,GAAW9yC,WAAW8yC,GAAWA,CAC9D,CACK,OAAIxzC,EAAmBozC,GAEjBD,GAAiBC,EAAU3oC,EAAS27B,EAAQ,GAG5CgN,CAEf,CCjCA,MAAMK,GAAiB,IAAIx0C,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,IACA,aACA,eAEEy0C,GAAmBp9C,GAAQm9C,GAAej1C,IAAIlI,GAI9Cq9C,GAAiBh7C,GAAMA,IAAM6H,GAAU7H,IAAM+I,EAC7CkyC,GAAmB,CAACC,EAAQC,IAAQpzC,WAAWmzC,EAAOtyC,MAAM,MAAMuyC,IAClEC,GAAyB,CAACC,EAAMC,IAAS,CAACC,GAAS/zC,gBACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,MAAMg0C,EAAWh0C,EAAUkc,MAAM,sBACjC,GAAI83B,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAEpC,CACD,MAAMJ,EAAS1zC,EAAUkc,MAAM,oBAC/B,OAAIw3B,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAEf,GAEEI,GAAgB,IAAIn1C,IAAI,CAAC,IAAK,IAAK,MACnCo1C,GAAgCt1C,EAAmBytB,QAAQl2B,IAAS89C,GAAc51C,IAAIlI,KAe5F,MAAMg+C,GAAmB,CAErB5xC,MAAO,EAAGnD,MAAO+D,cAAc,IAAKF,eAAe,OAAU7D,EAAEe,IAAMf,EAAEc,IAAMK,WAAW4C,GAAe5C,WAAW0C,GAClHzN,OAAQ,EAAG6J,MAAO2D,aAAa,IAAKE,gBAAgB,OAAU7D,EAAEc,IAAMd,EAAEa,IAAMK,WAAWyC,GAAczC,WAAW2C,GAClHP,IAAK,CAACoxC,GAASpxC,SAAUpC,WAAWoC,GACpCG,KAAM,CAACixC,GAASjxC,UAAWvC,WAAWuC,GACtCD,OAAQ,EAAGxD,MAAOsD,SAAUpC,WAAWoC,IAAQtD,EAAEc,IAAMd,EAAEa,KACzD0C,MAAO,EAAGxD,MAAO0D,UAAWvC,WAAWuC,IAAS1D,EAAEe,IAAMf,EAAEc,KAE1Dd,EAAGw0C,GAAuB,EAAG,IAC7Bv0C,EAAGu0C,GAAuB,EAAG,KAGjCO,GAAiB/vC,WAAa+vC,GAAiB/0C,EAC/C+0C,GAAiB9vC,WAAa8vC,GAAiB90C,EAC/C,MA6BM+0C,GAAmC,CAACt4C,EAAehG,EAAQgS,EAAS,CAAC,EAAGmF,EAAgB,CAAC,KAC3FnX,EAAS,IAAKA,GACdmX,EAAgB,IAAKA,GACrB,MAAMonC,EAAuBl8C,OAAO6Q,KAAKlT,GAAQu2B,OAAOknB,IAGxD,IAAIe,EAAyB,GACzBC,GAAsC,EAC1C,MAAMC,EAAuB,GAkF7B,GAjFAH,EAAqBtnC,SAAS5W,IAC1B,MAAMiH,EAAQtB,EAAc61B,SAASx7B,GACrC,IAAK2F,EAAc41B,SAASv7B,GACxB,OACJ,IAAI+mB,EAAOpV,EAAO3R,GACds+C,EAAWljB,GAAuBrU,GACtC,MAAM5nB,EAAKQ,EAAOK,GAClB,IAAIu+C,EAKJ,GAAIjpC,GAAkBnW,GAAK,CACvB,MAAMq/C,EAAer/C,EAAGmK,OAClBm1C,EAAsB,OAAVt/C,EAAG,GAAc,EAAI,EACvC4nB,EAAO5nB,EAAGs/C,GACVH,EAAWljB,GAAuBrU,GAClC,IAAK,IAAIjX,EAAI2uC,EAAW3uC,EAAI0uC,GAKV,OAAVr/C,EAAG2Q,GAL+BA,IAOjCyuC,EAMDv8B,GAAUoZ,GAAuBj8B,EAAG2Q,MAAQyuC,EAAQ,2CALpDA,EAASnjB,GAAuBj8B,EAAG2Q,IACnCkS,GAAUu8B,IAAWD,GAChBjB,GAAciB,IAAajB,GAAckB,GAAU,gEAMpE,MAEIA,EAASnjB,GAAuBj8B,GAEpC,GAAIm/C,IAAaC,EAGb,GAAIlB,GAAciB,IAAajB,GAAckB,GAAS,CAClD,MAAMp4C,EAAUc,EAAMe,MACC,iBAAZ7B,GACPc,EAAMkB,IAAIiC,WAAWjE,IAEP,iBAAPhH,EACPQ,EAAOK,GAAOoK,WAAWjL,GAEpBmD,MAAMC,QAAQpD,IAAOo/C,IAAWnzC,IACrCzL,EAAOK,GAAOb,EAAGS,IAAIwK,YAE7B,MACUk0C,aAA2C,EAASA,EAASz0C,aAClE00C,aAAuC,EAASA,EAAO10C,aAC9C,IAATkd,GAAqB,IAAP5nB,GAGF,IAAT4nB,EACA9f,EAAMkB,IAAIo2C,EAAO10C,UAAUkd,IAG3BpnB,EAAOK,GAAOs+C,EAASz0C,UAAU1K,IAMhCi/C,IACDD,EAvIpB,SAAyCx4C,GACrC,MAAM+4C,EAAoB,GAW1B,OAVAX,GAA8BnnC,SAAS5W,IACnC,MAAMiH,EAAQtB,EAAc61B,SAASx7B,QACvBmD,IAAV8D,IACAy3C,EAAkBjnC,KAAK,CAACzX,EAAKiH,EAAMe,QACnCf,EAAMkB,IAAInI,EAAI6I,WAAW,SAAW,EAAI,GAC5C,IAGA61C,EAAkBp1C,QAClB3D,EAAcc,SACXi4C,CACX,CA2HwBC,CAAgCh5C,GACpCy4C,GAAsC,GAE1CC,EAAqB5mC,KAAKzX,GAC1B8W,EAAc9W,QACamD,IAAvB2T,EAAc9W,GACR8W,EAAc9W,GACdL,EAAOK,GACjBiH,EAAMuzB,KAAKr7B,GAEnB,IAEAk/C,EAAqB/0C,OAAQ,CAC7B,MAAMs1C,EAAUP,EAAqB/1C,QAAQ,WAAa,EACpDvJ,OAAO8/C,YACP,KACAC,EA3HmB,EAACn/C,EAAQgG,EAAeo5C,KACrD,MAAMC,EAAar5C,EAAcy/B,qBAC3BjxB,EAAUxO,EAAcQ,QACxB84C,EAAuBpD,iBAAiB1nC,IACxC,QAAEyjC,GAAYqH,EACdttC,EAAS,CAAC,EAGA,SAAZimC,GACAjyC,EAAcq0C,eAAe,UAAWr6C,EAAOi4C,SAAW,SAK9DmH,EAAYnoC,SAAS5W,IACjB2R,EAAO3R,GAAOg+C,GAAiBh+C,GAAKg/C,EAAYC,EAAqB,IAGzEt5C,EAAcc,SACd,MAAMy4C,EAAav5C,EAAcy/B,qBAQjC,OAPA2Z,EAAYnoC,SAAS5W,IAGjB,MAAMiH,EAAQtB,EAAc61B,SAASx7B,GACrCiH,GAASA,EAAMuzB,KAAK7oB,EAAO3R,IAC3BL,EAAOK,GAAOg+C,GAAiBh+C,GAAKk/C,EAAYD,EAAqB,IAElEt/C,CAAM,EAgGew/C,CAAyBx/C,EAAQgG,EAAe04C,GAaxE,OAXIF,EAAuB70C,QACvB60C,EAAuBvnC,SAAQ,EAAE5W,EAAKiH,MAClCtB,EAAc61B,SAASx7B,GAAKmI,IAAIlB,EAAM,IAI9CtB,EAAcc,SAEVlF,GAAyB,OAAZq9C,GACb7/C,OAAOqgD,SAAS,CAAE5yC,IAAKoyC,IAEpB,CAAEj/C,OAAQm/C,EAAiBhoC,gBACtC,CAEI,MAAO,CAAEnX,SAAQmX,gBACrB,EASJ,SAASuoC,GAAe15C,EAAehG,EAAQgS,EAAQmF,GACnD,MA3MqB,CAACnX,GACfqC,OAAO6Q,KAAKlT,GAAQkD,KAAKu6C,IA0MzBkC,CAAiB3/C,GAClBs+C,GAAiCt4C,EAAehG,EAAQgS,EAAQmF,GAChE,CAAEnX,SAAQmX,gBACpB,CC5NA,MAAMyoC,GAAkB,CAAC55C,EAAehG,EAAQgS,EAAQmF,KACpD,MAAMD,EFuCV,SAA6BlR,MAAoBhG,GAAUmX,GACvD,MAAM3C,EAAUxO,EAAcQ,QAC9B,KAAMgO,aAAmBggB,SACrB,MAAO,CAAEx0B,SAAQmX,iBAGjBA,IACAA,EAAgB,IAAKA,IAGzBnR,EAAc+N,OAAOkD,SAAS3P,IAC1B,MAAMd,EAAUc,EAAMe,MACtB,IAAK0B,EAAmBvD,GACpB,OACJ,MAAM0Q,EAAWgmC,GAAiB12C,EAASgO,GACvC0C,GACA5P,EAAMkB,IAAI0O,EAAS,IAI3B,IAAK,MAAM7W,KAAOL,EAAQ,CACtB,MAAMwG,EAAUxG,EAAOK,GACvB,IAAK0J,EAAmBvD,GACpB,SACJ,MAAM0Q,EAAWgmC,GAAiB12C,EAASgO,GACtC0C,IAGLlX,EAAOK,GAAO6W,EACTC,IACDA,EAAgB,CAAC,QAIM3T,IAAvB2T,EAAc9W,KACd8W,EAAc9W,GAAOmG,GAE7B,CACA,MAAO,CAAExG,SAAQmX,gBACrB,CE9EqB0oC,CAAoB75C,EAAehG,EAAQmX,GAG5D,OAAOuoC,GAAe15C,EAFtBhG,EAASkX,EAASlX,OAE2BgS,EAD7CmF,EAAgBD,EAASC,cAC0C,ECVjE2oC,GAAuB,CAAEt5C,QAAS,MAClCu5C,GAA2B,CAAEv5C,SAAS,GCF5C,MAAMw5C,GAAqB,IAAIniC,QCoBzBoiC,GAAe59C,OAAO6Q,KAAKxO,GAC3Bw7C,GAAcD,GAAat2C,OAC3Bw2C,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAEEC,GAAkBp9C,EAAa2G,OAKrC,MAAM02C,GACF,WAAA7oC,EAAY,OAAEvR,EAAM,MAAEhI,EAAK,gBAAEkI,EAAe,oBAAEC,EAAmB,YAAEL,GAAgBsJ,EAAU,CAAC,GAK1FoI,KAAKjR,QAAU,KAIfiR,KAAK7W,SAAW,IAAIoI,IAIpByO,KAAKrU,eAAgB,EACrBqU,KAAKxU,uBAAwB,EAQ7BwU,KAAKolB,mBAAqB,KAM1BplB,KAAK1D,OAAS,IAAI3L,IAIlBqP,KAAKnS,SAAW,CAAC,EAKjBmS,KAAK6oC,mBAAqB,IAAIl4C,IAM9BqP,KAAK8oC,iBAAmB,CAAC,EAIzB9oC,KAAKkiB,OAAS,CAAC,EAMfliB,KAAK+oC,uBAAyB,CAAC,EAC/B/oC,KAAKgpC,aAAe,IAAMhpC,KAAKyhB,OAAO,SAAUzhB,KAAKrI,cACrDqI,KAAK3Q,OAAS,KACL2Q,KAAKjR,UAEViR,KAAKipC,eACLjpC,KAAKkpC,eAAelpC,KAAKjR,QAASiR,KAAK1C,YAAa0C,KAAKxZ,MAAMsR,MAAOkI,KAAK/C,YAAW,EAE1F+C,KAAKg3B,eAAiB,IAAM,GAAM3nC,OAAO2Q,KAAK3Q,QAAQ,GAAO,GAC7D,MAAM,aAAEsI,EAAY,YAAE2F,GAAgBhP,EACtC0R,KAAKrI,aAAeA,EACpBqI,KAAKmpC,WAAa,IAAKxxC,GACvBqI,KAAKopC,cAAgB5iD,EAAMa,QAAU,IAAKsQ,GAAiB,CAAC,EAC5DqI,KAAK1C,YAAcA,EACnB0C,KAAKxR,OAASA,EACdwR,KAAKxZ,MAAQA,EACbwZ,KAAKtR,gBAAkBA,EACvBsR,KAAK04B,MAAQlqC,EAASA,EAAOkqC,MAAQ,EAAI,EACzC14B,KAAKrR,oBAAsBA,EAC3BqR,KAAKpI,QAAUA,EACfoI,KAAKxU,sBAAwBA,EAAsBhF,GACnDwZ,KAAKrU,cAAgBA,EAAcnF,GAC/BwZ,KAAKrU,gBACLqU,KAAKylB,gBAAkB,IAAIl0B,KAE/ByO,KAAKwnB,uBAAyB57B,QAAQ4C,GAAUA,EAAOO,SAWvD,MAAM,WAAEg2B,KAAeskB,GAAwBrpC,KAAKvC,4BAA4BjX,EAAO,CAAC,GACxF,IAAK,MAAMoC,KAAOygD,EAAqB,CACnC,MAAMx5C,EAAQw5C,EAAoBzgD,QACRmD,IAAtB4L,EAAa/O,IAAsB8I,EAAc7B,KACjDA,EAAMkB,IAAI4G,EAAa/O,IAAM,GACzBs4B,GAAwB6D,IACxBA,EAAW5kB,IAAIvX,GAG3B,CACJ,CAQA,2BAAA6U,CAA4B6rC,EAAQC,GAChC,MAAO,CAAC,CACZ,CACA,KAAAv5C,CAAMD,GACFiQ,KAAKjR,QAAUgB,EACfw4C,GAAmBx3C,IAAIhB,EAAUiQ,MAC7BA,KAAK/C,aAAe+C,KAAK/C,WAAWlN,UACpCiQ,KAAK/C,WAAWjN,MAAMD,GAEtBiQ,KAAKxR,QAAUwR,KAAKrU,gBAAkBqU,KAAKxU,wBAC3CwU,KAAKwpC,sBAAwBxpC,KAAKxR,OAAOi7C,gBAAgBzpC,OAE7DA,KAAK1D,OAAOkD,SAAQ,CAAC3P,EAAOjH,IAAQoX,KAAK0pC,kBAAkB9gD,EAAKiH,KAC3Dy4C,GAAyBv5C,SC1JtC,WAEI,GADAu5C,GAAyBv5C,SAAU,EAC9B5E,EAEL,GAAIxC,OAAOgiD,WAAY,CACnB,MAAMC,EAAmBjiD,OAAOgiD,WAAW,4BACrCE,EAA8B,IAAOxB,GAAqBt5C,QAAU66C,EAAiB3/B,QAC3F2/B,EAAiBE,YAAYD,GAC7BA,GACJ,MAEIxB,GAAqBt5C,SAAU,CAEvC,CD8IYg7C,GAEJ/pC,KAAKolB,mBAC4B,UAA7BplB,KAAKrR,sBAE8B,WAA7BqR,KAAKrR,qBAED05C,GAAqBt5C,SAI/BiR,KAAKxR,QACLwR,KAAKxR,OAAOrF,SAASgX,IAAIH,MAC7BA,KAAK9Q,OAAO8Q,KAAKxZ,MAAOwZ,KAAKtR,gBACjC,CACA,OAAAuB,GACIs4C,GAAmB9nC,OAAOT,KAAKjR,SAC/BiR,KAAK/C,YAAc+C,KAAK/C,WAAWhN,UACnC6Q,GAAYd,KAAKgpC,cACjBloC,GAAYd,KAAK3Q,QACjB2Q,KAAK6oC,mBAAmBrpC,SAASc,GAAWA,MAC5CN,KAAKwpC,uBAAyBxpC,KAAKwpC,wBACnCxpC,KAAKxR,QAAUwR,KAAKxR,OAAOrF,SAASsX,OAAOT,MAC3C,IAAK,MAAMpX,KAAOoX,KAAKkiB,OACnBliB,KAAKkiB,OAAOt5B,GAAK8X,QAErB,IAAK,MAAM9X,KAAOoX,KAAKnS,SACnBmS,KAAKnS,SAASjF,GAAKqH,UAEvB+P,KAAKjR,QAAU,IACnB,CACA,iBAAA26C,CAAkB9gD,EAAKiH,GACnB,MAAMm6C,EAAmB14C,EAAeR,IAAIlI,GACtCqhD,EAAiBp6C,EAAMgzB,GAAG,UAAWqnB,IACvClqC,KAAKrI,aAAa/O,GAAOshD,EACzBlqC,KAAKxZ,MAAM4zB,UACP,GAAMlrB,OAAO8Q,KAAKgpC,cAAc,GAAO,GACvCgB,GAAoBhqC,KAAK/C,aACzB+C,KAAK/C,WAAW28B,kBAAmB,EACvC,IAEEuQ,EAAwBt6C,EAAMgzB,GAAG,gBAAiB7iB,KAAKg3B,gBAC7Dh3B,KAAK6oC,mBAAmB93C,IAAInI,GAAK,KAC7BqhD,IACAE,GAAuB,GAE/B,CACA,gBAAAjkB,CAAiBkkB,GAIb,OAAKpqC,KAAKjR,SACLiR,KAAKqqC,0BACNrqC,KAAKxN,OAAS43C,EAAM53C,KAGjBwN,KAAKqqC,yBAAyBrqC,KAAKjR,QAASq7C,EAAMr7C,SAF9C,CAGf,CACA,YAAAjB,EAAa,SAAE3E,KAAamhD,GAAiB36C,EAAUnC,EAAmBkC,GACtE,IAAI66C,EACAr8C,EAaJ,IAAK,IAAIwK,EAAI,EAAGA,EAAI+vC,GAAa/vC,IAAK,CAClC,MAAMhN,EAAO88C,GAAa9vC,IACpB,UAAExL,EAAWkY,QAASolC,EAAkB,eAAElF,EAAgBp3C,cAAeu8C,GAA4Bx9C,EAAmBvB,GAC1H45C,IACAiF,EAA4BjF,GAC5Bp4C,EAAUo9C,MACLtqC,KAAKnS,SAASnC,IAAS8+C,IACxBxqC,KAAKnS,SAASnC,GAAQ,IAAI8+C,EAAmBxqC,OAE7CyqC,IACAv8C,EAAgBu8C,GAG5B,CACA,IAAKzqC,KAAK/C,YAAcstC,EAA2B,CAC/CvqC,KAAK/C,WAAa,IAAIstC,EAA0BvqC,KAAKrI,aAAcqI,KAAKxR,QAAUwR,KAAKxR,OAAOyO,YAC9F,MAAM,SAAE7O,EAAQ,OAAEpB,EAAM,KAAEN,EAAI,gBAAEyjC,EAAe,aAAEgO,EAAY,WAAE1B,GAAgB6N,EAC/EtqC,KAAK/C,WAAWk3B,WAAW,CACvB/lC,WACApB,SACA8wC,oBAAqBlyC,QAAQc,IACxByjC,GAAmBzlC,EAAYylC,GACpC5hC,cAAeyR,KACfg3B,eAAgB,IAAMh3B,KAAKg3B,iBAQ3BoL,cAAiC,iBAAXp1C,EAAsBA,EAAS,OACrDu1C,uBAAwB7yC,EACxByuC,eACA1B,cAER,CACA,OAAOvuC,CACX,CACA,cAAAsB,GACI,IAAK,MAAM5G,KAAOoX,KAAKnS,SAAU,CAC7B,MAAM68C,EAAU1qC,KAAKnS,SAASjF,GAC1B8hD,EAAQplC,UACRolC,EAAQx7C,UAGRw7C,EAAQ16C,QACR06C,EAAQplC,WAAY,EAE5B,CACJ,CACA,YAAA2jC,GACIjpC,KAAK2qC,MAAM3qC,KAAK1C,YAAa0C,KAAKrI,aAAcqI,KAAKpI,QAASoI,KAAKxZ,MACvE,CAMA,kBAAAwnC,GACI,OAAOhuB,KAAKjR,QACNiR,KAAK4qC,2BAA2B5qC,KAAKjR,QAASiR,KAAKxZ,OACnD+lC,IACV,CACA,cAAAse,CAAejiD,GACX,OAAOoX,KAAKrI,aAAa/O,EAC7B,CACA,cAAAg6C,CAAeh6C,EAAKiH,GAChBmQ,KAAKrI,aAAa/O,GAAOiH,CAC7B,CAQA,oBAAA00B,CAAqBh8B,EAAQuiD,GAAY,GACrC,OAAO9qC,KAAK+qC,iCAAiCxiD,EAAQyX,KAAKxZ,MAAOskD,EACrE,CAKA,MAAA57C,CAAO1I,EAAOkI,IACNlI,EAAMqR,mBAAqBmI,KAAKxZ,MAAMqR,oBACtCmI,KAAKg3B,iBAETh3B,KAAKtC,UAAYsC,KAAKxZ,MACtBwZ,KAAKxZ,MAAQA,EACbwZ,KAAK8oB,oBAAsB9oB,KAAKtR,gBAChCsR,KAAKtR,gBAAkBA,EAIvB,IAAK,IAAIgK,EAAI,EAAGA,EAAIgwC,GAAkBx2C,OAAQwG,IAAK,CAC/C,MAAM9P,EAAM8/C,GAAkBhwC,GAC1BsH,KAAK+oC,uBAAuBngD,KAC5BoX,KAAK+oC,uBAAuBngD,YACrBoX,KAAK+oC,uBAAuBngD,IAEvC,MAAMoiD,EAAWxkD,EAAM,KAAOoC,GAC1BoiD,IACAhrC,KAAK+oC,uBAAuBngD,GAAOoX,KAAK6iB,GAAGj6B,EAAKoiD,GAExD,CACAhrC,KAAK8oC,iBE5Ub,SAAqC/rC,EAASqN,EAAMC,GAChD,MAAM,WAAE0a,GAAe3a,EACvB,IAAK,MAAMxhB,KAAOwhB,EAAM,CACpB,MAAM6gC,EAAY7gC,EAAKxhB,GACjBsiD,EAAY7gC,EAAKzhB,GACvB,GAAI8I,EAAcu5C,GAKdluC,EAAQsnB,SAASz7B,EAAKqiD,GAClB/pB,GAAwB6D,IACxBA,EAAW5kB,IAAIvX,QAUlB,GAAI8I,EAAcw5C,GAKnBnuC,EAAQsnB,SAASz7B,EAAKi7B,GAAYonB,EAAW,CAAEvtB,MAAO3gB,KAClDmkB,GAAwB6D,IACxBA,EAAWzkB,OAAO1X,QAGrB,GAAIsiD,IAAcD,EAMnB,GAAIluC,EAAQonB,SAASv7B,GAAM,CACvB,MAAMuiD,EAAgBpuC,EAAQqnB,SAASx7B,IAEtCuiD,EAAczoB,aAAeyoB,EAAcp6C,IAAIk6C,EACpD,KACK,CACD,MAAMf,EAAcntC,EAAQ8tC,eAAejiD,GAC3CmU,EAAQsnB,SAASz7B,EAAKi7B,QAA4B93B,IAAhBm+C,EAA4BA,EAAce,EAAW,CAAEvtB,MAAO3gB,IACpG,CAER,CAEA,IAAK,MAAMnU,KAAOyhB,OACIte,IAAdqe,EAAKxhB,IACLmU,EAAQquC,YAAYxiD,GAE5B,OAAOwhB,CACX,CFqRgCihC,CAA4BrrC,KAAMA,KAAKvC,4BAA4BjX,EAAOwZ,KAAKtC,WAAYsC,KAAK8oC,kBACpH9oC,KAAKsrC,wBACLtrC,KAAKsrC,wBAEb,CACA,QAAA3lC,GACI,OAAO3F,KAAKxZ,KAChB,CAIA,UAAA+kD,CAAW7/C,GACP,OAAOsU,KAAKxZ,MAAM4B,SAAW4X,KAAKxZ,MAAM4B,SAASsD,QAAQK,CAC7D,CAIA,oBAAAuyB,GACI,OAAOte,KAAKxZ,MAAMU,UACtB,CACA,qBAAA2oC,GACI,OAAO7vB,KAAKxZ,MAAMsD,kBACtB,CACA,qBAAA0hD,GACI,OAAOxrC,KAAKrU,cACNqU,KACAA,KAAKxR,OACDwR,KAAKxR,OAAOg9C,6BACZz/C,CACd,CACA,iBAAAi7B,CAAkBykB,GAAgB,GAC9B,GAAIA,EACA,OAAOzrC,KAAKxR,OAASwR,KAAKxR,OAAOw4B,yBAAsBj7B,EAE3D,IAAKiU,KAAKxU,sBAAuB,CAC7B,MAAMM,EAAUkU,KAAKxR,QACfwR,KAAKxR,OAAOw4B,qBACZ,CAAC,EAIP,YAH2Bj7B,IAAvBiU,KAAKxZ,MAAMa,UACXyE,EAAQzE,QAAU2Y,KAAKxZ,MAAMa,SAE1ByE,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAI4M,EAAI,EAAGA,EAAIiwC,GAAiBjwC,IAAK,CACtC,MAAMhN,EAAOH,EAAamN,GACpBrM,EAAO2T,KAAKxZ,MAAMkF,IACpBV,EAAeqB,KAAkB,IAATA,KACxBP,EAAQJ,GAAQW,EAExB,CACA,OAAOP,CACX,CAIA,eAAA29C,CAAgB3jC,GACZ,MAAM4lC,EAAqB1rC,KAAKwrC,wBAChC,GAAIE,EAGA,OAFAA,EAAmBjmB,iBACfimB,EAAmBjmB,gBAAgBtlB,IAAI2F,GACpC,IAAM4lC,EAAmBjmB,gBAAgBhlB,OAAOqF,EAE/D,CAIA,QAAAue,CAASz7B,EAAKiH,GAENA,IAAUmQ,KAAK1D,OAAO1L,IAAIhI,KAC1BoX,KAAKorC,YAAYxiD,GACjBoX,KAAK0pC,kBAAkB9gD,EAAKiH,IAEhCmQ,KAAK1D,OAAOvL,IAAInI,EAAKiH,GACrBmQ,KAAKrI,aAAa/O,GAAOiH,EAAMe,KACnC,CAIA,WAAAw6C,CAAYxiD,GACRoX,KAAK1D,OAAOmE,OAAO7X,GACnB,MAAMk6B,EAAc9iB,KAAK6oC,mBAAmBj4C,IAAIhI,GAC5Ck6B,IACAA,IACA9iB,KAAK6oC,mBAAmBpoC,OAAO7X,WAE5BoX,KAAKrI,aAAa/O,GACzBoX,KAAK2rC,2BAA2B/iD,EAAKoX,KAAK1C,YAC9C,CAIA,QAAA6mB,CAASv7B,GACL,OAAOoX,KAAK1D,OAAOxL,IAAIlI,EAC3B,CACA,QAAAw7B,CAASx7B,EAAKg2B,GACV,GAAI5e,KAAKxZ,MAAM8V,QAAU0D,KAAKxZ,MAAM8V,OAAO1T,GACvC,OAAOoX,KAAKxZ,MAAM8V,OAAO1T,GAE7B,IAAIiH,EAAQmQ,KAAK1D,OAAO1L,IAAIhI,GAK5B,YAJcmD,IAAV8D,QAAwC9D,IAAjB6yB,IACvB/uB,EAAQg0B,GAAYjF,EAAc,CAAElB,MAAO1d,OAC3CA,KAAKqkB,SAASz7B,EAAKiH,IAEhBA,CACX,CAMA,SAAA+7C,CAAUhjD,GACN,IAAIyR,EACJ,YAAkCtO,IAA3BiU,KAAKrI,aAAa/O,IAAuBoX,KAAKjR,QAES,QAAvDsL,EAAK2F,KAAK6rC,uBAAuB7rC,KAAKxZ,MAAOoC,UAAyB,IAAPyR,EAAgBA,EAAK2F,KAAK8rC,sBAAsB9rC,KAAKjR,QAASnG,EAAKoX,KAAKpI,SADxIoI,KAAKrI,aAAa/O,EAE5B,CAKA,aAAAmjD,CAAcnjD,EAAKiH,GACfmQ,KAAKmpC,WAAWvgD,GAAOiH,CAC3B,CAKA,aAAAu4B,CAAcx/B,GACV,IAAIyR,EACJ,MAAM,QAAEhT,GAAY2Y,KAAKxZ,MACnBwlD,EAAsC,iBAAZ3kD,GAA2C,iBAAZA,EACD,QAAvDgT,EAAKyD,GAAwBkC,KAAKxZ,MAAOa,UAA6B,IAAPgT,OAAgB,EAASA,EAAGzR,QAC5FmD,EAIN,GAAI1E,QAAgC0E,IAArBigD,EACX,OAAOA,EAMX,MAAMzjD,EAASyX,KAAK6rC,uBAAuB7rC,KAAKxZ,MAAOoC,GACvD,YAAemD,IAAXxD,GAAyBmJ,EAAcnJ,QAMRwD,IAA5BiU,KAAKopC,cAAcxgD,SACDmD,IAArBigD,OACEjgD,EACAiU,KAAKmpC,WAAWvgD,GARXL,CASf,CACA,EAAAs6B,CAAGvf,EAAWrB,GAIV,OAHKjC,KAAKkiB,OAAO5e,KACbtD,KAAKkiB,OAAO5e,GAAa,IAAIie,IAE1BvhB,KAAKkiB,OAAO5e,GAAWnD,IAAI8B,EACtC,CACA,MAAAwf,CAAOne,KAAc83B,GACbp7B,KAAKkiB,OAAO5e,IACZtD,KAAKkiB,OAAO5e,GAAWme,UAAU2Z,EAEzC,EGnfJ,MAAM6Q,WAAyBrD,GAC3B,wBAAAyB,CAAyB/lC,EAAGC,GAMxB,OAAsC,EAA/BD,EAAE4nC,wBAAwB3nC,GAAS,GAAK,CACnD,CACA,sBAAAsnC,CAAuBrlD,EAAOoC,GAC1B,OAAOpC,EAAMsR,MAAQtR,EAAMsR,MAAMlP,QAAOmD,CAC5C,CACA,0BAAA4/C,CAA2B/iD,GAAK,KAAEmP,EAAI,MAAED,WAC7BC,EAAKnP,UACLkP,EAAMlP,EACjB,CACA,gCAAAmiD,EAAiC,WAAE7jD,EAAU,cAAEwY,KAAkBnX,IAAU,gBAAE4Q,GAAmBmM,GAC5F,IAAI/K,ElDqFZ,SAAmBhS,EAAQrB,EAAYqH,GACnC,MAAMgM,EAAS,CAAC,EAChB,IAAK,MAAM3R,KAAOL,EAAQ,CACtB,MAAM4jD,EAAmB3nB,GAAwB57B,EAAK1B,GACtD,QAAyB6E,IAArBogD,EACA5xC,EAAO3R,GAAOujD,MAEb,CACD,MAAMt8C,EAAQtB,EAAc61B,SAASx7B,GACjCiH,IACA0K,EAAO3R,GAAOiH,EAAMe,MAE5B,CACJ,CACA,OAAO2J,CACX,CkDpGqB6xC,CAAU7jD,EAAQrB,GAAc,CAAC,EAAG8Y,MAYjD,GARI7G,IACIuG,IACAA,EAAgBvG,EAAgBuG,IAChCnX,IACAA,EAAS4Q,EAAgB5Q,IACzBgS,IACAA,EAASpB,EAAgBoB,KAE7B+K,EAAW,ElDoBvB,SAAiC/W,EAAehG,EAAQgS,GACpD,IAAIF,EAAIyX,EACR,MAAMu6B,EAAezhD,OAAO6Q,KAAKlT,GAAQu2B,QAAQl2B,IAAS2F,EAAc41B,SAASv7B,KAC3E0jD,EAAeD,EAAan6C,OD5ChB,IAACjH,EC6CnB,GAAKqhD,EAEL,IAAK,IAAI5zC,EAAI,EAAGA,EAAI4zC,EAAc5zC,IAAK,CACnC,MAAM9P,EAAMyjD,EAAa3zC,GACnB6zC,EAAchkD,EAAOK,GAC3B,IAAIiH,EAAQ,KAKR3E,MAAMC,QAAQohD,KACd18C,EAAQ08C,EAAY,IAOV,OAAV18C,IACAA,EAAoG,QAA3FiiB,EAA4B,QAAtBzX,EAAKE,EAAO3R,UAAyB,IAAPyR,EAAgBA,EAAK9L,EAAcq9C,UAAUhjD,UAAyB,IAAPkpB,EAAgBA,EAAKvpB,EAAOK,IAMxIiH,UAEiB,iBAAVA,IACNsxB,GAAkBtxB,IAAU8vB,GAAkB9vB,IAE/CA,EAAQmD,WAAWnD,ID3ER5E,EC6ES4E,GD7EHo0B,GAAW7T,KAAK0T,GAAc74B,KC6EjB4mB,GAAQ1gB,KAAKo7C,KAC3C18C,EAAQ,GAAkBjH,EAAK2jD,KAEnCh+C,EAAc81B,SAASz7B,EAAKi7B,GAAYh0B,EAAO,CAAE6tB,MAAOnvB,UACpCxC,IAAhBwO,EAAO3R,KACP2R,EAAO3R,GAAOiH,GAEJ,OAAVA,GACAtB,EAAcw9C,cAAcnjD,EAAKiH,GACzC,CACJ,CkDjEY28C,CAAwBxsC,KAAMzX,EAAQgS,GACtC,MAAM0X,EAASk2B,GAAgBnoC,KAAMzX,EAAQgS,EAAQmF,GACrDA,EAAgBuS,EAAOvS,cACvBnX,EAAS0pB,EAAO1pB,MACpB,CACA,MAAO,CACHrB,aACAwY,mBACGnX,EAEX,EC/BJ,MAAMkkD,WAA0BR,GAC5B,qBAAAH,CAAsB/7C,EAAUnH,GAC5B,GAAI0I,EAAeR,IAAIlI,GAAM,CACzB,MAAM8jD,EAAcjtB,GAAoB72B,GACxC,OAAO8jD,GAAcA,EAAYv5C,SAAe,CACpD,CACK,CACD,MAAMw5C,GAVQ5vC,EAUyBhN,EATxCpI,OAAO88C,iBAAiB1nC,IAUjBlN,GAASwC,EAAkBzJ,GAC3B+jD,EAAc9G,iBAAiBj9C,GAC/B+jD,EAAc/jD,KAAS,EAC7B,MAAwB,iBAAViH,EAAqBA,EAAM8I,OAAS9I,CACtD,CAfR,IAA0BkN,CAgBtB,CACA,0BAAA6tC,CAA2B76C,GAAU,mBAAEjG,IACnC,OAAOkkC,GAAmBj+B,EAAUjG,EACxC,CACA,KAAA6gD,CAAMrtC,EAAa3F,EAAcC,EAASpR,GACtCiR,GAAgB6F,EAAa3F,EAAcC,EAASpR,EAAMqR,kBAC9D,CACA,2BAAA4F,CAA4BjX,EAAOkX,GAC/B,OAAOD,GAA4BjX,EAAOkX,EAC9C,CACA,sBAAA4tC,GACQtrC,KAAK4sC,oBACL5sC,KAAK4sC,2BACE5sC,KAAK4sC,mBAEhB,MAAM,SAAEzjD,GAAa6W,KAAKxZ,MACtBkL,EAAcvI,KACd6W,KAAK4sC,kBAAoBzjD,EAAS05B,GAAG,UAAW3nB,IACxC8E,KAAKjR,UACLiR,KAAKjR,QAAQ89C,YAAc,GAAG3xC,IAAQ,IAGtD,CACA,cAAAguC,CAAen5C,EAAUuN,EAAaN,EAAWC,GAC7CH,GAAW/M,EAAUuN,EAAaN,EAAWC,EACjD,ECxCJ,MAAM6vC,WAAyBb,GAC3B,WAAAlsC,GACIyH,SAASC,WACTzH,KAAK7E,UAAW,CACpB,CACA,sBAAA0wC,CAAuBrlD,EAAOoC,GAC1B,OAAOpC,EAAMoC,EACjB,CACA,qBAAAkjD,CAAsB/7C,EAAUnH,GAC5B,GAAI0I,EAAeR,IAAIlI,GAAM,CACzB,MAAM8jD,EAAcjtB,GAAoB72B,GACxC,OAAO8jD,GAAcA,EAAYv5C,SAAe,CACpD,CAEA,OADAvK,EAAOwU,GAAoBtM,IAAIlI,GAA0BA,EAAnB+T,GAAY/T,GAC3CmH,EAASg9C,aAAankD,EACjC,CACA,0BAAAgiD,GACI,OAAOre,IACX,CACA,2BAAA9uB,CAA4BjX,EAAOkX,GAC/B,OAAO,GAA4BlX,EAAOkX,EAC9C,CACA,KAAAitC,CAAMrtC,EAAa3F,EAAcC,EAASpR,GACtCoU,GAAc0C,EAAa3F,EAAcC,EAASoI,KAAK7E,SAAU3U,EAAMqR,kBAC3E,CACA,cAAAqxC,CAAen5C,EAAUuN,EAAaN,EAAWC,GAC7CI,GAAUtN,EAAUuN,EAAaN,EAAWC,EAChD,CACA,KAAAjN,CAAMD,GACFiQ,KAAK7E,SAAWA,GAASpL,EAASoT,SAClCqE,MAAMxX,MAAMD,EAChB,ECtCJ,MAAM,GAAyB,CAACnC,EAAWgK,IAChC3G,EAAerD,GAChB,IAAIk/C,GAAiBl1C,EAAS,CAAEU,4BAA4B,IAC5D,IAAIm0C,GAAkB70C,EAAS,CAAEU,4BAA4B,ICEjE9K,GAAoB,IACnBw3B,MACAzd,MACA7a,MCTQ,CACXM,OAAQ,CACJs4C,eAAgBf,GAChBr2C,cAAa,MDef5H,GAAuB+J,GAAkB,CAACzC,EAAW8Q,IEhB3D,SAA+B9Q,GAAW,mBAAEuO,GAAqB,GAAS3O,EAAmBC,GAIzF,MAAO,IAHYwD,EAAerD,GAC5BkV,GACAM,GAGF5V,oBACAE,UAAWwO,GAAgBC,GAC3B1O,sBACAG,YAER,CFKsE,CAAsBA,EAAW8Q,EAAQlR,GAAmB,K","sources":["webpack://moztiq.github.io/./src/components/Navigation.tsx","webpack://moztiq.github.io/./src/components/Layout.tsx","webpack://moztiq.github.io/./src/components/Seo.tsx","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import React, { Fragment } from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { Link } from 'gatsby';\n\nconst MenuWrapper = styled.nav`\n  width: 350px;\n  min-width: 350px;\n  height: 100vh;\n  background-color: rgba(255, 99, 71, 1);\n  padding: 30px 0 0 0;\n`;\n\nconst Icons = styled.div`\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  a {\n    margin: 0 10px;\n  }\n`;\n\nconst Intro = styled.div`\n  font-size: 18px;\n  color: rgba(250, 235, 215, 1);\n  height: 200px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst MenuList = styled.ul`\n  a {\n    text-decoration: none;\n  }\n`;\n\nconst MenuItem = styled(motion.li)<{ active?: boolean }>`\n  color: ${(props) =>\n    props.active ? 'rgba(250, 235, 215, 1)' : 'rgba(255, 99, 71, 1)'};\n  height: 100px;\n  font-size: 35px;\n  font-weight: 800;\n  border-bottom: 1px dashed antiquewhite;\n  padding: 10px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${(props) =>\n    props.active ? 'rgba(255, 99, 71, 1)' : 'rgba(250, 235, 215, 1)'};\n`;\n\nconst HomeIcon = styled(motion.svg)`\n  font-size: 25px;\n`;\n\nconst GithubIcon = styled(motion.svg)`\n  font-size: 30px;\n`;\n\nconst iconVariants = {\n  hidden: {\n    pathLength: 0,\n    fill: 'rgba(255, 255, 255, 1)',\n  },\n  visible: {\n    pathLength: 1,\n    fill: 'rgba(0, 0, 0, 1)',\n    transition: {\n      duration: 1,\n    },\n  },\n};\n\nconst menuItemVariants = {\n  initial: {\n    color: 'rgba(250, 235, 215, 1)',\n    backgroundColor: 'rgba(255, 99, 71, 1)',\n  },\n  whileHover: {\n    color: 'rgba(255, 99, 71, 1)',\n    backgroundColor: 'rgba(250, 235, 215, 1)',\n  },\n};\n\nexport default function Navigation() {\n  const menuList = ['tech', 'book'];\n  const location = typeof window !== 'undefined' ? window.location.href : '';\n\n  return (\n    <MenuWrapper>\n      <Icons>\n        <Link to={`/`}>\n          <HomeIcon\n            xmlns=\"http://www.w3.org/2000/svg\"\n            height=\"1em\"\n            viewBox=\"0 0 576 512\"\n          >\n            <motion.path\n              variants={iconVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              d=\"M543.8 287.6c17 0 32-14 32-32.1c1-9-3-17-11-24L512 185V64c0-17.7-14.3-32-32-32H448c-17.7 0-32 14.3-32 32v36.7L309.5 7c-6-5-14-7-21-7s-15 1-22 8L10 231.5c-7 7-10 15-10 24c0 18 14 32.1 32 32.1h32v69.7c-.1 .9-.1 1.8-.1 2.8V472c0 22.1 17.9 40 40 40h16c1.2 0 2.4-.1 3.6-.2c1.5 .1 3 .2 4.5 .2H160h24c22.1 0 40-17.9 40-40V448 384c0-17.7 14.3-32 32-32h64c17.7 0 32 14.3 32 32v64 24c0 22.1 17.9 40 40 40h24 32.5c1.4 0 2.8 0 4.2-.1c1.1 .1 2.2 .1 3.3 .1h16c22.1 0 40-17.9 40-40V455.8c.3-2.6 .5-5.3 .5-8.1l-.7-160.2h32z\"\n            />\n          </HomeIcon>\n        </Link>\n        <a href=\"https://github.com/moztiq\" target=\"_blank\">\n          {/*<FontAwesomeIcon icon={faGithub} size=\"2x\" />*/}\n          <GithubIcon\n            xmlns=\"http://www.w3.org/2000/svg\"\n            height=\"1em\"\n            viewBox=\"0 0 496 512\"\n          >\n            <motion.path\n              variants={iconVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"\n            />\n          </GithubIcon>\n        </a>\n      </Icons>\n      <Intro>MOZTIQ 의 블로그입니다.</Intro>\n      <MenuList>\n        {menuList.map((menu, idx) => (\n          <Fragment key={idx}>\n            {location.includes(menu) ? (\n              <MenuItem>{menu.toUpperCase()}</MenuItem>\n            ) : (\n              <Link to={`/${menu}`}>\n                <MenuItem\n                  active\n                  variants={menuItemVariants}\n                  initial=\"initial\"\n                  whileHover=\"whileHover\"\n                  transition={{ duration: 0.5 }}\n                >\n                  {menu.toUpperCase()}\n                </MenuItem>\n              </Link>\n            )}\n          </Fragment>\n        ))}\n      </MenuList>\n    </MenuWrapper>\n  );\n}\n","import styled from 'styled-components';\nimport Navigation from './Navigation';\nimport React from 'react';\n\nconst Main = styled.main`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  font-family: 'Noto Sans KR', sans-serif;\n  position: fixed;\n`;\n\ninterface ILayoutProps {\n  children: React.ReactNode;\n}\nexport default function Layout({ children }: ILayoutProps) {\n  return (\n    <Main>\n      <Navigation></Navigation>\n      {children}\n    </Main>\n  );\n}\n","import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\n\ninterface ISeoProps {\n  title: string;\n}\n\nexport default function Seo({ title }: ISeoProps) {\n  const data = useStaticQuery<Queries.SeoDataQuery>(graphql`\n    query SeoData {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <title>\n      {title} | {data.site?.siteMetadata?.title}\n    </title>\n  );\n}\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...transition,\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MenuWrapper","styled","nav","withConfig","displayName","componentId","Icons","div","Intro","MenuList","ul","MenuItem","motion","li","props","active","HomeIcon","svg","GithubIcon","iconVariants","hidden","pathLength","fill","visible","transition","duration","menuItemVariants","initial","color","backgroundColor","whileHover","Navigation","location","window","href","React","Link","to","xmlns","height","viewBox","path","variants","animate","d","target","map","menu","idx","Fragment","key","includes","toUpperCase","Main","main","Layout","_ref","children","Seo","_data$site","_data$site$siteMetada","title","data","useStaticQuery","site","siteMetadata","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","some","name","isVariantNode","Boolean","useCreateMotionContext","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","canHandoff","HandoffAppearAnimations","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathSpacing","pathOffset","latest","isSVGTag","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","charAt","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","valueTarget","noop","any","Queue","constructor","this","order","scheduled","add","process","push","remove","index","splice","delete","clear","stepsOrder","schedule","cancel","cancelFrame","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","keepAlive","immediate","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","performance","now","createRenderBatcher","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","from","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","iterations","direction","animateStyle","owner","syncStart","timeline","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute"],"sourceRoot":""}