{"version":3,"file":"component---src-pages-tech-index-tsx-d69cddbaa92ad8c805a2.js","mappings":"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","sources":["webpack://moztiq.github.io/./src/components/ContentExplain.tsx","webpack://moztiq.github.io/./src/components/post/PostCard.tsx","webpack://moztiq.github.io/./src/components/post/PostList.tsx","webpack://moztiq.github.io/./src/pages/tech/index.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nconst TopBackground = styled.div`\n  display: flex;\n  justify-content: center;\n  height: 200px;\n  background-color: ${(props) => props.theme.colors.gray200};\n  background-size: cover;\n`;\n\nconst ContentExplainWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 80%;\n  position: relative;\n`;\n\nconst ContentExplainTitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst IconWrapper = styled.div`\n  margin-right: 30px;\n  font-size: 1.5rem;\n  color: ${(props) => props.theme.colors.accentColor};\n`;\n\nconst ContentExplainTitle = styled.span`\n  font-size: 1.5rem;\n  color: ${(props) => props.theme.colors.gray500};\n  letter-spacing: 1px;\n  span {\n    color: ${(props) => props.theme.colors.gray800};\n    font-weight: bold;\n    font-size: 40px;\n  }\n  span.accent {\n    margin: 0 20px;\n    color: ${(props) => props.theme.colors.accentColor};\n    font-size: 28px;\n  }\n\n  @media screen and (max-width: 768px) {\n    font-size: 18px;\n    span {\n      font-size: 28px;\n    }\n  }\n`;\n\nconst ContentExplainDescription = styled.div`\n  margin-top: 20px;\n  font-size: 1rem;\n  color: ${(props) => props.theme.colors.gray500};\n  line-height: 1.5;\n`;\n\ninterface IContentExplainProps {\n  icon: ReactNode;\n  title: string;\n  description: string;\n}\n\nexport default function ContentExplain(props: IContentExplainProps) {\n  return (\n    <TopBackground>\n      <ContentExplainWrapper>\n        <ContentExplainTitleWrapper>\n          <IconWrapper>{props.icon}</IconWrapper>\n          <ContentExplainTitle\n            dangerouslySetInnerHTML={{ __html: props.title }}\n          />\n        </ContentExplainTitleWrapper>\n        <ContentExplainDescription>\n          {props.description}\n        </ContentExplainDescription>\n      </ContentExplainWrapper>\n    </TopBackground>\n  );\n}\n","import Moment from 'react-moment';\nimport { extractText } from '../../utils/string.utils';\nimport { Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { IPostProps } from '../../interface/interfaces';\n\nconst Post = styled.li`\n  padding: 3rem;\n  margin-top: 40px;\n  background-color: ${(props) => props.theme.colors.white};\n  box-shadow: 0 0 0 1px rgba(23, 23, 23, 0.05);\n  border-radius: 0.5rem;\n  transition: all 0.2s;\n\n  @media screen and (max-width: 430px) {\n    padding: 1.5rem;\n  }\n\n  &:hover {\n    box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.15);\n  }\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 20px;\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: #484848;\n  text-align: center;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  padding: 5px 0;\n\n  @media screen and (max-width: 768px) {\n    font-size: 1.1rem;\n  }\n`;\n\nconst PublishDateLine = styled.div`\n  height: 15px;\n  border-bottom: 1px solid gainsboro;\n  position: relative;\n  display: flex;\n  justify-content: center;\n`;\n\nconst PublishDate = styled.div`\n  font-size: 0.8rem;\n  font-weight: bold;\n  letter-spacing: 1.5px;\n  width: 150px;\n  height: 30px;\n  color: ${(props) => props.theme.colors.accentColor};\n  background-color: ${(props) => props.theme.colors.white};\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 50px;\n`;\n\nconst HeaderImage = styled.div<{ url: string }>`\n  width: 225px;\n  min-width: 225px;\n  margin-right: 20px;\n  height: 180px;\n  background-image: url(${(props) => props.url});\n  background-size: cover;\n  border-radius: 8px;\n  border: 1px solid ${(props) => props.theme.colors.gray200};\n\n  @media screen and (max-width: 1024px) {\n    width: 125px;\n    min-width: 125px;\n    margin-right: 10px;\n  }\n`;\n\nconst ContentTextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ContentText = styled.p`\n  font-size: 0.95rem;\n  color: #484848;\n  line-height: 1.7;\n  text-decoration: none;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 100%;\n  display: -webkit-box;\n  -webkit-line-clamp: 5;\n  -webkit-box-orient: vertical;\n  text-align: justify;\n  overflow-wrap: anywhere;\n`;\n\nconst TagList = styled.ul`\n  margin-top: 10px;\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 3px;\n`;\n\nconst Tag = styled.li`\n  padding: 5px 10px;\n  margin-right: 10px;\n  font-size: 0.9rem;\n  border-radius: 5px;\n  color: ${(props) => props.theme.colors.gray600};\n  background-color: ${(props) => props.theme.colors.gray100};\n\n  @media screen and (max-width: 768px) {\n    font-size: 0.7rem;\n    margin-right: 5px;\n  }\n`;\n\nexport default function PostCard({ post }: { post: IPostProps }) {\n  return (\n    <Link to={`/post/${post.slug}`}>\n      <Post>\n        <Title>{post.title}</Title>\n        <PublishDateLine>\n          <PublishDate>\n            <Moment format=\"MMM D, YYYY\">{post.releaseDate}</Moment>\n          </PublishDate>\n        </PublishDateLine>\n        <ContentWrapper>\n          {post.headerImage?.url && (\n            <HeaderImage url={post.headerImage?.url || ''} />\n          )}\n          <ContentTextWrapper>\n            <ContentText>\n              {/*{post.contents.childMarkdownRemark.excerpt}*/}\n              {extractText(post.contents.childMarkdownRemark.html)}\n            </ContentText>\n            <TagList>\n              {post.tag.map((item, idx) => (\n                <Tag key={idx}>#{item}</Tag>\n              ))}\n            </TagList>\n          </ContentTextWrapper>\n        </ContentWrapper>\n      </Post>\n    </Link>\n  );\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport PostCard from './PostCard';\nimport { IPostProps } from '../../interface/interfaces';\n\nconst PostListContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst PostListWrapper = styled.ul`\n  width: 75%;\n  a {\n    text-decoration: none;\n  }\n  padding-bottom: 50px;\n\n  @media screen and (max-width: 768px) {\n    width: 95%;\n  }\n`;\n\nexport default function PostList({ posts }: { posts: IPostProps[] }) {\n  return (\n    <PostListContainer>\n      <PostListWrapper>\n        {posts &&\n          posts.map((post: IPostProps) => (\n            <PostCard key={post.slug} post={post} />\n          ))}\n      </PostListWrapper>\n    </PostListContainer>\n  );\n}\n","import * as React from 'react';\nimport { graphql, PageProps } from 'gatsby';\nimport Layout from '../../components/Layout';\nimport PostList from '../../components/post/PostList';\nimport ContentContainer from '../../components/ContentContainer';\nimport Seo from '../../components/Seo';\nimport {\n  Category,\n  SectionIcon,\n  SectionTitle,\n} from '../../constants/common.constant';\nimport ContentExplain from '../../components/ContentExplain';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default function TechPage({ data }: PageProps<Queries.TechListQuery>) {\n  const posts = data.allContentfulMoztiqBlog.nodes;\n  return (\n    <Layout>\n      <ContentContainer title={SectionTitle(Category.TECH)}>\n        <ContentExplain\n          icon={<FontAwesomeIcon icon={SectionIcon(Category.TECH)} />}\n          title={`<span>TECH</span> ${SectionTitle(Category.TECH)}`}\n          description={`기술에 대한 깊이가 부족해 항상 허덕입니다. 기록해두면 조금 나아지지 않을까 싶네요.`}\n        />\n        <PostList posts={posts as any} />\n      </ContentContainer>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query TechList {\n    allContentfulMoztiqBlog(\n      filter: { category: { eq: \"tech\" } }\n      sort: { createdAt: DESC }\n    ) {\n      nodes {\n        id\n        title\n        slug\n        category\n        releaseDate\n        headerImage {\n          url\n        }\n        contents {\n          childMarkdownRemark {\n            html\n            excerpt\n          }\n        }\n        tag\n      }\n    }\n  }\n`;\n\nexport const Head = () => {\n  return (\n    <Seo title={'TECH SECTION'} description={'TECH SECTION'} url={`/tech`} />\n  );\n};\n"],"names":["TopBackground","styled","div","withConfig","displayName","componentId","props","theme","colors","gray200","ContentExplainWrapper","ContentExplainTitleWrapper","IconWrapper","accentColor","ContentExplainTitle","span","gray500","gray800","ContentExplainDescription","ContentExplain","React","icon","dangerouslySetInnerHTML","__html","title","description","Post","li","white","Title","h1","PublishDateLine","PublishDate","ContentWrapper","HeaderImage","url","ContentTextWrapper","ContentText","p","TagList","ul","Tag","gray600","gray100","PostCard","_ref","_post$headerImage","_post$headerImage2","post","Link","to","slug","Moment","format","releaseDate","headerImage","extractText","contents","childMarkdownRemark","html","tag","map","item","idx","key","PostListContainer","PostListWrapper","PostList","posts","TechPage","data","allContentfulMoztiqBlog","nodes","Layout","ContentContainer","SectionTitle","Category","TECH","FontAwesomeIcon","SectionIcon","Head","Seo"],"sourceRoot":""}