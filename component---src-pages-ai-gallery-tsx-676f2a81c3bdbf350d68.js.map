{"version":3,"file":"component---src-pages-ai-gallery-tsx-676f2a81c3bdbf350d68.js","mappings":"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","sources":["webpack://moztiq.github.io/./src/components/ContentContainerTop.tsx","webpack://moztiq.github.io/./src/components/ContentContainer.tsx","webpack://moztiq.github.io/./src/components/ContentExplain.tsx","webpack://moztiq.github.io/./src/components/gallery/GalleryCard.tsx","webpack://moztiq.github.io/./src/components/gallery/GalleryList.tsx","webpack://moztiq.github.io/./src/pages/ai/gallery.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nconst TopWrapper = styled.div`\n  width: 100%;\n  height: 60px;\n  min-height: 60px;\n  color: ${(props) => props.theme.colors.textPrimary};\n  background-color: ${(props) => props.theme.colors.gray100};\n  z-index: 5;\n  border-bottom: 1px solid ${(props) => props.theme.colors.gray200};\n\n  @media screen and (max-width: 1024px) {\n    position: fixed;\n    top: 0;\n    right: 0;\n  }\n`;\n\nconst TitleWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Title = styled.h1`\n  font-size: 1.1rem;\n  font-weight: 500;\n  letter-spacing: 1px;\n  padding-right: 25px;\n`;\n\nexport default function ContentContainerTop({\n  children,\n}: {\n  children: ReactNode;\n}) {\n  return (\n    <TopWrapper>\n      <TitleWrapper>\n        <Title>{children}</Title>\n      </TitleWrapper>\n    </TopWrapper>\n  );\n}\n","import React, { ReactNode, useEffect } from 'react';\nimport styled from 'styled-components';\nimport ContentContainerTop from './ContentContainerTop';\n\nconst ContentContainerWrapper = styled.div`\n  width: 100%;\n  background-color: ${(props) => props.theme.colors.background};\n  overflow-y: scroll;\n  overflow-x: hidden;\n  scroll-behavior: smooth;\n  @media screen and (max-width: 768px) {\n    position: absolute;\n  }\n`;\n\ninterface IContentContainerProps {\n  children: ReactNode;\n  title: string;\n}\n\nexport default function ContentContainer({\n  title,\n  children,\n}: IContentContainerProps) {\n  return (\n    <ContentContainerWrapper>\n      <ContentContainerTop>{title}</ContentContainerTop>\n      {children}\n    </ContentContainerWrapper>\n  );\n}\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nconst TopBackground = styled.div`\n  display: flex;\n  justify-content: center;\n  height: 200px;\n  background-color: ${(props) => props.theme.colors.gray200};\n  background-size: cover;\n\n  @media screen and (max-width: 1024px) {\n    margin-top: 60px;\n  }\n`;\n\nconst ContentExplainWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 80%;\n  position: relative;\n`;\n\nconst ContentExplainTitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n`;\n\nconst IconWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: -40px;\n  font-size: 1.3rem;\n  color: ${(props) => props.theme.colors.accentColor};\n`;\n\nconst ContentExplainTitle = styled.span`\n  font-size: 1.3rem;\n  color: ${(props) => props.theme.colors.gray500};\n  letter-spacing: 1px;\n  span {\n    color: ${(props) => props.theme.colors.gray800};\n    font-weight: bold;\n    font-size: 2.5rem;\n  }\n  span.accent {\n    margin: 0 20px;\n    color: ${(props) => props.theme.colors.accentColor};\n    font-size: 28px;\n  }\n\n  @media screen and (max-width: 430px) {\n    font-size: 1.1rem;\n    span {\n      font-size: 1.8rem;\n    }\n  }\n`;\n\nconst ContentExplainDescription = styled.div`\n  margin-top: 20px;\n  font-size: 1rem;\n  color: ${(props) => props.theme.colors.gray500};\n  line-height: 1.5;\n`;\n\ninterface IContentExplainProps {\n  icon: ReactNode;\n  title: string;\n  description: string;\n}\n\nexport default function ContentExplain(props: IContentExplainProps) {\n  return (\n    <TopBackground>\n      <ContentExplainWrapper>\n        <ContentExplainTitleWrapper>\n          <IconWrapper>{props.icon}</IconWrapper>\n          <ContentExplainTitle\n            dangerouslySetInnerHTML={{ __html: props.title }}\n          />\n        </ContentExplainTitleWrapper>\n        <ContentExplainDescription>\n          {props.description}\n        </ContentExplainDescription>\n      </ContentExplainWrapper>\n    </TopBackground>\n  );\n}\n","import { Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { IGalleryProps } from '../../interface/interfaces';\n\nconst Gallery = styled.li<{ image: string }>`\n  background-image: url(${(props) => props.image});\n  background-size: cover;\n  box-shadow: 0 2px 3px 1px rgba(0, 0, 0, 0.15);\n  border-radius: 0.5rem;\n  transition: all 0.2s;\n  height: 200px;\n\n  &:hover {\n    box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.35);\n  }\n`;\n\nconst Title = styled.span`\n  margin-top: 20px;\n  padding: 10px;\n  font-size: 0.85rem;\n  text-align: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  color: ${(props) => props.theme.colors.white};\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 0.5rem 0.5rem 0 0;\n`;\n\nexport default function GalleryCard({ gallery }: { gallery: IGalleryProps }) {\n  return (\n    <Link to={`/gallery/${gallery.slug}`}>\n      <Gallery image={gallery.headerImage.url}>\n        <Title>{gallery.title}</Title>\n      </Gallery>\n    </Link>\n  );\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport GalleryCard from './GalleryCard';\nimport { IGalleryProps } from '../../interface/interfaces';\n\nconst GalleryListWrapper = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-column-gap: 30px;\n  grid-row-gap: 30px;\n  width: 85%;\n  a {\n    text-decoration: none;\n  }\n  margin: 30px 0;\n\n  @media screen and (max-width: 1024px) {\n    width: 95%;\n    grid-template-columns: repeat(2, 1fr);\n    grid-column-gap: 20px;\n  }\n\n  @media screen and (max-width: 430px) {\n    width: 95%;\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport default function GalleryList(props: { list: IGalleryProps[] }) {\n  return (\n    <GalleryListWrapper>\n      {props.list &&\n        props.list.map((gallery: IGalleryProps) => (\n          <GalleryCard key={gallery.slug} gallery={gallery} />\n        ))}\n    </GalleryListWrapper>\n  );\n}\n","import * as React from 'react';\nimport type { PageProps } from 'gatsby';\nimport { graphql } from 'gatsby';\nimport PostList from '../../components/post/PostList';\nimport Seo from '../../components/Seo';\nimport {\n  Category,\n  SectionDescription,\n  SectionTitle,\n} from '../../constants/common.constant';\nimport AiLayout from '../../components/layout/AiLayout';\nimport styled from 'styled-components';\nimport GalleryList from '../../components/gallery/GalleryList';\n\nconst GalleryListContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport default function AiGalleryPage({\n  data,\n}: PageProps<Queries.AiGalleryListQuery>) {\n  const list = data.allContentfulGallery.nodes;\n  return (\n    <AiLayout>\n      <GalleryListContainer>\n        <GalleryList list={list as any} />\n      </GalleryListContainer>\n    </AiLayout>\n  );\n}\n\nexport const query = graphql`\n  query AiGalleryList {\n    allContentfulGallery(\n      filter: { category: { eq: \"ai\" } }\n      sort: { createdAt: DESC }\n    ) {\n      nodes {\n        id\n        title\n        slug\n        category\n        author\n        headerImage {\n          url\n        }\n        contents {\n          childMarkdownRemark {\n            html\n            excerpt\n          }\n        }\n        tag\n      }\n    }\n  }\n`;\n\nexport const Head = () => {\n  return (\n    <Seo\n      title={SectionTitle(Category.AI)}\n      description={SectionDescription(Category.AI)}\n      url={`/ai`}\n    />\n  );\n};\n"],"names":["TopWrapper","styled","div","withConfig","displayName","componentId","props","theme","colors","textPrimary","gray100","gray200","TitleWrapper","Title","h1","ContentContainerTop","_ref","children","React","ContentContainerWrapper","background","ContentContainer","title","TopBackground","ContentExplainWrapper","ContentExplainTitleWrapper","IconWrapper","accentColor","ContentExplainTitle","span","gray500","gray800","ContentExplainDescription","ContentExplain","icon","dangerouslySetInnerHTML","__html","description","Gallery","li","image","white","GalleryCard","gallery","Link","to","slug","headerImage","url","GalleryListWrapper","ul","GalleryList","list","map","key","GalleryListContainer","AiGalleryPage","data","allContentfulGallery","nodes","AiLayout","Head","Seo","SectionTitle","Category","AI","SectionDescription"],"sourceRoot":""}