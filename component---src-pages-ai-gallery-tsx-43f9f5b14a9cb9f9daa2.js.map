{"version":3,"file":"component---src-pages-ai-gallery-tsx-43f9f5b14a9cb9f9daa2.js","mappings":"8MAUA,MAAMA,GAAUC,EAAAA,EAAAA,SAAOC,EAAAA,EAAOC,IAAGC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAjBL,CAAiB,wMACNM,GAAUA,EAAMC,QAYrCC,EAAQR,EAAAA,QAAOS,KAAIN,WAAA,CAAAC,YAAA,qBAAAC,YAAA,eAAXL,CAAW,gRAWbM,GAAUA,EAAMI,MAAMC,OAAOC,QAK1B,SAASC,EAAWC,GAA2C,IAA1C,QAAEC,GAAqCD,EACzE,OACEE,EAAAA,cAACC,EAAAA,KAAI,CAACC,GAAE,YAAcH,EAAQI,MAC5BH,EAAAA,cAACjB,EAAOqB,OAAAC,OAAA,GACFC,EAAAA,GACAC,EAAAA,GAAqB,CACzBhB,MAAOQ,EAAQS,YAAYC,MAE3BT,EAAAA,cAACR,EAAK,KAAEO,EAAQW,QAIxB,C,wJCjDO,MAAMC,EAAwB,SAExBC,EAA8B,CACzCC,QAAS,CACPC,QAAS,EACTC,EAAG,GACHC,WAAY,CAAEC,SAAU,GAAKC,KAAMP,GACnCQ,WAAY,sBAEdC,QAAS,CACPN,QAAS,EACTC,EAAG,EACHC,WAAY,CAAEC,SAAU,GAAKC,KAAMP,GACnCQ,WAAY,sBAEdE,KAAM,CACJP,QAAS,EACTC,GAAI,GACJC,WAAY,CAAEC,SAAU,GAAKC,KAAMP,GACnCQ,WAAY,uBAIHG,EAA4B,CACvCC,WAAY,CAAEC,GAAI,EAAGL,WAAY,cAGtBb,EAA0B,CACrCO,QAAS,CACPY,QAAS,EACTT,WAAY,CAAEC,SAAU,GAAKC,KAAMP,GACnCQ,WAAY,aAEdC,QAAS,CACPK,OAAQ,EACRT,WAAY,CAAEC,SAAU,GAAKC,KAAMP,GACnCQ,WAAY,cAIHZ,EAAkC,CAC7CgB,WAAY,CACVG,MAAO,KACPD,OAAQ,EACRN,WAAY,YACZH,WAAY,CAAEC,SAAU,MAIfU,EAAwB,CACnCd,QAAS,CACPe,QAAS,EACTT,WAAY,aAEdC,QAAS,CACPQ,QAAS,IACTT,WAAY,aAEdI,WAAY,CAAEK,QAAS,EAAGT,WAAY,a,8JCvDxC,MAAMU,EAAqB7C,EAAAA,QAAO8C,GAAE3C,WAAA,CAAAC,YAAA,kCAAAC,YAAA,eAATL,CAAS,gUAuBrB,SAAS+C,EAAYzC,GAClC,OACEU,EAAAA,cAAC6B,EAAkB,KAChBvC,EAAM0C,MACL1C,EAAM0C,KAAKC,KAAKlC,GACdC,EAAAA,cAACH,EAAAA,EAAW,CAACqC,IAAKnC,EAAQI,KAAMJ,QAASA,MAInD,CCvBA,MAAMoC,EAAuBnD,EAAAA,QAAOoD,IAAGjD,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAAVL,CAAU,0CAKxB,SAASqD,EAAavC,GAEK,IAFJ,KACpCwC,GACsCxC,EACtC,MAAMkC,EAAOM,EAAKC,qBAAqBC,MACvC,OACExC,EAAAA,cAACyC,EAAAA,EAAQ,KACPzC,EAAAA,cAACmC,EAAoB,KACnBnC,EAAAA,cAAC+B,EAAW,CAACC,KAAMA,KAI3B,CAEO,MA2BMU,EAAOA,IAEhB1C,EAAAA,cAAC2C,EAAAA,EAAG,CACFjC,OAAOkC,EAAAA,EAAAA,IAAaC,EAAAA,GAASC,IAC7BC,aAAaC,EAAAA,EAAAA,IAAmBH,EAAAA,GAASC,IACzCrC,IAAG,O","sources":["webpack://moztiq.github.io/./src/components/gallery/GalleryCard.tsx","webpack://moztiq.github.io/./src/constants/animation.constant.ts","webpack://moztiq.github.io/./src/components/gallery/GalleryList.tsx","webpack://moztiq.github.io/./src/pages/ai/gallery.tsx"],"sourcesContent":["import { Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { IGalleryProps } from '../../interface/interfaces';\nimport {\n  hoverScaleRotateRight,\n  rotateVariant,\n} from '../../constants/animation.constant';\nimport { motion } from 'framer-motion';\n\nconst Gallery = styled(motion.li)<{ image: string }>`\n  background-image: url(${(props) => props.image});\n  background-size: cover;\n  box-shadow: 0 2px 3px 1px rgba(0, 0, 0, 0.15);\n  border-radius: 0.5rem;\n  transition: all 0.2s;\n  height: 200px;\n\n  &:hover {\n    box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.35);\n  }\n`;\n\nconst Title = styled.span`\n  margin-top: 20px;\n  padding: 0 10px;\n  line-height: 2.5;\n  font-size: 0.85rem;\n  text-align: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  color: ${(props) => props.theme.colors.white};\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 0.5rem 0.5rem 0 0;\n`;\n\nexport default function GalleryCard({ gallery }: { gallery: IGalleryProps }) {\n  return (\n    <Link to={`/gallery/${gallery.slug}`}>\n      <Gallery\n        {...rotateVariant}\n        {...hoverScaleRotateRight}\n        image={gallery.headerImage.url}\n      >\n        <Title>{gallery.title}</Title>\n      </Gallery>\n    </Link>\n  );\n}\n","import { Easing, Variants } from 'framer-motion';\n\nexport const defaultEasing: Easing = 'easeIn';\n\nexport const fadeInSlideToLeft: Variants = {\n  initial: {\n    opacity: 0,\n    x: 30,\n    transition: { duration: 0.5, ease: defaultEasing },\n    willChange: 'opacity, transform',\n  },\n  animate: {\n    opacity: 1,\n    x: 0,\n    transition: { duration: 0.5, ease: defaultEasing },\n    willChange: 'opacity, transform',\n  },\n  exit: {\n    opacity: 0,\n    x: -30,\n    transition: { duration: 0.5, ease: defaultEasing },\n    willChange: 'opacity, transform',\n  },\n};\n\nexport const hoverSlideToTop: Variants = {\n  whileHover: { y: -5, willChange: 'transform' },\n};\n\nexport const rotateVariant: Variants = {\n  initial: {\n    rotate: -3,\n    transition: { duration: 0.1, ease: defaultEasing },\n    willChange: 'transform',\n  },\n  animate: {\n    rotate: 0,\n    transition: { duration: 0.1, ease: defaultEasing },\n    willChange: 'transform',\n  },\n};\n\nexport const hoverScaleRotateRight: Variants = {\n  whileHover: {\n    scale: 1.05,\n    rotate: 3,\n    willChange: 'transform',\n    transition: { duration: 0.1 },\n  },\n};\n\nexport const flipVariant: Variants = {\n  initial: {\n    rotateX: 0,\n    willChange: 'transform',\n  },\n  animate: {\n    rotateX: 360,\n    willChange: 'transform',\n  },\n  whileHover: { rotateX: 0, willChange: 'transform' },\n};\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport GalleryCard from './GalleryCard';\nimport { IGalleryProps } from '../../interface/interfaces';\n\nconst GalleryListWrapper = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-column-gap: 30px;\n  grid-row-gap: 30px;\n  width: 85%;\n  a {\n    text-decoration: none;\n  }\n  margin: 30px 0;\n\n  @media screen and (max-width: 1024px) {\n    width: 95%;\n    grid-template-columns: repeat(2, 1fr);\n    grid-column-gap: 20px;\n  }\n\n  @media screen and (max-width: 430px) {\n    width: 95%;\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport default function GalleryList(props: { list: IGalleryProps[] }) {\n  return (\n    <GalleryListWrapper>\n      {props.list &&\n        props.list.map((gallery: IGalleryProps) => (\n          <GalleryCard key={gallery.slug} gallery={gallery} />\n        ))}\n    </GalleryListWrapper>\n  );\n}\n","import * as React from 'react';\nimport type { PageProps } from 'gatsby';\nimport { graphql } from 'gatsby';\nimport PostList from '../../components/post/PostList';\nimport Seo from '../../components/Seo';\nimport {\n  Category,\n  SectionDescription,\n  SectionTitle,\n} from '../../constants/common.constant';\nimport AiLayout from '../../components/layout/AiLayout';\nimport styled from 'styled-components';\nimport GalleryList from '../../components/gallery/GalleryList';\n\nconst GalleryListContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport default function AiGalleryPage({\n  data,\n}: PageProps<Queries.AiGalleryListQuery>) {\n  const list = data.allContentfulGallery.nodes;\n  return (\n    <AiLayout>\n      <GalleryListContainer>\n        <GalleryList list={list as any} />\n      </GalleryListContainer>\n    </AiLayout>\n  );\n}\n\nexport const query = graphql`\n  query AiGalleryList {\n    allContentfulGallery(\n      filter: { category: { eq: \"ai\" } }\n      sort: { createdAt: DESC }\n    ) {\n      nodes {\n        id\n        title\n        slug\n        category\n        author\n        headerImage {\n          url\n        }\n        contents {\n          childMarkdownRemark {\n            html\n            excerpt\n          }\n        }\n        tag\n      }\n    }\n  }\n`;\n\nexport const Head = () => {\n  return (\n    <Seo\n      title={SectionTitle(Category.AI)}\n      description={SectionDescription(Category.AI)}\n      url={`/ai`}\n    />\n  );\n};\n"],"names":["Gallery","styled","motion","li","withConfig","displayName","componentId","props","image","Title","span","theme","colors","white","GalleryCard","_ref","gallery","React","Link","to","slug","Object","assign","rotateVariant","hoverScaleRotateRight","headerImage","url","title","defaultEasing","fadeInSlideToLeft","initial","opacity","x","transition","duration","ease","willChange","animate","exit","hoverSlideToTop","whileHover","y","rotate","scale","flipVariant","rotateX","GalleryListWrapper","ul","GalleryList","list","map","key","GalleryListContainer","div","AiGalleryPage","data","allContentfulGallery","nodes","AiLayout","Head","Seo","SectionTitle","Category","AI","description","SectionDescription"],"sourceRoot":""}