{"version":3,"file":"component---src-pages-index-tsx-ed64757c286b03f8a7e3.js","mappings":"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","sources":["webpack://moztiq.github.io/./src/components/gallery/GalleryCard.tsx","webpack://moztiq.github.io/./src/components/post/MainPostCard.tsx","webpack://moztiq.github.io/./src/pages/index.tsx"],"sourcesContent":["import { Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { IGalleryProps } from '../../interface/interfaces';\nimport {\n  hoverScaleRotateRight,\n  rotateVariant,\n} from '../../constants/animation.constant';\nimport { motion } from 'framer-motion';\n\nconst Gallery = styled(motion.li)<{ image: string }>`\n  background-image: url(${(props) => props.image});\n  background-size: cover;\n  box-shadow: 0 2px 3px 1px rgba(0, 0, 0, 0.15);\n  border-radius: 0.5rem;\n  transition: all 0.2s;\n  height: 200px;\n\n  &:hover {\n    box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.35);\n  }\n`;\n\nconst Title = styled.span`\n  margin-top: 20px;\n  padding: 0 10px;\n  line-height: 2.5;\n  font-size: 0.85rem;\n  text-align: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  color: ${(props) => props.theme.colors.white};\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 0.5rem 0.5rem 0 0;\n`;\n\nexport default function GalleryCard({ gallery }: { gallery: IGalleryProps }) {\n  return (\n    <Link to={`/gallery/${gallery.slug}`}>\n      <Gallery\n        {...rotateVariant}\n        {...hoverScaleRotateRight}\n        image={gallery.headerImage.url}\n      >\n        <Title>{gallery.title}</Title>\n      </Gallery>\n    </Link>\n  );\n}\n","import Moment from 'react-moment';\nimport { extractText } from '../../utils/string.utils';\nimport { Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { IPostProps } from '../../interface/interfaces';\nimport { SectionTitle } from '../../constants/common.constant';\n\nconst Post = styled.li`\n  a {\n    text-decoration: none;\n  }\n  margin: 40px 0;\n`;\n\nconst Title = styled.h2`\n  display: inline-block;\n  font-size: 1.2rem;\n  color: ${(props) => props.theme.colors.textPrimary};\n  text-decoration: underline;\n\n  @media screen and (max-width: 430px) {\n    font-size: 1.1rem;\n  }\n`;\n\nconst ContentText = styled.p`\n  margin: 10px 0;\n  font-size: 1rem;\n  color: #484848;\n  line-height: 1.5;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 100%;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  text-align: justify;\n  overflow-wrap: anywhere;\n\n  @media screen and (max-width: 430px) {\n    font-size: 0.9rem;\n  }\n`;\n\nconst Bottom = styled.div`\n  text-align: right;\n  font-size: 0.9rem;\n  color: ${(props) => props.theme.colors.gray400};\n`;\n\nconst Category = styled.span`\n  text-decoration: underline;\n  color: ${(props) => props.theme.colors.accentColor};\n`;\n\nexport default function MainPostCard({ post }: { post: IPostProps }) {\n  return (\n    <Post>\n      <Link to={`/post/${post.slug}`}>\n        <Title>{post.title}</Title>\n      </Link>\n      <ContentText>\n        {extractText(post.contents.childMarkdownRemark.html)}\n      </ContentText>\n      <Bottom>\n        <Link to={`/${post?.category!}`}>\n          <Category>{SectionTitle(post?.category!)}</Category>\n        </Link>\n        {' / '}\n        <Moment format=\"YYYY.MM.DD\">{post.releaseDate}</Moment>\n      </Bottom>\n    </Post>\n  );\n}\n","import * as React from 'react';\nimport type { PageProps } from 'gatsby';\nimport { graphql, Link } from 'gatsby';\nimport styled from 'styled-components';\nimport Layout from '../components/layout/Layout';\nimport Seo from '../components/Seo';\nimport MainPostCard from '../components/post/MainPostCard';\nimport GalleryCard from '../components/gallery/GalleryCard';\nimport { extractText } from '../utils/string.utils';\nimport ContentContainer from '../components/ContentContainer';\n\nconst MainContainer = styled.div`\n  width: 100%;\n  overflow-y: auto;\n  background-color: ${(props) => props.theme.colors.white};\n  padding-bottom: 30px;\n  @media screen and (max-width: 1024px) {\n    padding-top: 60px;\n  }\n`;\n\nconst TopBackground = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.6);\n  padding: 4rem 0 3rem 0;\n\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nconst QuoteContainer = styled.ul`\n  max-width: 50%;\n\n  @media screen and (max-width: 768px) {\n    max-width: 70%;\n    margin-bottom: 5rem;\n  }\n`;\n\nconst QuoteTitle = styled.h1`\n  font-size: 1.3rem;\n  font-weight: 500;\n  letter-spacing: 0.3rem;\n  margin-bottom: 20px;\n  a {\n    color: ${(props) => props.theme.colors.white};\n    text-decoration: underline;\n  }\n\n  @media screen and (max-width: 430px) {\n    font-size: 1.2rem;\n  }\n`;\n\nconst QuoteContent = styled.h2`\n  font-family: 'Nanum Myeongjo', serif;\n  font-size: 1.2rem;\n  font-weight: 600;\n  line-height: 1.5;\n  letter-spacing: 1px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  text-align: justify;\n\n  a {\n    color: ${(props) => props.theme.colors.gray100};\n    text-decoration: none;\n  }\n\n  @media screen and (max-width: 430px) {\n    font-size: 1.1rem;\n  }\n`;\n\nconst AuthorContainer = styled.div`\n  margin-top: 1rem;\n  font-size: 1rem;\n  color: ${(props) => props.theme.colors.gray300};\n  text-align: right;\n\n  @media screen and (max-width: 430px) {\n    font-size: 0.9rem;\n  }\n`;\n\nconst GalleryContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  a {\n    text-decoration: none;\n  }\n`;\n\nconst GalleryTitle = styled.h1`\n  font-size: 1.2rem;\n  font-weight: 500;\n  letter-spacing: 1.3px;\n  text-decoration: underline;\n  a {\n    color: ${(props) => props.theme.colors.white};\n    text-decoration: underline;\n  }\n\n  @media screen and (max-width: 430px) {\n    font-size: 1.2rem;\n  }\n`;\n\nconst GalleryContent = styled.div`\n  width: 200px;\n`;\n\nconst PostTitle = styled.h1`\n  font-size: 1.5rem;\n  margin: 40px 10% 0 10%;\n\n  @media screen and (max-width: 430px) {\n    font-size: 1.2rem;\n  }\n\n  @keyframes bounce {\n    0%,\n    100% {\n      transform: translateX(0);\n    }\n    50% {\n      transform: translateX(10px);\n    }\n  }\n\n  span {\n    font-size: 1.5rem;\n    color: blue;\n    display: inline-block;\n    animation: bounce 0.5s ease-in-out infinite;\n\n    &:nth-child(2) {\n      color: red;\n      animation-delay: 0.25s;\n    }\n  }\n`;\n\nconst PostContainer = styled.ul`\n  margin: 0 10%;\n`;\n\nexport default function IndexPage({ data }: PageProps<Queries.MainDataQuery>) {\n  const posts = data.allContentfulMoztiqBlog.nodes;\n  const galleries = data.allContentfulGallery.nodes;\n  const quotes = data.allContentfulQuote.nodes;\n  return (\n    <Layout>\n      <ContentContainer title={'Home'}>\n        <MainContainer>\n          <TopBackground>\n            <QuoteContainer>\n              <QuoteTitle>\n                <Link to={`/quote`}>Quote</Link>\n              </QuoteTitle>\n              {quotes &&\n                quotes.map((quote) => (\n                  <>\n                    <QuoteContent>\n                      <Link to={`/quote/${quote.slug}`}>\n                        {extractText(\n                          quote!.content!.childMarkdownRemark!.html ?? '',\n                        )}\n                      </Link>\n                    </QuoteContent>\n                    <AuthorContainer>\n                      - {quote.title && `${quote.title} / `}\n                      {quote.author}\n                    </AuthorContainer>\n                  </>\n                ))}\n            </QuoteContainer>\n            <GalleryContainer>\n              <GalleryTitle>\n                <Link to={`/ai/gallery`}>Prompt Gallery</Link>\n              </GalleryTitle>\n              <GalleryContent>\n                {galleries &&\n                  galleries.map((gallery) => (\n                    <GalleryCard key={gallery.slug} gallery={gallery as any} />\n                  ))}\n              </GalleryContent>\n            </GalleryContainer>\n          </TopBackground>\n\n          <PostTitle>\n            지금 쓰러 갑니다 <span>.</span>\n            <span>.</span>\n          </PostTitle>\n          <PostContainer>\n            {posts &&\n              posts.map((post) => (\n                <MainPostCard key={post.slug} post={post as any} />\n              ))}\n          </PostContainer>\n        </MainContainer>\n      </ContentContainer>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query MainData {\n    allContentfulMoztiqBlog(sort: { releaseDate: DESC }, limit: 10) {\n      nodes {\n        id\n        title\n        slug\n        category\n        releaseDate\n        headerImage {\n          url\n        }\n        contents {\n          childMarkdownRemark {\n            html\n            excerpt\n          }\n        }\n        tag\n      }\n    }\n    allContentfulGallery(\n      filter: { category: { eq: \"ai\" } }\n      sort: { createdAt: DESC }\n      limit: 1\n    ) {\n      nodes {\n        id\n        title\n        slug\n        category\n        author\n        headerImage {\n          url\n        }\n        contents {\n          childMarkdownRemark {\n            html\n            excerpt\n          }\n        }\n        tag\n      }\n    }\n    allContentfulQuote(sort: { createdAt: DESC }, limit: 1) {\n      nodes {\n        id\n        title\n        slug\n        author\n        category\n        content {\n          childMarkdownRemark {\n            excerpt\n            html\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = () => {\n  return (\n    <Seo\n      title={'HOME'}\n      description={'MOZTIQ, Experimental Personal Logs'}\n      url={`/`}\n    />\n  );\n};\n"],"names":["Gallery","styled","motion","li","withConfig","displayName","componentId","props","image","Title","span","theme","colors","white","GalleryCard","_ref","gallery","React","Link","to","slug","Object","assign","rotateVariant","hoverScaleRotateRight","headerImage","url","title","Post","h2","textPrimary","ContentText","p","Bottom","div","gray400","Category","accentColor","MainPostCard","post","extractText","contents","childMarkdownRemark","html","category","SectionTitle","Moment","format","releaseDate","MainContainer","TopBackground","QuoteContainer","ul","QuoteTitle","h1","QuoteContent","gray100","AuthorContainer","gray300","GalleryContainer","GalleryTitle","GalleryContent","PostTitle","PostContainer","IndexPage","data","posts","allContentfulMoztiqBlog","nodes","galleries","allContentfulGallery","quotes","allContentfulQuote","Layout","ContentContainer","map","quote","_html","content","author","key","Head","Seo","description"],"sourceRoot":""}