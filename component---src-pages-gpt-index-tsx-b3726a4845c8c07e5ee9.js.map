{"version":3,"file":"component---src-pages-gpt-index-tsx-b3726a4845c8c07e5ee9.js","mappings":"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","sources":["webpack://moztiq.github.io/./src/components/post/PostCard.tsx","webpack://moztiq.github.io/./src/components/post/PostList.tsx","webpack://moztiq.github.io/./src/pages/gpt/index.tsx"],"sourcesContent":["import Moment from 'react-moment';\nimport { extractText } from '../../utils/string.utils';\nimport { Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { IPostProps } from '../../interface/interfaces';\n\nconst Post = styled.li`\n  padding: 3rem;\n  margin-top: 40px;\n  background-color: ${(props) => props.theme.colors.white};\n  box-shadow: 0 0 0 1px rgba(23, 23, 23, 0.05);\n  border-radius: 0.5rem;\n  transition: all 0.2s;\n\n  @media screen and (max-width: 430px) {\n    padding: 1.5rem;\n  }\n\n  &:hover {\n    box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.15);\n  }\n`;\n\nconst Title = styled.h1`\n  margin-bottom: 20px;\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: #484848;\n  text-align: center;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  padding: 5px 0;\n`;\n\nconst PublishDateLine = styled.div`\n  height: 15px;\n  border-bottom: 1px solid gainsboro;\n  position: relative;\n  display: flex;\n  justify-content: center;\n`;\n\nconst PublishDate = styled.div`\n  font-size: 0.8rem;\n  font-weight: bold;\n  letter-spacing: 1.5px;\n  width: 150px;\n  height: 30px;\n  color: ${(props) => props.theme.colors.accentColor};\n  background-color: ${(props) => props.theme.colors.white};\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 50px;\n`;\n\nconst HeaderImage = styled.div<{ url: string }>`\n  width: 225px;\n  min-width: 225px;\n  margin-right: 20px;\n  height: 180px;\n  background-image: url(${(props) => props.url});\n  background-size: cover;\n  border-radius: 10px;\n  border: 1px solid ${(props) => props.theme.colors.gray200};\n\n  @media screen and (max-width: 1024px) {\n    width: 125px;\n    min-width: 125px;\n    margin-right: 10px;\n  }\n`;\n\nconst ContentTextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ContentText = styled.p`\n  font-size: 0.95rem;\n  color: #484848;\n  line-height: 1.7;\n  text-decoration: none;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 100%;\n  display: -webkit-box;\n  -webkit-line-clamp: 5;\n  -webkit-box-orient: vertical;\n  text-align: justify;\n  overflow-wrap: anywhere;\n`;\n\nconst TagList = styled.ul`\n  margin-top: 10px;\n  display: flex;\n  align-items: center;\n`;\n\nconst Tag = styled.li`\n  padding: 5px 10px;\n  margin-right: 10px;\n  font-size: 0.9rem;\n  border-radius: 5px;\n  color: ${(props) => props.theme.colors.gray600};\n  background-color: ${(props) => props.theme.colors.gray100};\n`;\n\nexport default function PostCard({ post }: { post: IPostProps }) {\n  return (\n    <Link to={`/post/${post.slug}`}>\n      <Post>\n        <Title>{post.title}</Title>\n        <PublishDateLine>\n          <PublishDate>\n            <Moment format=\"MMM D, YYYY\">{post.releaseDate}</Moment>\n          </PublishDate>\n        </PublishDateLine>\n        <ContentWrapper>\n          {post.headerImage?.url && (\n            <HeaderImage url={post.headerImage?.url || ''} />\n          )}\n          <ContentTextWrapper>\n            <ContentText>\n              {/*{post.contents.childMarkdownRemark.excerpt}*/}\n              {extractText(post.contents.childMarkdownRemark.html)}\n            </ContentText>\n            <TagList>\n              {post.tag.map((item, idx) => (\n                <Tag key={idx}>#{item}</Tag>\n              ))}\n            </TagList>\n          </ContentTextWrapper>\n        </ContentWrapper>\n      </Post>\n    </Link>\n  );\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport PostCard from './PostCard';\nimport { IPostProps } from '../../interface/interfaces';\n\nconst PostListWrapper = styled.ul`\n  width: 75%;\n  a {\n    text-decoration: none;\n  }\n  padding-bottom: 50px;\n\n  @media screen and (max-width: 768px) {\n    width: 95%;\n  }\n`;\n\nexport default function PostList({ posts }: { posts: IPostProps[] }) {\n  return (\n    <PostListWrapper>\n      {posts &&\n        posts.map((post: IPostProps) => (\n          <PostCard key={post.slug} post={post} />\n        ))}\n    </PostListWrapper>\n  );\n}\n","import * as React from 'react';\nimport type { PageProps } from 'gatsby';\nimport { graphql } from 'gatsby';\nimport Layout from '../../components/Layout';\nimport PostList from '../../components/post/PostList';\nimport ContentContainer from '../../components/ContentContainer';\nimport Seo from '../../components/Seo';\nimport styled from 'styled-components';\nimport { Category, SectionTitle } from '../../constants/common.constant';\n\nconst PostListContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport default function GptPage({ data }: PageProps<Queries.BookListQuery>) {\n  const posts = data.allContentfulMoztiqBlog.nodes;\n  return (\n    <Layout>\n      <ContentContainer title={SectionTitle(Category.GPT)}>\n        <PostListContainer>\n          <PostList posts={posts as any} />\n        </PostListContainer>\n      </ContentContainer>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query BookList {\n    allContentfulMoztiqBlog(\n      filter: { category: { eq: \"gpt\" } }\n      sort: { createdAt: DESC }\n    ) {\n      nodes {\n        id\n        title\n        slug\n        category\n        releaseDate\n        headerImage {\n          url\n        }\n        contents {\n          childMarkdownRemark {\n            html\n            excerpt\n          }\n        }\n        tag\n      }\n    }\n  }\n`;\n\nexport const Head = () => {\n  return <Seo title={'GPT SECTION'} description={'GPT SECTION'} url={`/gpt`} />;\n};\n"],"names":["Post","styled","li","withConfig","displayName","componentId","props","theme","colors","white","Title","h1","PublishDateLine","div","PublishDate","accentColor","ContentWrapper","HeaderImage","url","gray200","ContentTextWrapper","ContentText","p","TagList","ul","Tag","gray600","gray100","PostCard","_ref","_post$headerImage","_post$headerImage2","post","React","Link","to","slug","title","Moment","format","releaseDate","headerImage","extractText","contents","childMarkdownRemark","html","tag","map","item","idx","key","PostListWrapper","PostList","posts","PostListContainer","GptPage","data","allContentfulMoztiqBlog","nodes","Layout","ContentContainer","SectionTitle","Category","GPT","Head","Seo","description"],"sourceRoot":""}