{"version":3,"file":"component---src-pages-ai-gallery-tsx-3506b6433b8d4a0706ef.js","mappings":"0LAKA,MAAMA,EAAUC,EAAAA,QAAOC,GAAEC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAATJ,CAAS,wMACEK,GAAUA,EAAMC,QAYrCC,EAAQP,EAAAA,QAAOQ,KAAIN,WAAA,CAAAC,YAAA,qBAAAC,YAAA,eAAXJ,CAAW,gRAWbK,GAAUA,EAAMI,MAAMC,OAAOC,QAK1B,SAASC,EAAWC,GAA2C,IAA1C,QAAEC,GAAqCD,EACzE,OACEE,EAAAA,cAACC,EAAAA,KAAI,CAACC,GAAE,YAAcH,EAAQI,MAC5BH,EAAAA,cAAChB,EAAO,CAACO,MAAOQ,EAAQK,YAAYC,KAClCL,EAAAA,cAACR,EAAK,KAAEO,EAAQO,QAIxB,C,8JCrCA,MAAMC,EAAqBtB,EAAAA,QAAOuB,GAAErB,WAAA,CAAAC,YAAA,kCAAAC,YAAA,eAATJ,CAAS,gUAuBrB,SAASwB,EAAYnB,GAClC,OACEU,EAAAA,cAACO,EAAkB,KAChBjB,EAAMoB,MACLpB,EAAMoB,KAAKC,KAAKZ,GACdC,EAAAA,cAACH,EAAAA,EAAW,CAACe,IAAKb,EAAQI,KAAMJ,QAASA,MAInD,CCvBA,MAAMc,EAAuB5B,EAAAA,QAAO6B,IAAG3B,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAAVJ,CAAU,0CAKxB,SAAS8B,EAAajB,GAEK,IAFJ,KACpCkB,GACsClB,EACtC,MAAMY,EAAOM,EAAKC,qBAAqBC,MACvC,OACElB,EAAAA,cAACmB,EAAAA,EAAQ,KACPnB,EAAAA,cAACa,EAAoB,KACnBb,EAAAA,cAACS,EAAW,CAACC,KAAMA,KAI3B,CAEO,MA2BMU,EAAOA,IAEhBpB,EAAAA,cAACqB,EAAAA,EAAG,CACFf,OAAOgB,EAAAA,EAAAA,IAAaC,EAAAA,GAASC,IAC7BC,aAAaC,EAAAA,EAAAA,IAAmBH,EAAAA,GAASC,IACzCnB,IAAG,O","sources":["webpack://moztiq.github.io/./src/components/gallery/GalleryCard.tsx","webpack://moztiq.github.io/./src/components/gallery/GalleryList.tsx","webpack://moztiq.github.io/./src/pages/ai/gallery.tsx"],"sourcesContent":["import { Link } from 'gatsby';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { IGalleryProps } from '../../interface/interfaces';\n\nconst Gallery = styled.li<{ image: string }>`\n  background-image: url(${(props) => props.image});\n  background-size: cover;\n  box-shadow: 0 2px 3px 1px rgba(0, 0, 0, 0.15);\n  border-radius: 0.5rem;\n  transition: all 0.2s;\n  height: 200px;\n\n  &:hover {\n    box-shadow: 0 5px 10px 0 rgba(0, 0, 0, 0.35);\n  }\n`;\n\nconst Title = styled.span`\n  margin-top: 20px;\n  padding: 0 10px;\n  line-height: 2.5;\n  font-size: 0.85rem;\n  text-align: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  color: ${(props) => props.theme.colors.white};\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 0.5rem 0.5rem 0 0;\n`;\n\nexport default function GalleryCard({ gallery }: { gallery: IGalleryProps }) {\n  return (\n    <Link to={`/gallery/${gallery.slug}`}>\n      <Gallery image={gallery.headerImage.url}>\n        <Title>{gallery.title}</Title>\n      </Gallery>\n    </Link>\n  );\n}\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport GalleryCard from './GalleryCard';\nimport { IGalleryProps } from '../../interface/interfaces';\n\nconst GalleryListWrapper = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-column-gap: 30px;\n  grid-row-gap: 30px;\n  width: 85%;\n  a {\n    text-decoration: none;\n  }\n  margin: 30px 0;\n\n  @media screen and (max-width: 1024px) {\n    width: 95%;\n    grid-template-columns: repeat(2, 1fr);\n    grid-column-gap: 20px;\n  }\n\n  @media screen and (max-width: 430px) {\n    width: 95%;\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport default function GalleryList(props: { list: IGalleryProps[] }) {\n  return (\n    <GalleryListWrapper>\n      {props.list &&\n        props.list.map((gallery: IGalleryProps) => (\n          <GalleryCard key={gallery.slug} gallery={gallery} />\n        ))}\n    </GalleryListWrapper>\n  );\n}\n","import * as React from 'react';\nimport type { PageProps } from 'gatsby';\nimport { graphql } from 'gatsby';\nimport PostList from '../../components/post/PostList';\nimport Seo from '../../components/Seo';\nimport {\n  Category,\n  SectionDescription,\n  SectionTitle,\n} from '../../constants/common.constant';\nimport AiLayout from '../../components/layout/AiLayout';\nimport styled from 'styled-components';\nimport GalleryList from '../../components/gallery/GalleryList';\n\nconst GalleryListContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport default function AiGalleryPage({\n  data,\n}: PageProps<Queries.AiGalleryListQuery>) {\n  const list = data.allContentfulGallery.nodes;\n  return (\n    <AiLayout>\n      <GalleryListContainer>\n        <GalleryList list={list as any} />\n      </GalleryListContainer>\n    </AiLayout>\n  );\n}\n\nexport const query = graphql`\n  query AiGalleryList {\n    allContentfulGallery(\n      filter: { category: { eq: \"ai\" } }\n      sort: { createdAt: DESC }\n    ) {\n      nodes {\n        id\n        title\n        slug\n        category\n        author\n        headerImage {\n          url\n        }\n        contents {\n          childMarkdownRemark {\n            html\n            excerpt\n          }\n        }\n        tag\n      }\n    }\n  }\n`;\n\nexport const Head = () => {\n  return (\n    <Seo\n      title={SectionTitle(Category.AI)}\n      description={SectionDescription(Category.AI)}\n      url={`/ai`}\n    />\n  );\n};\n"],"names":["Gallery","styled","li","withConfig","displayName","componentId","props","image","Title","span","theme","colors","white","GalleryCard","_ref","gallery","React","Link","to","slug","headerImage","url","title","GalleryListWrapper","ul","GalleryList","list","map","key","GalleryListContainer","div","AiGalleryPage","data","allContentfulGallery","nodes","AiLayout","Head","Seo","SectionTitle","Category","AI","description","SectionDescription"],"sourceRoot":""}