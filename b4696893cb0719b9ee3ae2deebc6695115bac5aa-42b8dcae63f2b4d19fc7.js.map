{"version":3,"file":"b4696893cb0719b9ee3ae2deebc6695115bac5aa-42b8dcae63f2b4d19fc7.js","mappings":"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","sources":["webpack://moztiq.github.io/./src/components/Navigation.tsx","webpack://moztiq.github.io/./src/components/Layout.tsx","webpack://moztiq.github.io/./src/components/Seo.tsx","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://moztiq.github.io/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import React, { Fragment, useContext } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { motion } from 'framer-motion';\nimport { Link } from 'gatsby';\n\nconst MenuWrapper = styled.nav`\n  width: 275px;\n  min-width: 275px;\n  height: 100vh;\n  background-color: ${(props) => props.theme.colors.primary};\n  padding: 30px 0 0 0;\n  position: relative;\n`;\n\nconst Icons = styled.div`\n  height: 35px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  a {\n    margin: 0 10px;\n  }\n`;\n\nconst IntroTitle = styled(motion.div)`\n  font-size: 1.7rem;\n  font-weight: 600;\n  letter-spacing: 5px;\n  color: ${(props) => props.theme.colors.light};\n  margin-top: 120px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst IntroDescription = styled(motion.div)`\n  font-size: 0.8rem;\n  letter-spacing: 3px;\n  color: ${(props) => props.theme.colors.light};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 10px 0 70px 0;\n`;\n\nconst MenuList = styled.ul`\n  a {\n    text-decoration: none;\n  }\n`;\n\nconst MenuItem = styled(motion.li)`\n  color: ${(props) => props.theme.colors.primary};\n  height: 80px;\n  font-size: 2rem;\n  font-weight: 800;\n  letter-spacing: 5px;\n  border-bottom: 1px dashed ${(props) => props.theme.colors.light};\n  padding: 10px 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.background};\n`;\n\nconst HomeIcon = styled(motion.svg)`\n  font-size: 1.2rem;\n`;\n\nconst GithubIcon = styled(motion.svg)`\n  font-size: 1.4rem;\n`;\n\nconst CopyRight = styled.div`\n  width: 100%;\n  position: absolute;\n  color: ${(props) => props.theme.colors.light};\n  bottom: 30px;\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 0.7rem;\n  letter-spacing: 3px;\n`;\n\nfunction Navigation() {\n  const theme = useContext(ThemeContext);\n  const menuList = ['tech', 'book'];\n  const location = typeof window !== 'undefined' ? window.location.href : '';\n\n  const menuItemVariants = {\n    initial: {\n      color: theme?.colors.light,\n      backgroundColor: theme?.colors.primary,\n    },\n    whileHover: {\n      color: theme?.colors.primary,\n      backgroundColor: theme?.colors.light,\n    },\n  };\n\n  return (\n    <MenuWrapper>\n      <Icons>\n        <Link to={`/`}>\n          <HomeIcon\n            xmlns=\"http://www.w3.org/2000/svg\"\n            height=\"1em\"\n            viewBox=\"0 0 576 512\"\n          >\n            <path d=\"M543.8 287.6c17 0 32-14 32-32.1c1-9-3-17-11-24L512 185V64c0-17.7-14.3-32-32-32H448c-17.7 0-32 14.3-32 32v36.7L309.5 7c-6-5-14-7-21-7s-15 1-22 8L10 231.5c-7 7-10 15-10 24c0 18 14 32.1 32 32.1h32v69.7c-.1 .9-.1 1.8-.1 2.8V472c0 22.1 17.9 40 40 40h16c1.2 0 2.4-.1 3.6-.2c1.5 .1 3 .2 4.5 .2H160h24c22.1 0 40-17.9 40-40V448 384c0-17.7 14.3-32 32-32h64c17.7 0 32 14.3 32 32v64 24c0 22.1 17.9 40 40 40h24 32.5c1.4 0 2.8 0 4.2-.1c1.1 .1 2.2 .1 3.3 .1h16c22.1 0 40-17.9 40-40V455.8c.3-2.6 .5-5.3 .5-8.1l-.7-160.2h32z\" />\n          </HomeIcon>\n        </Link>\n        <a href=\"https://github.com/moztiq\" target=\"_blank\">\n          {/*<FontAwesomeIcon icon={faGithub} size=\"2x\" />*/}\n          <GithubIcon\n            xmlns=\"http://www.w3.org/2000/svg\"\n            height=\"1em\"\n            viewBox=\"0 0 496 512\"\n          >\n            <path d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\" />\n          </GithubIcon>\n        </a>\n      </Icons>\n      <IntroTitle>MOZTIQ</IntroTitle>\n      <IntroDescription drag>Life is a journey ..</IntroDescription>\n      <MenuList>\n        {menuList.map((menu, idx) => (\n          <Fragment key={idx}>\n            {location.includes(menu) ? (\n              <MenuItem>{menu.toUpperCase()}</MenuItem>\n            ) : (\n              <Link to={`/${menu}`}>\n                <MenuItem\n                  variants={menuItemVariants}\n                  initial=\"initial\"\n                  whileHover=\"whileHover\"\n                >\n                  {menu.toUpperCase()}\n                </MenuItem>\n              </Link>\n            )}\n          </Fragment>\n        ))}\n      </MenuList>\n      <CopyRight>Designed by MOZTIQ</CopyRight>\n    </MenuWrapper>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Navigation from './Navigation';\n\nconst Main = styled.main`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  font-family: 'Noto Sans KR', sans-serif;\n  position: fixed;\n`;\n\ninterface ILayoutProps {\n  children: React.ReactNode;\n}\nexport default function Layout({ children }: ILayoutProps) {\n  return (\n    <Main>\n      <Navigation />\n      {children}\n    </Main>\n  );\n}\n","import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\n\ninterface ISeoProps {\n  title: string;\n}\n\nconst SEO_QUERY = graphql`\n  query SeoData {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n\nexport default function Seo({ title }: ISeoProps) {\n  const data = useStaticQuery(SEO_QUERY);\n\n  return (\n    <title>\n      {title} | {data.site?.siteMetadata?.title}\n    </title>\n  );\n}\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.5\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...transition,\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.5\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.5 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MenuWrapper","styled","nav","withConfig","displayName","componentId","props","theme","colors","primary","Icons","div","IntroTitle","motion","light","IntroDescription","MenuList","ul","MenuItem","li","background","HomeIcon","svg","GithubIcon","CopyRight","useContext","ThemeContext","location","window","href","menuItemVariants","initial","color","backgroundColor","whileHover","React","Link","to","xmlns","height","viewBox","d","target","drag","map","menu","idx","Fragment","key","includes","toUpperCase","variants","Main","main","Layout","_ref","children","Navigation","SEO_QUERY","Seo","_data$site","_data$site$siteMetada","title","data","useStaticQuery","site","siteMetadata","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","useCreateMotionContext","context","undefined","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","canHandoff","HandoffAppearAnimations","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","charAt","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","noop","any","Queue","constructor","this","order","scheduled","add","process","push","remove","index","splice","delete","clear","stepsOrder","schedule","cancel","cancelFrame","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","keepAlive","immediate","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","performance","now","createRenderBatcher","requestAnimationFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","from","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","syncStart","timeline","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute"],"sourceRoot":""}